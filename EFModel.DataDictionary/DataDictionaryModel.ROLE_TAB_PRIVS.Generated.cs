//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;

namespace EFModel.DataDictionary
{

    /// <summary>
    /// Table privileges granted to roles
    /// </summary>
    public partial class ROLE_TAB_PRIVS : ICloneable, INotifyPropertyChanged    {

        public ROLE_TAB_PRIVS()
        {
        }

        #region Properties
    
        /// <summary>
        /// Role Name
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string ROLE
        {
            get
            {
                return _ROLE;
            }
            set
            {
                if (_ROLE != value)
                {
                    _ROLE = value;
                    OnPropertyChanged("ROLE");
                }
            }
        }
        private string _ROLE;

    
        /// <summary>
        /// There are no comments for OWNER in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string OWNER
        {
            get
            {
                return _OWNER;
            }
            set
            {
                if (_OWNER != value)
                {
                    _OWNER = value;
                    OnPropertyChanged("OWNER");
                }
            }
        }
        private string _OWNER;

    
        /// <summary>
        /// Table Name or Sequence Name
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string TABLE_NAME
        {
            get
            {
                return _TABLE_NAME;
            }
            set
            {
                if (_TABLE_NAME != value)
                {
                    _TABLE_NAME = value;
                    OnPropertyChanged("TABLE_NAME");
                }
            }
        }
        private string _TABLE_NAME;

    
        /// <summary>
        /// Column Name if applicable
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public virtual string COLUMN_NAME
        {
            get
            {
                return _COLUMN_NAME;
            }
            set
            {
                if (_COLUMN_NAME != value)
                {
                    _COLUMN_NAME = value;
                    OnPropertyChanged("COLUMN_NAME");
                }
            }
        }
        private string _COLUMN_NAME;

    
        /// <summary>
        /// Table Privilege
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(40)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string PRIVILEGE
        {
            get
            {
                return _PRIVILEGE;
            }
            set
            {
                if (_PRIVILEGE != value)
                {
                    _PRIVILEGE = value;
                    OnPropertyChanged("PRIVILEGE");
                }
            }
        }
        private string _PRIVILEGE;

    
        /// <summary>
        /// There are no comments for GRANTABLE in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public virtual string GRANTABLE
        {
            get
            {
                return _GRANTABLE;
            }
            set
            {
                if (_GRANTABLE != value)
                {
                    _GRANTABLE = value;
                    OnPropertyChanged("GRANTABLE");
                }
            }
        }
        private string _GRANTABLE;


        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            ROLE_TAB_PRIVS obj = new ROLE_TAB_PRIVS();
            obj.ROLE = ROLE;
            obj.OWNER = OWNER;
            obj.TABLE_NAME = TABLE_NAME;
            obj.COLUMN_NAME = COLUMN_NAME;
            obj.PRIVILEGE = PRIVILEGE;
            obj.GRANTABLE = GRANTABLE;
            return obj;
        }

        #endregion
    
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
