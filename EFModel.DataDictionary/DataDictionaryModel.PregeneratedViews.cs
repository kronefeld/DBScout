//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 07.07.2015 09:05:25
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Data.Entity.Core.Metadata.Edm;
using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(typeof(EFModel.DataDictionary.DataDictionaryDbContext), typeof(EntityMappingGeneratedViews.ViewsForBaseEntitySetsc2204429289c442eaedd7bfdc499a9f6))]
	
namespace EntityMappingGeneratedViews
{
    [System.CodeDom.Compiler.GeneratedCode("Devart Entity Developer", "")]
	public sealed class ViewsForBaseEntitySetsc2204429289c442eaedd7bfdc499a9f6 : DbMappingViewCache {
	
		private static Dictionary<string, DbMappingView> cachedViews = null;
		private static object syncRoot = new object();

		public ViewsForBaseEntitySetsc2204429289c442eaedd7bfdc499a9f6() {
		}
		
		public override string MappingHashValue {
		  get {
 		    return "91aea4d30581d9de03f89111a79565063b544010bc525925ac4e838b565965f8";
		  }
	    }

		public override DbMappingView GetView(EntitySetBase entitySet) {
		
			if (cachedViews == null) {
			  lock (syncRoot) {
			    if (cachedViews == null)
			      FillCache();
			  }
			}

			DbMappingView view;
			cachedViews.TryGetValue(entitySet.EntityContainer.Name + "." + entitySet.Name, out view);
			return view;
		}

		private static void FillCache() {

			cachedViews = new Dictionary<string, DbMappingView>();
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_ROLES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_ROLES
        [EFModel.DataDictionary.Store.DBA_ROLES](T1.[DBA_ROLES.ROLE], T1.[DBA_ROLES.PASSWORD_REQUIRED])
    FROM (
        SELECT 
            T.ROLE AS [DBA_ROLES.ROLE], 
            T.PASSWORD_REQUIRED AS [DBA_ROLES.PASSWORD_REQUIRED], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_ROLES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_ROLES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_ROLES
        [EFModel.DataDictionary.DBA_ROLES](T1.[DBA_ROLES.ROLE], T1.[DBA_ROLES.PASSWORD_REQUIRED])
    FROM (
        SELECT 
            T.ROLE AS [DBA_ROLES.ROLE], 
            T.PASSWORD_REQUIRED AS [DBA_ROLES.PASSWORD_REQUIRED], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_ROLES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_COL_COMMENTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_COL_COMMENTS
        [EFModel.DataDictionary.Store.DBA_COL_COMMENTS](T1.[DBA_COL_COMMENTS.OWNER], T1.[DBA_COL_COMMENTS.TABLE_NAME], T1.[DBA_COL_COMMENTS.COLUMN_NAME], T1.[DBA_COL_COMMENTS.COMMENTS])
    FROM (
        SELECT 
            T.OWNER AS [DBA_COL_COMMENTS.OWNER], 
            T.TABLE_NAME AS [DBA_COL_COMMENTS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_COL_COMMENTS.COLUMN_NAME], 
            T.COMMENTS AS [DBA_COL_COMMENTS.COMMENTS], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_COL_COMMENTS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_COL_COMMENTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_COL_COMMENTS
        [EFModel.DataDictionary.DBA_COL_COMMENTS](T1.[DBA_COL_COMMENTS.OWNER], T1.[DBA_COL_COMMENTS.TABLE_NAME], T1.[DBA_COL_COMMENTS.COLUMN_NAME], T1.[DBA_COL_COMMENTS.COMMENTS])
    FROM (
        SELECT 
            T.OWNER AS [DBA_COL_COMMENTS.OWNER], 
            T.TABLE_NAME AS [DBA_COL_COMMENTS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_COL_COMMENTS.COLUMN_NAME], 
            T.COMMENTS AS [DBA_COL_COMMENTS.COMMENTS], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_COL_COMMENTS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_COL_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_COL_PRIVS
        [EFModel.DataDictionary.Store.DBA_COL_PRIVS](T1.[DBA_COL_PRIVS.GRANTEE], T1.[DBA_COL_PRIVS.OWNER], T1.[DBA_COL_PRIVS.TABLE_NAME], T1.[DBA_COL_PRIVS.COLUMN_NAME], T1.[DBA_COL_PRIVS.GRANTOR], T1.[DBA_COL_PRIVS.PRIVILEGE], T1.[DBA_COL_PRIVS.GRANTABLE])
    FROM (
        SELECT 
            T.GRANTEE AS [DBA_COL_PRIVS.GRANTEE], 
            T.OWNER AS [DBA_COL_PRIVS.OWNER], 
            T.TABLE_NAME AS [DBA_COL_PRIVS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_COL_PRIVS.COLUMN_NAME], 
            T.GRANTOR AS [DBA_COL_PRIVS.GRANTOR], 
            T.PRIVILEGE AS [DBA_COL_PRIVS.PRIVILEGE], 
            T.GRANTABLE AS [DBA_COL_PRIVS.GRANTABLE], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_COL_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_COL_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_COL_PRIVS
        [EFModel.DataDictionary.DBA_COL_PRIVS](T1.[DBA_COL_PRIVS.GRANTEE], T1.[DBA_COL_PRIVS.OWNER], T1.[DBA_COL_PRIVS.TABLE_NAME], T1.[DBA_COL_PRIVS.COLUMN_NAME], T1.[DBA_COL_PRIVS.GRANTOR], T1.[DBA_COL_PRIVS.PRIVILEGE], T1.[DBA_COL_PRIVS.GRANTABLE])
    FROM (
        SELECT 
            T.GRANTEE AS [DBA_COL_PRIVS.GRANTEE], 
            T.OWNER AS [DBA_COL_PRIVS.OWNER], 
            T.TABLE_NAME AS [DBA_COL_PRIVS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_COL_PRIVS.COLUMN_NAME], 
            T.GRANTOR AS [DBA_COL_PRIVS.GRANTOR], 
            T.PRIVILEGE AS [DBA_COL_PRIVS.PRIVILEGE], 
            T.GRANTABLE AS [DBA_COL_PRIVS.GRANTABLE], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_COL_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_DB_LINKS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_DB_LINKS
        [EFModel.DataDictionary.Store.DBA_DB_LINKS](T1.[DBA_DB_LINKS.OWNER], T1.[DBA_DB_LINKS.DB_LINK], T1.[DBA_DB_LINKS.USERNAME], T1.[DBA_DB_LINKS.HOST], T1.[DBA_DB_LINKS.CREATED])
    FROM (
        SELECT 
            T.OWNER AS [DBA_DB_LINKS.OWNER], 
            T.DB_LINK AS [DBA_DB_LINKS.DB_LINK], 
            T.USERNAME AS [DBA_DB_LINKS.USERNAME], 
            T.HOST AS [DBA_DB_LINKS.HOST], 
            T.CREATED AS [DBA_DB_LINKS.CREATED], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_DB_LINKS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_DB_LINKS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_DB_LINKS
        [EFModel.DataDictionary.DBA_DB_LINKS](T1.[DBA_DB_LINKS.OWNER], T1.[DBA_DB_LINKS.DB_LINK], T1.[DBA_DB_LINKS.USERNAME], T1.[DBA_DB_LINKS.HOST], T1.[DBA_DB_LINKS.CREATED])
    FROM (
        SELECT 
            T.OWNER AS [DBA_DB_LINKS.OWNER], 
            T.DB_LINK AS [DBA_DB_LINKS.DB_LINK], 
            T.USERNAME AS [DBA_DB_LINKS.USERNAME], 
            T.HOST AS [DBA_DB_LINKS.HOST], 
            T.CREATED AS [DBA_DB_LINKS.CREATED], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_DB_LINKS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_INDEXES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_INDEXES
        [EFModel.DataDictionary.Store.DBA_INDEXES](T1.[DBA_INDEXES.OWNER], T1.[DBA_INDEXES.INDEX_NAME], T1.[DBA_INDEXES.INDEX_TYPE], T1.[DBA_INDEXES.TABLE_OWNER], T1.[DBA_INDEXES.TABLE_NAME], T1.[DBA_INDEXES.TABLE_TYPE], T1.[DBA_INDEXES.UNIQUENESS], T1.[DBA_INDEXES.COMPRESSION], T1.[DBA_INDEXES.PREFIX_LENGTH], T1.[DBA_INDEXES.TABLESPACE_NAME], T1.[DBA_INDEXES.INI_TRANS], T1.[DBA_INDEXES.MAX_TRANS], T1.[DBA_INDEXES.INITIAL_EXTENT], T1.[DBA_INDEXES.NEXT_EXTENT], T1.[DBA_INDEXES.MIN_EXTENTS], T1.[DBA_INDEXES.MAX_EXTENTS], T1.[DBA_INDEXES.PCT_INCREASE], T1.[DBA_INDEXES.PCT_THRESHOLD], T1.[DBA_INDEXES.INCLUDE_COLUMN], T1.[DBA_INDEXES.FREELISTS], T1.[DBA_INDEXES.FREELIST_GROUPS], T1.[DBA_INDEXES.PCT_FREE], T1.[DBA_INDEXES.LOGGING], T1.[DBA_INDEXES.BLEVEL], T1.[DBA_INDEXES.LEAF_BLOCKS], T1.[DBA_INDEXES.DISTINCT_KEYS], T1.[DBA_INDEXES.AVG_LEAF_BLOCKS_PER_KEY], T1.[DBA_INDEXES.AVG_DATA_BLOCKS_PER_KEY], T1.[DBA_INDEXES.CLUSTERING_FACTOR], T1.[DBA_INDEXES.STATUS], T1.[DBA_INDEXES.NUM_ROWS], T1.[DBA_INDEXES.SAMPLE_SIZE], T1.[DBA_INDEXES.LAST_ANALYZED], T1.[DBA_INDEXES.DEGREE], T1.[DBA_INDEXES.INSTANCES], T1.[DBA_INDEXES.PARTITIONED], T1.[DBA_INDEXES.TEMPORARY], T1.[DBA_INDEXES.GENERATED], T1.[DBA_INDEXES.SECONDARY], T1.[DBA_INDEXES.BUFFER_POOL], T1.[DBA_INDEXES.USER_STATS], T1.[DBA_INDEXES.DURATION], T1.[DBA_INDEXES.PCT_DIRECT_ACCESS], T1.[DBA_INDEXES.ITYP_OWNER], T1.[DBA_INDEXES.ITYP_NAME], T1.[DBA_INDEXES.PARAMETERS], T1.[DBA_INDEXES.GLOBAL_STATS], T1.[DBA_INDEXES.DOMIDX_STATUS], T1.[DBA_INDEXES.DOMIDX_OPSTATUS], T1.[DBA_INDEXES.FUNCIDX_STATUS], T1.[DBA_INDEXES.JOIN_INDEX], T1.[DBA_INDEXES.IOT_REDUNDANT_PKEY_ELIM], T1.[DBA_INDEXES.DROPPED])
    FROM (
        SELECT 
            T.OWNER AS [DBA_INDEXES.OWNER], 
            T.INDEX_NAME AS [DBA_INDEXES.INDEX_NAME], 
            T.INDEX_TYPE AS [DBA_INDEXES.INDEX_TYPE], 
            T.TABLE_OWNER AS [DBA_INDEXES.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_INDEXES.TABLE_NAME], 
            T.TABLE_TYPE AS [DBA_INDEXES.TABLE_TYPE], 
            T.UNIQUENESS AS [DBA_INDEXES.UNIQUENESS], 
            T.COMPRESSION AS [DBA_INDEXES.COMPRESSION], 
            T.PREFIX_LENGTH AS [DBA_INDEXES.PREFIX_LENGTH], 
            T.TABLESPACE_NAME AS [DBA_INDEXES.TABLESPACE_NAME], 
            T.INI_TRANS AS [DBA_INDEXES.INI_TRANS], 
            T.MAX_TRANS AS [DBA_INDEXES.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_INDEXES.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_INDEXES.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_INDEXES.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_INDEXES.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_INDEXES.PCT_INCREASE], 
            T.PCT_THRESHOLD AS [DBA_INDEXES.PCT_THRESHOLD], 
            T.INCLUDE_COLUMN AS [DBA_INDEXES.INCLUDE_COLUMN], 
            T.FREELISTS AS [DBA_INDEXES.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_INDEXES.FREELIST_GROUPS], 
            T.PCT_FREE AS [DBA_INDEXES.PCT_FREE], 
            T.LOGGING AS [DBA_INDEXES.LOGGING], 
            T.BLEVEL AS [DBA_INDEXES.BLEVEL], 
            T.LEAF_BLOCKS AS [DBA_INDEXES.LEAF_BLOCKS], 
            T.DISTINCT_KEYS AS [DBA_INDEXES.DISTINCT_KEYS], 
            T.AVG_LEAF_BLOCKS_PER_KEY AS [DBA_INDEXES.AVG_LEAF_BLOCKS_PER_KEY], 
            T.AVG_DATA_BLOCKS_PER_KEY AS [DBA_INDEXES.AVG_DATA_BLOCKS_PER_KEY], 
            T.CLUSTERING_FACTOR AS [DBA_INDEXES.CLUSTERING_FACTOR], 
            T.STATUS AS [DBA_INDEXES.STATUS], 
            T.NUM_ROWS AS [DBA_INDEXES.NUM_ROWS], 
            T.SAMPLE_SIZE AS [DBA_INDEXES.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_INDEXES.LAST_ANALYZED], 
            T.DEGREE AS [DBA_INDEXES.DEGREE], 
            T.INSTANCES AS [DBA_INDEXES.INSTANCES], 
            T.PARTITIONED AS [DBA_INDEXES.PARTITIONED], 
            T.TEMPORARY AS [DBA_INDEXES.TEMPORARY], 
            T.GENERATED AS [DBA_INDEXES.GENERATED], 
            T.SECONDARY AS [DBA_INDEXES.SECONDARY], 
            T.BUFFER_POOL AS [DBA_INDEXES.BUFFER_POOL], 
            T.USER_STATS AS [DBA_INDEXES.USER_STATS], 
            T.DURATION AS [DBA_INDEXES.DURATION], 
            T.PCT_DIRECT_ACCESS AS [DBA_INDEXES.PCT_DIRECT_ACCESS], 
            T.ITYP_OWNER AS [DBA_INDEXES.ITYP_OWNER], 
            T.ITYP_NAME AS [DBA_INDEXES.ITYP_NAME], 
            T.PARAMETERS AS [DBA_INDEXES.PARAMETERS], 
            T.GLOBAL_STATS AS [DBA_INDEXES.GLOBAL_STATS], 
            T.DOMIDX_STATUS AS [DBA_INDEXES.DOMIDX_STATUS], 
            T.DOMIDX_OPSTATUS AS [DBA_INDEXES.DOMIDX_OPSTATUS], 
            T.FUNCIDX_STATUS AS [DBA_INDEXES.FUNCIDX_STATUS], 
            T.JOIN_INDEX AS [DBA_INDEXES.JOIN_INDEX], 
            T.IOT_REDUNDANT_PKEY_ELIM AS [DBA_INDEXES.IOT_REDUNDANT_PKEY_ELIM], 
            T.DROPPED AS [DBA_INDEXES.DROPPED], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_INDEXES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_INDEXES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_INDEXES
        [EFModel.DataDictionary.DBA_INDEXES](T1.[DBA_INDEXES.OWNER], T1.[DBA_INDEXES.INDEX_NAME], T1.[DBA_INDEXES.INDEX_TYPE], T1.[DBA_INDEXES.TABLE_OWNER], T1.[DBA_INDEXES.TABLE_NAME], T1.[DBA_INDEXES.TABLE_TYPE], T1.[DBA_INDEXES.UNIQUENESS], T1.[DBA_INDEXES.COMPRESSION], T1.[DBA_INDEXES.PREFIX_LENGTH], T1.[DBA_INDEXES.TABLESPACE_NAME], T1.[DBA_INDEXES.INI_TRANS], T1.[DBA_INDEXES.MAX_TRANS], T1.[DBA_INDEXES.INITIAL_EXTENT], T1.[DBA_INDEXES.NEXT_EXTENT], T1.[DBA_INDEXES.MIN_EXTENTS], T1.[DBA_INDEXES.MAX_EXTENTS], T1.[DBA_INDEXES.PCT_INCREASE], T1.[DBA_INDEXES.PCT_THRESHOLD], T1.[DBA_INDEXES.INCLUDE_COLUMN], T1.[DBA_INDEXES.FREELISTS], T1.[DBA_INDEXES.FREELIST_GROUPS], T1.[DBA_INDEXES.PCT_FREE], T1.[DBA_INDEXES.LOGGING], T1.[DBA_INDEXES.BLEVEL], T1.[DBA_INDEXES.LEAF_BLOCKS], T1.[DBA_INDEXES.DISTINCT_KEYS], T1.[DBA_INDEXES.AVG_LEAF_BLOCKS_PER_KEY], T1.[DBA_INDEXES.AVG_DATA_BLOCKS_PER_KEY], T1.[DBA_INDEXES.CLUSTERING_FACTOR], T1.[DBA_INDEXES.STATUS], T1.[DBA_INDEXES.NUM_ROWS], T1.[DBA_INDEXES.SAMPLE_SIZE], T1.[DBA_INDEXES.LAST_ANALYZED], T1.[DBA_INDEXES.DEGREE], T1.[DBA_INDEXES.INSTANCES], T1.[DBA_INDEXES.PARTITIONED], T1.[DBA_INDEXES.TEMPORARY], T1.[DBA_INDEXES.GENERATED], T1.[DBA_INDEXES.SECONDARY], T1.[DBA_INDEXES.BUFFER_POOL], T1.[DBA_INDEXES.USER_STATS], T1.[DBA_INDEXES.DURATION], T1.[DBA_INDEXES.PCT_DIRECT_ACCESS], T1.[DBA_INDEXES.ITYP_OWNER], T1.[DBA_INDEXES.ITYP_NAME], T1.[DBA_INDEXES.PARAMETERS], T1.[DBA_INDEXES.GLOBAL_STATS], T1.[DBA_INDEXES.DOMIDX_STATUS], T1.[DBA_INDEXES.DOMIDX_OPSTATUS], T1.[DBA_INDEXES.FUNCIDX_STATUS], T1.[DBA_INDEXES.JOIN_INDEX], T1.[DBA_INDEXES.IOT_REDUNDANT_PKEY_ELIM], T1.[DBA_INDEXES.DROPPED])
    FROM (
        SELECT 
            T.OWNER AS [DBA_INDEXES.OWNER], 
            T.INDEX_NAME AS [DBA_INDEXES.INDEX_NAME], 
            T.INDEX_TYPE AS [DBA_INDEXES.INDEX_TYPE], 
            T.TABLE_OWNER AS [DBA_INDEXES.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_INDEXES.TABLE_NAME], 
            T.TABLE_TYPE AS [DBA_INDEXES.TABLE_TYPE], 
            T.UNIQUENESS AS [DBA_INDEXES.UNIQUENESS], 
            T.COMPRESSION AS [DBA_INDEXES.COMPRESSION], 
            T.PREFIX_LENGTH AS [DBA_INDEXES.PREFIX_LENGTH], 
            T.TABLESPACE_NAME AS [DBA_INDEXES.TABLESPACE_NAME], 
            T.INI_TRANS AS [DBA_INDEXES.INI_TRANS], 
            T.MAX_TRANS AS [DBA_INDEXES.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_INDEXES.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_INDEXES.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_INDEXES.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_INDEXES.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_INDEXES.PCT_INCREASE], 
            T.PCT_THRESHOLD AS [DBA_INDEXES.PCT_THRESHOLD], 
            T.INCLUDE_COLUMN AS [DBA_INDEXES.INCLUDE_COLUMN], 
            T.FREELISTS AS [DBA_INDEXES.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_INDEXES.FREELIST_GROUPS], 
            T.PCT_FREE AS [DBA_INDEXES.PCT_FREE], 
            T.LOGGING AS [DBA_INDEXES.LOGGING], 
            T.BLEVEL AS [DBA_INDEXES.BLEVEL], 
            T.LEAF_BLOCKS AS [DBA_INDEXES.LEAF_BLOCKS], 
            T.DISTINCT_KEYS AS [DBA_INDEXES.DISTINCT_KEYS], 
            T.AVG_LEAF_BLOCKS_PER_KEY AS [DBA_INDEXES.AVG_LEAF_BLOCKS_PER_KEY], 
            T.AVG_DATA_BLOCKS_PER_KEY AS [DBA_INDEXES.AVG_DATA_BLOCKS_PER_KEY], 
            T.CLUSTERING_FACTOR AS [DBA_INDEXES.CLUSTERING_FACTOR], 
            T.STATUS AS [DBA_INDEXES.STATUS], 
            T.NUM_ROWS AS [DBA_INDEXES.NUM_ROWS], 
            T.SAMPLE_SIZE AS [DBA_INDEXES.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_INDEXES.LAST_ANALYZED], 
            T.DEGREE AS [DBA_INDEXES.DEGREE], 
            T.INSTANCES AS [DBA_INDEXES.INSTANCES], 
            T.PARTITIONED AS [DBA_INDEXES.PARTITIONED], 
            T.TEMPORARY AS [DBA_INDEXES.TEMPORARY], 
            T.GENERATED AS [DBA_INDEXES.GENERATED], 
            T.SECONDARY AS [DBA_INDEXES.SECONDARY], 
            T.BUFFER_POOL AS [DBA_INDEXES.BUFFER_POOL], 
            T.USER_STATS AS [DBA_INDEXES.USER_STATS], 
            T.DURATION AS [DBA_INDEXES.DURATION], 
            T.PCT_DIRECT_ACCESS AS [DBA_INDEXES.PCT_DIRECT_ACCESS], 
            T.ITYP_OWNER AS [DBA_INDEXES.ITYP_OWNER], 
            T.ITYP_NAME AS [DBA_INDEXES.ITYP_NAME], 
            T.PARAMETERS AS [DBA_INDEXES.PARAMETERS], 
            T.GLOBAL_STATS AS [DBA_INDEXES.GLOBAL_STATS], 
            T.DOMIDX_STATUS AS [DBA_INDEXES.DOMIDX_STATUS], 
            T.DOMIDX_OPSTATUS AS [DBA_INDEXES.DOMIDX_OPSTATUS], 
            T.FUNCIDX_STATUS AS [DBA_INDEXES.FUNCIDX_STATUS], 
            T.JOIN_INDEX AS [DBA_INDEXES.JOIN_INDEX], 
            T.IOT_REDUNDANT_PKEY_ELIM AS [DBA_INDEXES.IOT_REDUNDANT_PKEY_ELIM], 
            T.DROPPED AS [DBA_INDEXES.DROPPED], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_INDEXES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_IND_COLUMNS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_IND_COLUMNS
        [EFModel.DataDictionary.Store.DBA_IND_COLUMNS](T1.[DBA_IND_COLUMNS.INDEX_OWNER], T1.[DBA_IND_COLUMNS.INDEX_NAME], T1.[DBA_IND_COLUMNS.TABLE_OWNER], T1.[DBA_IND_COLUMNS.TABLE_NAME], T1.[DBA_IND_COLUMNS.COLUMN_NAME], T1.[DBA_IND_COLUMNS.COLUMN_POSITION], T1.[DBA_IND_COLUMNS.COLUMN_LENGTH], T1.[DBA_IND_COLUMNS.CHAR_LENGTH], T1.[DBA_IND_COLUMNS.DESCEND])
    FROM (
        SELECT 
            T.INDEX_OWNER AS [DBA_IND_COLUMNS.INDEX_OWNER], 
            T.INDEX_NAME AS [DBA_IND_COLUMNS.INDEX_NAME], 
            T.TABLE_OWNER AS [DBA_IND_COLUMNS.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_IND_COLUMNS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_IND_COLUMNS.COLUMN_NAME], 
            T.COLUMN_POSITION AS [DBA_IND_COLUMNS.COLUMN_POSITION], 
            T.COLUMN_LENGTH AS [DBA_IND_COLUMNS.COLUMN_LENGTH], 
            T.CHAR_LENGTH AS [DBA_IND_COLUMNS.CHAR_LENGTH], 
            T.DESCEND AS [DBA_IND_COLUMNS.DESCEND], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_IND_COLUMNS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_IND_COLUMNS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_IND_COLUMNS
        [EFModel.DataDictionary.DBA_IND_COLUMNS](T1.[DBA_IND_COLUMNS.INDEX_OWNER], T1.[DBA_IND_COLUMNS.INDEX_NAME], T1.[DBA_IND_COLUMNS.TABLE_OWNER], T1.[DBA_IND_COLUMNS.TABLE_NAME], T1.[DBA_IND_COLUMNS.COLUMN_NAME], T1.[DBA_IND_COLUMNS.COLUMN_POSITION], T1.[DBA_IND_COLUMNS.COLUMN_LENGTH], T1.[DBA_IND_COLUMNS.CHAR_LENGTH], T1.[DBA_IND_COLUMNS.DESCEND])
    FROM (
        SELECT 
            T.INDEX_OWNER AS [DBA_IND_COLUMNS.INDEX_OWNER], 
            T.INDEX_NAME AS [DBA_IND_COLUMNS.INDEX_NAME], 
            T.TABLE_OWNER AS [DBA_IND_COLUMNS.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_IND_COLUMNS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_IND_COLUMNS.COLUMN_NAME], 
            T.COLUMN_POSITION AS [DBA_IND_COLUMNS.COLUMN_POSITION], 
            T.COLUMN_LENGTH AS [DBA_IND_COLUMNS.COLUMN_LENGTH], 
            T.CHAR_LENGTH AS [DBA_IND_COLUMNS.CHAR_LENGTH], 
            T.DESCEND AS [DBA_IND_COLUMNS.DESCEND], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_IND_COLUMNS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_PROCEDURES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_PROCEDURES
        [EFModel.DataDictionary.Store.DBA_PROCEDURES](T1.[DBA_PROCEDURES.OWNER], T1.[DBA_PROCEDURES.OBJECT_NAME], T1.[DBA_PROCEDURES.PROCEDURE_NAME], T1.[DBA_PROCEDURES.OBJECT_ID], T1.[DBA_PROCEDURES.SUBPROGRAM_ID], T1.[DBA_PROCEDURES.OVERLOAD], T1.[DBA_PROCEDURES.OBJECT_TYPE], T1.[DBA_PROCEDURES.AGGREGATE], T1.[DBA_PROCEDURES.PIPELINED], T1.[DBA_PROCEDURES.IMPLTYPEOWNER], T1.[DBA_PROCEDURES.IMPLTYPENAME], T1.[DBA_PROCEDURES.PARALLEL], T1.[DBA_PROCEDURES.INTERFACE], T1.[DBA_PROCEDURES.DETERMINISTIC], T1.[DBA_PROCEDURES.AUTHID])
    FROM (
        SELECT 
            T.OWNER AS [DBA_PROCEDURES.OWNER], 
            T.OBJECT_NAME AS [DBA_PROCEDURES.OBJECT_NAME], 
            T.PROCEDURE_NAME AS [DBA_PROCEDURES.PROCEDURE_NAME], 
            T.OBJECT_ID AS [DBA_PROCEDURES.OBJECT_ID], 
            T.SUBPROGRAM_ID AS [DBA_PROCEDURES.SUBPROGRAM_ID], 
            T.OVERLOAD AS [DBA_PROCEDURES.OVERLOAD], 
            T.OBJECT_TYPE AS [DBA_PROCEDURES.OBJECT_TYPE], 
            T.AGGREGATE AS [DBA_PROCEDURES.AGGREGATE], 
            T.PIPELINED AS [DBA_PROCEDURES.PIPELINED], 
            T.IMPLTYPEOWNER AS [DBA_PROCEDURES.IMPLTYPEOWNER], 
            T.IMPLTYPENAME AS [DBA_PROCEDURES.IMPLTYPENAME], 
            T.PARALLEL AS [DBA_PROCEDURES.PARALLEL], 
            T.INTERFACE AS [DBA_PROCEDURES.INTERFACE], 
            T.DETERMINISTIC AS [DBA_PROCEDURES.DETERMINISTIC], 
            T.AUTHID AS [DBA_PROCEDURES.AUTHID], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_PROCEDURES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_PROCEDURES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_PROCEDURES
        [EFModel.DataDictionary.DBA_PROCEDURES](T1.[DBA_PROCEDURES.OWNER], T1.[DBA_PROCEDURES.OBJECT_NAME], T1.[DBA_PROCEDURES.PROCEDURE_NAME], T1.[DBA_PROCEDURES.OBJECT_ID], T1.[DBA_PROCEDURES.SUBPROGRAM_ID], T1.[DBA_PROCEDURES.OVERLOAD], T1.[DBA_PROCEDURES.OBJECT_TYPE], T1.[DBA_PROCEDURES.AGGREGATE], T1.[DBA_PROCEDURES.PIPELINED], T1.[DBA_PROCEDURES.IMPLTYPEOWNER], T1.[DBA_PROCEDURES.IMPLTYPENAME], T1.[DBA_PROCEDURES.PARALLEL], T1.[DBA_PROCEDURES.INTERFACE], T1.[DBA_PROCEDURES.DETERMINISTIC], T1.[DBA_PROCEDURES.AUTHID])
    FROM (
        SELECT 
            T.OWNER AS [DBA_PROCEDURES.OWNER], 
            T.OBJECT_NAME AS [DBA_PROCEDURES.OBJECT_NAME], 
            T.PROCEDURE_NAME AS [DBA_PROCEDURES.PROCEDURE_NAME], 
            T.OBJECT_ID AS [DBA_PROCEDURES.OBJECT_ID], 
            T.SUBPROGRAM_ID AS [DBA_PROCEDURES.SUBPROGRAM_ID], 
            T.OVERLOAD AS [DBA_PROCEDURES.OVERLOAD], 
            T.OBJECT_TYPE AS [DBA_PROCEDURES.OBJECT_TYPE], 
            T.AGGREGATE AS [DBA_PROCEDURES.AGGREGATE], 
            T.PIPELINED AS [DBA_PROCEDURES.PIPELINED], 
            T.IMPLTYPEOWNER AS [DBA_PROCEDURES.IMPLTYPEOWNER], 
            T.IMPLTYPENAME AS [DBA_PROCEDURES.IMPLTYPENAME], 
            T.PARALLEL AS [DBA_PROCEDURES.PARALLEL], 
            T.INTERFACE AS [DBA_PROCEDURES.INTERFACE], 
            T.DETERMINISTIC AS [DBA_PROCEDURES.DETERMINISTIC], 
            T.AUTHID AS [DBA_PROCEDURES.AUTHID], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_PROCEDURES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_ROLLBACK_SEGS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_ROLLBACK_SEGS
        [EFModel.DataDictionary.Store.DBA_ROLLBACK_SEGS](T1.[DBA_ROLLBACK_SEGS.SEGMENT_NAME], T1.[DBA_ROLLBACK_SEGS.OWNER], T1.[DBA_ROLLBACK_SEGS.TABLESPACE_NAME], T1.[DBA_ROLLBACK_SEGS.SEGMENT_ID], T1.[DBA_ROLLBACK_SEGS.FILE_ID], T1.[DBA_ROLLBACK_SEGS.BLOCK_ID], T1.[DBA_ROLLBACK_SEGS.INITIAL_EXTENT], T1.[DBA_ROLLBACK_SEGS.NEXT_EXTENT], T1.[DBA_ROLLBACK_SEGS.MIN_EXTENTS], T1.[DBA_ROLLBACK_SEGS.MAX_EXTENTS], T1.[DBA_ROLLBACK_SEGS.PCT_INCREASE], T1.[DBA_ROLLBACK_SEGS.STATUS], T1.[DBA_ROLLBACK_SEGS.INSTANCE_NUM], T1.[DBA_ROLLBACK_SEGS.RELATIVE_FNO])
    FROM (
        SELECT 
            T.SEGMENT_NAME AS [DBA_ROLLBACK_SEGS.SEGMENT_NAME], 
            T.OWNER AS [DBA_ROLLBACK_SEGS.OWNER], 
            T.TABLESPACE_NAME AS [DBA_ROLLBACK_SEGS.TABLESPACE_NAME], 
            T.SEGMENT_ID AS [DBA_ROLLBACK_SEGS.SEGMENT_ID], 
            T.FILE_ID AS [DBA_ROLLBACK_SEGS.FILE_ID], 
            T.BLOCK_ID AS [DBA_ROLLBACK_SEGS.BLOCK_ID], 
            T.INITIAL_EXTENT AS [DBA_ROLLBACK_SEGS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_ROLLBACK_SEGS.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_ROLLBACK_SEGS.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_ROLLBACK_SEGS.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_ROLLBACK_SEGS.PCT_INCREASE], 
            T.STATUS AS [DBA_ROLLBACK_SEGS.STATUS], 
            T.INSTANCE_NUM AS [DBA_ROLLBACK_SEGS.INSTANCE_NUM], 
            T.RELATIVE_FNO AS [DBA_ROLLBACK_SEGS.RELATIVE_FNO], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_ROLLBACK_SEGS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_ROLLBACK_SEGS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_ROLLBACK_SEGS
        [EFModel.DataDictionary.DBA_ROLLBACK_SEGS](T1.[DBA_ROLLBACK_SEGS.SEGMENT_NAME], T1.[DBA_ROLLBACK_SEGS.OWNER], T1.[DBA_ROLLBACK_SEGS.TABLESPACE_NAME], T1.[DBA_ROLLBACK_SEGS.SEGMENT_ID], T1.[DBA_ROLLBACK_SEGS.FILE_ID], T1.[DBA_ROLLBACK_SEGS.BLOCK_ID], T1.[DBA_ROLLBACK_SEGS.INITIAL_EXTENT], T1.[DBA_ROLLBACK_SEGS.NEXT_EXTENT], T1.[DBA_ROLLBACK_SEGS.MIN_EXTENTS], T1.[DBA_ROLLBACK_SEGS.MAX_EXTENTS], T1.[DBA_ROLLBACK_SEGS.PCT_INCREASE], T1.[DBA_ROLLBACK_SEGS.STATUS], T1.[DBA_ROLLBACK_SEGS.INSTANCE_NUM], T1.[DBA_ROLLBACK_SEGS.RELATIVE_FNO])
    FROM (
        SELECT 
            T.SEGMENT_NAME AS [DBA_ROLLBACK_SEGS.SEGMENT_NAME], 
            T.OWNER AS [DBA_ROLLBACK_SEGS.OWNER], 
            T.TABLESPACE_NAME AS [DBA_ROLLBACK_SEGS.TABLESPACE_NAME], 
            T.SEGMENT_ID AS [DBA_ROLLBACK_SEGS.SEGMENT_ID], 
            T.FILE_ID AS [DBA_ROLLBACK_SEGS.FILE_ID], 
            T.BLOCK_ID AS [DBA_ROLLBACK_SEGS.BLOCK_ID], 
            T.INITIAL_EXTENT AS [DBA_ROLLBACK_SEGS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_ROLLBACK_SEGS.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_ROLLBACK_SEGS.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_ROLLBACK_SEGS.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_ROLLBACK_SEGS.PCT_INCREASE], 
            T.STATUS AS [DBA_ROLLBACK_SEGS.STATUS], 
            T.INSTANCE_NUM AS [DBA_ROLLBACK_SEGS.INSTANCE_NUM], 
            T.RELATIVE_FNO AS [DBA_ROLLBACK_SEGS.RELATIVE_FNO], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_ROLLBACK_SEGS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_ROLE_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_ROLE_PRIVS
        [EFModel.DataDictionary.Store.DBA_ROLE_PRIVS](T1.[DBA_ROLE_PRIVS.GRANTEE], T1.[DBA_ROLE_PRIVS.GRANTED_ROLE], T1.[DBA_ROLE_PRIVS.ADMIN_OPTION], T1.[DBA_ROLE_PRIVS.DEFAULT_ROLE])
    FROM (
        SELECT 
            T.GRANTEE AS [DBA_ROLE_PRIVS.GRANTEE], 
            T.GRANTED_ROLE AS [DBA_ROLE_PRIVS.GRANTED_ROLE], 
            T.ADMIN_OPTION AS [DBA_ROLE_PRIVS.ADMIN_OPTION], 
            T.DEFAULT_ROLE AS [DBA_ROLE_PRIVS.DEFAULT_ROLE], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_ROLE_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_ROLE_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_ROLE_PRIVS
        [EFModel.DataDictionary.DBA_ROLE_PRIVS](T1.[DBA_ROLE_PRIVS.GRANTEE], T1.[DBA_ROLE_PRIVS.GRANTED_ROLE], T1.[DBA_ROLE_PRIVS.ADMIN_OPTION], T1.[DBA_ROLE_PRIVS.DEFAULT_ROLE])
    FROM (
        SELECT 
            T.GRANTEE AS [DBA_ROLE_PRIVS.GRANTEE], 
            T.GRANTED_ROLE AS [DBA_ROLE_PRIVS.GRANTED_ROLE], 
            T.ADMIN_OPTION AS [DBA_ROLE_PRIVS.ADMIN_OPTION], 
            T.DEFAULT_ROLE AS [DBA_ROLE_PRIVS.DEFAULT_ROLE], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_ROLE_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_SYS_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SYS_PRIVS
        [EFModel.DataDictionary.Store.DBA_SYS_PRIVS](T1.[DBA_SYS_PRIVS.GRANTEE], T1.[DBA_SYS_PRIVS.PRIVILEGE], T1.[DBA_SYS_PRIVS.ADMIN_OPTION])
    FROM (
        SELECT 
            T.GRANTEE AS [DBA_SYS_PRIVS.GRANTEE], 
            T.PRIVILEGE AS [DBA_SYS_PRIVS.PRIVILEGE], 
            T.ADMIN_OPTION AS [DBA_SYS_PRIVS.ADMIN_OPTION], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_SYS_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_SYS_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SYS_PRIVS
        [EFModel.DataDictionary.DBA_SYS_PRIVS](T1.[DBA_SYS_PRIVS.GRANTEE], T1.[DBA_SYS_PRIVS.PRIVILEGE], T1.[DBA_SYS_PRIVS.ADMIN_OPTION])
    FROM (
        SELECT 
            T.GRANTEE AS [DBA_SYS_PRIVS.GRANTEE], 
            T.PRIVILEGE AS [DBA_SYS_PRIVS.PRIVILEGE], 
            T.ADMIN_OPTION AS [DBA_SYS_PRIVS.ADMIN_OPTION], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_SYS_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_SEQUENCES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SEQUENCES
        [EFModel.DataDictionary.Store.DBA_SEQUENCES](T1.[DBA_SEQUENCES.SEQUENCE_OWNER], T1.[DBA_SEQUENCES.SEQUENCE_NAME], T1.[DBA_SEQUENCES.MIN_VALUE], T1.[DBA_SEQUENCES.MAX_VALUE], T1.[DBA_SEQUENCES.INCREMENT_BY], T1.[DBA_SEQUENCES.CYCLE_FLAG], T1.[DBA_SEQUENCES.ORDER_FLAG], T1.[DBA_SEQUENCES.CACHE_SIZE], T1.[DBA_SEQUENCES.LAST_NUMBER])
    FROM (
        SELECT 
            T.SEQUENCE_OWNER AS [DBA_SEQUENCES.SEQUENCE_OWNER], 
            T.SEQUENCE_NAME AS [DBA_SEQUENCES.SEQUENCE_NAME], 
            T.MIN_VALUE AS [DBA_SEQUENCES.MIN_VALUE], 
            T.MAX_VALUE AS [DBA_SEQUENCES.MAX_VALUE], 
            T.INCREMENT_BY AS [DBA_SEQUENCES.INCREMENT_BY], 
            T.CYCLE_FLAG AS [DBA_SEQUENCES.CYCLE_FLAG], 
            T.ORDER_FLAG AS [DBA_SEQUENCES.ORDER_FLAG], 
            T.CACHE_SIZE AS [DBA_SEQUENCES.CACHE_SIZE], 
            T.LAST_NUMBER AS [DBA_SEQUENCES.LAST_NUMBER], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_SEQUENCES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_SEQUENCES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SEQUENCES
        [EFModel.DataDictionary.DBA_SEQUENCES](T1.[DBA_SEQUENCES.SEQUENCE_OWNER], T1.[DBA_SEQUENCES.SEQUENCE_NAME], T1.[DBA_SEQUENCES.MIN_VALUE], T1.[DBA_SEQUENCES.MAX_VALUE], T1.[DBA_SEQUENCES.INCREMENT_BY], T1.[DBA_SEQUENCES.CYCLE_FLAG], T1.[DBA_SEQUENCES.ORDER_FLAG], T1.[DBA_SEQUENCES.CACHE_SIZE], T1.[DBA_SEQUENCES.LAST_NUMBER])
    FROM (
        SELECT 
            T.SEQUENCE_OWNER AS [DBA_SEQUENCES.SEQUENCE_OWNER], 
            T.SEQUENCE_NAME AS [DBA_SEQUENCES.SEQUENCE_NAME], 
            T.MIN_VALUE AS [DBA_SEQUENCES.MIN_VALUE], 
            T.MAX_VALUE AS [DBA_SEQUENCES.MAX_VALUE], 
            T.INCREMENT_BY AS [DBA_SEQUENCES.INCREMENT_BY], 
            T.CYCLE_FLAG AS [DBA_SEQUENCES.CYCLE_FLAG], 
            T.ORDER_FLAG AS [DBA_SEQUENCES.ORDER_FLAG], 
            T.CACHE_SIZE AS [DBA_SEQUENCES.CACHE_SIZE], 
            T.LAST_NUMBER AS [DBA_SEQUENCES.LAST_NUMBER], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_SEQUENCES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_SYNONYMS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SYNONYMS
        [EFModel.DataDictionary.Store.DBA_SYNONYMS](T1.[DBA_SYNONYMS.OWNER], T1.[DBA_SYNONYMS.SYNONYM_NAME], T1.[DBA_SYNONYMS.TABLE_OWNER], T1.[DBA_SYNONYMS.TABLE_NAME], T1.[DBA_SYNONYMS.DB_LINK])
    FROM (
        SELECT 
            T.OWNER AS [DBA_SYNONYMS.OWNER], 
            T.SYNONYM_NAME AS [DBA_SYNONYMS.SYNONYM_NAME], 
            T.TABLE_OWNER AS [DBA_SYNONYMS.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_SYNONYMS.TABLE_NAME], 
            T.DB_LINK AS [DBA_SYNONYMS.DB_LINK], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_SYNONYMS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_SYNONYMS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SYNONYMS
        [EFModel.DataDictionary.DBA_SYNONYMS](T1.[DBA_SYNONYMS.OWNER], T1.[DBA_SYNONYMS.SYNONYM_NAME], T1.[DBA_SYNONYMS.TABLE_OWNER], T1.[DBA_SYNONYMS.TABLE_NAME], T1.[DBA_SYNONYMS.DB_LINK])
    FROM (
        SELECT 
            T.OWNER AS [DBA_SYNONYMS.OWNER], 
            T.SYNONYM_NAME AS [DBA_SYNONYMS.SYNONYM_NAME], 
            T.TABLE_OWNER AS [DBA_SYNONYMS.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_SYNONYMS.TABLE_NAME], 
            T.DB_LINK AS [DBA_SYNONYMS.DB_LINK], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_SYNONYMS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_TABLES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TABLES
        [EFModel.DataDictionary.Store.DBA_TABLES](T1.[DBA_TABLES.OWNER], T1.[DBA_TABLES.TABLE_NAME], T1.[DBA_TABLES.TABLESPACE_NAME], T1.[DBA_TABLES.CLUSTER_NAME], T1.[DBA_TABLES.IOT_NAME], T1.[DBA_TABLES.STATUS], T1.[DBA_TABLES.PCT_FREE], T1.[DBA_TABLES.PCT_USED], T1.[DBA_TABLES.INI_TRANS], T1.[DBA_TABLES.MAX_TRANS], T1.[DBA_TABLES.INITIAL_EXTENT], T1.[DBA_TABLES.NEXT_EXTENT], T1.[DBA_TABLES.MIN_EXTENTS], T1.[DBA_TABLES.MAX_EXTENTS], T1.[DBA_TABLES.PCT_INCREASE], T1.[DBA_TABLES.FREELISTS], T1.[DBA_TABLES.FREELIST_GROUPS], T1.[DBA_TABLES.LOGGING], T1.[DBA_TABLES.BACKED_UP], T1.[DBA_TABLES.NUM_ROWS], T1.[DBA_TABLES.BLOCKS], T1.[DBA_TABLES.EMPTY_BLOCKS], T1.[DBA_TABLES.AVG_SPACE], T1.[DBA_TABLES.CHAIN_CNT], T1.[DBA_TABLES.AVG_ROW_LEN], T1.[DBA_TABLES.AVG_SPACE_FREELIST_BLOCKS], T1.[DBA_TABLES.NUM_FREELIST_BLOCKS], T1.[DBA_TABLES.DEGREE], T1.[DBA_TABLES.INSTANCES], T1.[DBA_TABLES.CACHE], T1.[DBA_TABLES.TABLE_LOCK], T1.[DBA_TABLES.SAMPLE_SIZE], T1.[DBA_TABLES.LAST_ANALYZED], T1.[DBA_TABLES.PARTITIONED], T1.[DBA_TABLES.IOT_TYPE], T1.[DBA_TABLES.TEMPORARY], T1.[DBA_TABLES.SECONDARY], T1.[DBA_TABLES.NESTED], T1.[DBA_TABLES.BUFFER_POOL], T1.[DBA_TABLES.ROW_MOVEMENT], T1.[DBA_TABLES.GLOBAL_STATS], T1.[DBA_TABLES.USER_STATS], T1.[DBA_TABLES.DURATION], T1.[DBA_TABLES.SKIP_CORRUPT], T1.[DBA_TABLES.MONITORING], T1.[DBA_TABLES.CLUSTER_OWNER], T1.[DBA_TABLES.DEPENDENCIES], T1.[DBA_TABLES.COMPRESSION], T1.[DBA_TABLES.DROPPED])
    FROM (
        SELECT 
            T.OWNER AS [DBA_TABLES.OWNER], 
            T.TABLE_NAME AS [DBA_TABLES.TABLE_NAME], 
            T.TABLESPACE_NAME AS [DBA_TABLES.TABLESPACE_NAME], 
            T.CLUSTER_NAME AS [DBA_TABLES.CLUSTER_NAME], 
            T.IOT_NAME AS [DBA_TABLES.IOT_NAME], 
            T.STATUS AS [DBA_TABLES.STATUS], 
            T.PCT_FREE AS [DBA_TABLES.PCT_FREE], 
            T.PCT_USED AS [DBA_TABLES.PCT_USED], 
            T.INI_TRANS AS [DBA_TABLES.INI_TRANS], 
            T.MAX_TRANS AS [DBA_TABLES.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_TABLES.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_TABLES.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_TABLES.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_TABLES.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_TABLES.PCT_INCREASE], 
            T.FREELISTS AS [DBA_TABLES.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_TABLES.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_TABLES.LOGGING], 
            T.BACKED_UP AS [DBA_TABLES.BACKED_UP], 
            T.NUM_ROWS AS [DBA_TABLES.NUM_ROWS], 
            T.BLOCKS AS [DBA_TABLES.BLOCKS], 
            T.EMPTY_BLOCKS AS [DBA_TABLES.EMPTY_BLOCKS], 
            T.AVG_SPACE AS [DBA_TABLES.AVG_SPACE], 
            T.CHAIN_CNT AS [DBA_TABLES.CHAIN_CNT], 
            T.AVG_ROW_LEN AS [DBA_TABLES.AVG_ROW_LEN], 
            T.AVG_SPACE_FREELIST_BLOCKS AS [DBA_TABLES.AVG_SPACE_FREELIST_BLOCKS], 
            T.NUM_FREELIST_BLOCKS AS [DBA_TABLES.NUM_FREELIST_BLOCKS], 
            T.DEGREE AS [DBA_TABLES.DEGREE], 
            T.INSTANCES AS [DBA_TABLES.INSTANCES], 
            T.CACHE AS [DBA_TABLES.CACHE], 
            T.TABLE_LOCK AS [DBA_TABLES.TABLE_LOCK], 
            T.SAMPLE_SIZE AS [DBA_TABLES.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_TABLES.LAST_ANALYZED], 
            T.PARTITIONED AS [DBA_TABLES.PARTITIONED], 
            T.IOT_TYPE AS [DBA_TABLES.IOT_TYPE], 
            T.TEMPORARY AS [DBA_TABLES.TEMPORARY], 
            T.SECONDARY AS [DBA_TABLES.SECONDARY], 
            T.NESTED AS [DBA_TABLES.NESTED], 
            T.BUFFER_POOL AS [DBA_TABLES.BUFFER_POOL], 
            T.ROW_MOVEMENT AS [DBA_TABLES.ROW_MOVEMENT], 
            T.GLOBAL_STATS AS [DBA_TABLES.GLOBAL_STATS], 
            T.USER_STATS AS [DBA_TABLES.USER_STATS], 
            T.DURATION AS [DBA_TABLES.DURATION], 
            T.SKIP_CORRUPT AS [DBA_TABLES.SKIP_CORRUPT], 
            T.MONITORING AS [DBA_TABLES.MONITORING], 
            T.CLUSTER_OWNER AS [DBA_TABLES.CLUSTER_OWNER], 
            T.DEPENDENCIES AS [DBA_TABLES.DEPENDENCIES], 
            T.COMPRESSION AS [DBA_TABLES.COMPRESSION], 
            T.DROPPED AS [DBA_TABLES.DROPPED], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_TABLES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_TABLES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TABLES
        [EFModel.DataDictionary.DBA_TABLES](T1.[DBA_TABLES.OWNER], T1.[DBA_TABLES.TABLE_NAME], T1.[DBA_TABLES.TABLESPACE_NAME], T1.[DBA_TABLES.CLUSTER_NAME], T1.[DBA_TABLES.IOT_NAME], T1.[DBA_TABLES.STATUS], T1.[DBA_TABLES.PCT_FREE], T1.[DBA_TABLES.PCT_USED], T1.[DBA_TABLES.INI_TRANS], T1.[DBA_TABLES.MAX_TRANS], T1.[DBA_TABLES.INITIAL_EXTENT], T1.[DBA_TABLES.NEXT_EXTENT], T1.[DBA_TABLES.MIN_EXTENTS], T1.[DBA_TABLES.MAX_EXTENTS], T1.[DBA_TABLES.PCT_INCREASE], T1.[DBA_TABLES.FREELISTS], T1.[DBA_TABLES.FREELIST_GROUPS], T1.[DBA_TABLES.LOGGING], T1.[DBA_TABLES.BACKED_UP], T1.[DBA_TABLES.NUM_ROWS], T1.[DBA_TABLES.BLOCKS], T1.[DBA_TABLES.EMPTY_BLOCKS], T1.[DBA_TABLES.AVG_SPACE], T1.[DBA_TABLES.CHAIN_CNT], T1.[DBA_TABLES.AVG_ROW_LEN], T1.[DBA_TABLES.AVG_SPACE_FREELIST_BLOCKS], T1.[DBA_TABLES.NUM_FREELIST_BLOCKS], T1.[DBA_TABLES.DEGREE], T1.[DBA_TABLES.INSTANCES], T1.[DBA_TABLES.CACHE], T1.[DBA_TABLES.TABLE_LOCK], T1.[DBA_TABLES.SAMPLE_SIZE], T1.[DBA_TABLES.LAST_ANALYZED], T1.[DBA_TABLES.PARTITIONED], T1.[DBA_TABLES.IOT_TYPE], T1.[DBA_TABLES.TEMPORARY], T1.[DBA_TABLES.SECONDARY], T1.[DBA_TABLES.NESTED], T1.[DBA_TABLES.BUFFER_POOL], T1.[DBA_TABLES.ROW_MOVEMENT], T1.[DBA_TABLES.GLOBAL_STATS], T1.[DBA_TABLES.USER_STATS], T1.[DBA_TABLES.DURATION], T1.[DBA_TABLES.SKIP_CORRUPT], T1.[DBA_TABLES.MONITORING], T1.[DBA_TABLES.CLUSTER_OWNER], T1.[DBA_TABLES.DEPENDENCIES], T1.[DBA_TABLES.COMPRESSION], T1.[DBA_TABLES.DROPPED])
    FROM (
        SELECT 
            T.OWNER AS [DBA_TABLES.OWNER], 
            T.TABLE_NAME AS [DBA_TABLES.TABLE_NAME], 
            T.TABLESPACE_NAME AS [DBA_TABLES.TABLESPACE_NAME], 
            T.CLUSTER_NAME AS [DBA_TABLES.CLUSTER_NAME], 
            T.IOT_NAME AS [DBA_TABLES.IOT_NAME], 
            T.STATUS AS [DBA_TABLES.STATUS], 
            T.PCT_FREE AS [DBA_TABLES.PCT_FREE], 
            T.PCT_USED AS [DBA_TABLES.PCT_USED], 
            T.INI_TRANS AS [DBA_TABLES.INI_TRANS], 
            T.MAX_TRANS AS [DBA_TABLES.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_TABLES.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_TABLES.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_TABLES.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_TABLES.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_TABLES.PCT_INCREASE], 
            T.FREELISTS AS [DBA_TABLES.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_TABLES.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_TABLES.LOGGING], 
            T.BACKED_UP AS [DBA_TABLES.BACKED_UP], 
            T.NUM_ROWS AS [DBA_TABLES.NUM_ROWS], 
            T.BLOCKS AS [DBA_TABLES.BLOCKS], 
            T.EMPTY_BLOCKS AS [DBA_TABLES.EMPTY_BLOCKS], 
            T.AVG_SPACE AS [DBA_TABLES.AVG_SPACE], 
            T.CHAIN_CNT AS [DBA_TABLES.CHAIN_CNT], 
            T.AVG_ROW_LEN AS [DBA_TABLES.AVG_ROW_LEN], 
            T.AVG_SPACE_FREELIST_BLOCKS AS [DBA_TABLES.AVG_SPACE_FREELIST_BLOCKS], 
            T.NUM_FREELIST_BLOCKS AS [DBA_TABLES.NUM_FREELIST_BLOCKS], 
            T.DEGREE AS [DBA_TABLES.DEGREE], 
            T.INSTANCES AS [DBA_TABLES.INSTANCES], 
            T.CACHE AS [DBA_TABLES.CACHE], 
            T.TABLE_LOCK AS [DBA_TABLES.TABLE_LOCK], 
            T.SAMPLE_SIZE AS [DBA_TABLES.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_TABLES.LAST_ANALYZED], 
            T.PARTITIONED AS [DBA_TABLES.PARTITIONED], 
            T.IOT_TYPE AS [DBA_TABLES.IOT_TYPE], 
            T.TEMPORARY AS [DBA_TABLES.TEMPORARY], 
            T.SECONDARY AS [DBA_TABLES.SECONDARY], 
            T.NESTED AS [DBA_TABLES.NESTED], 
            T.BUFFER_POOL AS [DBA_TABLES.BUFFER_POOL], 
            T.ROW_MOVEMENT AS [DBA_TABLES.ROW_MOVEMENT], 
            T.GLOBAL_STATS AS [DBA_TABLES.GLOBAL_STATS], 
            T.USER_STATS AS [DBA_TABLES.USER_STATS], 
            T.DURATION AS [DBA_TABLES.DURATION], 
            T.SKIP_CORRUPT AS [DBA_TABLES.SKIP_CORRUPT], 
            T.MONITORING AS [DBA_TABLES.MONITORING], 
            T.CLUSTER_OWNER AS [DBA_TABLES.CLUSTER_OWNER], 
            T.DEPENDENCIES AS [DBA_TABLES.DEPENDENCIES], 
            T.COMPRESSION AS [DBA_TABLES.COMPRESSION], 
            T.DROPPED AS [DBA_TABLES.DROPPED], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_TABLES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_ALL_TABLES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_ALL_TABLES
        [EFModel.DataDictionary.Store.DBA_ALL_TABLES](T1.[DBA_ALL_TABLES.OWNER], T1.[DBA_ALL_TABLES.TABLE_NAME], T1.[DBA_ALL_TABLES.TABLESPACE_NAME], T1.[DBA_ALL_TABLES.CLUSTER_NAME], T1.[DBA_ALL_TABLES.IOT_NAME], T1.[DBA_ALL_TABLES.STATUS], T1.[DBA_ALL_TABLES.PCT_FREE], T1.[DBA_ALL_TABLES.PCT_USED], T1.[DBA_ALL_TABLES.INI_TRANS], T1.[DBA_ALL_TABLES.MAX_TRANS], T1.[DBA_ALL_TABLES.INITIAL_EXTENT], T1.[DBA_ALL_TABLES.NEXT_EXTENT], T1.[DBA_ALL_TABLES.MIN_EXTENTS], T1.[DBA_ALL_TABLES.MAX_EXTENTS], T1.[DBA_ALL_TABLES.PCT_INCREASE], T1.[DBA_ALL_TABLES.FREELISTS], T1.[DBA_ALL_TABLES.FREELIST_GROUPS], T1.[DBA_ALL_TABLES.LOGGING], T1.[DBA_ALL_TABLES.BACKED_UP], T1.[DBA_ALL_TABLES.NUM_ROWS], T1.[DBA_ALL_TABLES.BLOCKS], T1.[DBA_ALL_TABLES.EMPTY_BLOCKS], T1.[DBA_ALL_TABLES.AVG_SPACE], T1.[DBA_ALL_TABLES.CHAIN_CNT], T1.[DBA_ALL_TABLES.AVG_ROW_LEN], T1.[DBA_ALL_TABLES.AVG_SPACE_FREELIST_BLOCKS], T1.[DBA_ALL_TABLES.NUM_FREELIST_BLOCKS], T1.[DBA_ALL_TABLES.DEGREE], T1.[DBA_ALL_TABLES.INSTANCES], T1.[DBA_ALL_TABLES.CACHE], T1.[DBA_ALL_TABLES.TABLE_LOCK], T1.[DBA_ALL_TABLES.SAMPLE_SIZE], T1.[DBA_ALL_TABLES.LAST_ANALYZED], T1.[DBA_ALL_TABLES.PARTITIONED], T1.[DBA_ALL_TABLES.IOT_TYPE], T1.[DBA_ALL_TABLES.OBJECT_ID_TYPE], T1.[DBA_ALL_TABLES.TABLE_TYPE_OWNER], T1.[DBA_ALL_TABLES.TABLE_TYPE], T1.[DBA_ALL_TABLES.TEMPORARY], T1.[DBA_ALL_TABLES.SECONDARY], T1.[DBA_ALL_TABLES.NESTED], T1.[DBA_ALL_TABLES.BUFFER_POOL], T1.[DBA_ALL_TABLES.ROW_MOVEMENT], T1.[DBA_ALL_TABLES.GLOBAL_STATS], T1.[DBA_ALL_TABLES.USER_STATS], T1.[DBA_ALL_TABLES.DURATION], T1.[DBA_ALL_TABLES.SKIP_CORRUPT], T1.[DBA_ALL_TABLES.MONITORING], T1.[DBA_ALL_TABLES.CLUSTER_OWNER], T1.[DBA_ALL_TABLES.DEPENDENCIES], T1.[DBA_ALL_TABLES.COMPRESSION], T1.[DBA_ALL_TABLES.DROPPED])
    FROM (
        SELECT 
            T.OWNER AS [DBA_ALL_TABLES.OWNER], 
            T.TABLE_NAME AS [DBA_ALL_TABLES.TABLE_NAME], 
            T.TABLESPACE_NAME AS [DBA_ALL_TABLES.TABLESPACE_NAME], 
            T.CLUSTER_NAME AS [DBA_ALL_TABLES.CLUSTER_NAME], 
            T.IOT_NAME AS [DBA_ALL_TABLES.IOT_NAME], 
            T.STATUS AS [DBA_ALL_TABLES.STATUS], 
            T.PCT_FREE AS [DBA_ALL_TABLES.PCT_FREE], 
            T.PCT_USED AS [DBA_ALL_TABLES.PCT_USED], 
            T.INI_TRANS AS [DBA_ALL_TABLES.INI_TRANS], 
            T.MAX_TRANS AS [DBA_ALL_TABLES.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_ALL_TABLES.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_ALL_TABLES.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_ALL_TABLES.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_ALL_TABLES.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_ALL_TABLES.PCT_INCREASE], 
            T.FREELISTS AS [DBA_ALL_TABLES.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_ALL_TABLES.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_ALL_TABLES.LOGGING], 
            T.BACKED_UP AS [DBA_ALL_TABLES.BACKED_UP], 
            T.NUM_ROWS AS [DBA_ALL_TABLES.NUM_ROWS], 
            T.BLOCKS AS [DBA_ALL_TABLES.BLOCKS], 
            T.EMPTY_BLOCKS AS [DBA_ALL_TABLES.EMPTY_BLOCKS], 
            T.AVG_SPACE AS [DBA_ALL_TABLES.AVG_SPACE], 
            T.CHAIN_CNT AS [DBA_ALL_TABLES.CHAIN_CNT], 
            T.AVG_ROW_LEN AS [DBA_ALL_TABLES.AVG_ROW_LEN], 
            T.AVG_SPACE_FREELIST_BLOCKS AS [DBA_ALL_TABLES.AVG_SPACE_FREELIST_BLOCKS], 
            T.NUM_FREELIST_BLOCKS AS [DBA_ALL_TABLES.NUM_FREELIST_BLOCKS], 
            T.DEGREE AS [DBA_ALL_TABLES.DEGREE], 
            T.INSTANCES AS [DBA_ALL_TABLES.INSTANCES], 
            T.CACHE AS [DBA_ALL_TABLES.CACHE], 
            T.TABLE_LOCK AS [DBA_ALL_TABLES.TABLE_LOCK], 
            T.SAMPLE_SIZE AS [DBA_ALL_TABLES.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_ALL_TABLES.LAST_ANALYZED], 
            T.PARTITIONED AS [DBA_ALL_TABLES.PARTITIONED], 
            T.IOT_TYPE AS [DBA_ALL_TABLES.IOT_TYPE], 
            T.OBJECT_ID_TYPE AS [DBA_ALL_TABLES.OBJECT_ID_TYPE], 
            T.TABLE_TYPE_OWNER AS [DBA_ALL_TABLES.TABLE_TYPE_OWNER], 
            T.TABLE_TYPE AS [DBA_ALL_TABLES.TABLE_TYPE], 
            T.TEMPORARY AS [DBA_ALL_TABLES.TEMPORARY], 
            T.SECONDARY AS [DBA_ALL_TABLES.SECONDARY], 
            T.NESTED AS [DBA_ALL_TABLES.NESTED], 
            T.BUFFER_POOL AS [DBA_ALL_TABLES.BUFFER_POOL], 
            T.ROW_MOVEMENT AS [DBA_ALL_TABLES.ROW_MOVEMENT], 
            T.GLOBAL_STATS AS [DBA_ALL_TABLES.GLOBAL_STATS], 
            T.USER_STATS AS [DBA_ALL_TABLES.USER_STATS], 
            T.DURATION AS [DBA_ALL_TABLES.DURATION], 
            T.SKIP_CORRUPT AS [DBA_ALL_TABLES.SKIP_CORRUPT], 
            T.MONITORING AS [DBA_ALL_TABLES.MONITORING], 
            T.CLUSTER_OWNER AS [DBA_ALL_TABLES.CLUSTER_OWNER], 
            T.DEPENDENCIES AS [DBA_ALL_TABLES.DEPENDENCIES], 
            T.COMPRESSION AS [DBA_ALL_TABLES.COMPRESSION], 
            T.DROPPED AS [DBA_ALL_TABLES.DROPPED], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_ALL_TABLES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_ALL_TABLES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_ALL_TABLES
        [EFModel.DataDictionary.DBA_ALL_TABLES](T1.[DBA_ALL_TABLES.OWNER], T1.[DBA_ALL_TABLES.TABLE_NAME], T1.[DBA_ALL_TABLES.TABLESPACE_NAME], T1.[DBA_ALL_TABLES.CLUSTER_NAME], T1.[DBA_ALL_TABLES.IOT_NAME], T1.[DBA_ALL_TABLES.STATUS], T1.[DBA_ALL_TABLES.PCT_FREE], T1.[DBA_ALL_TABLES.PCT_USED], T1.[DBA_ALL_TABLES.INI_TRANS], T1.[DBA_ALL_TABLES.MAX_TRANS], T1.[DBA_ALL_TABLES.INITIAL_EXTENT], T1.[DBA_ALL_TABLES.NEXT_EXTENT], T1.[DBA_ALL_TABLES.MIN_EXTENTS], T1.[DBA_ALL_TABLES.MAX_EXTENTS], T1.[DBA_ALL_TABLES.PCT_INCREASE], T1.[DBA_ALL_TABLES.FREELISTS], T1.[DBA_ALL_TABLES.FREELIST_GROUPS], T1.[DBA_ALL_TABLES.LOGGING], T1.[DBA_ALL_TABLES.BACKED_UP], T1.[DBA_ALL_TABLES.NUM_ROWS], T1.[DBA_ALL_TABLES.BLOCKS], T1.[DBA_ALL_TABLES.EMPTY_BLOCKS], T1.[DBA_ALL_TABLES.AVG_SPACE], T1.[DBA_ALL_TABLES.CHAIN_CNT], T1.[DBA_ALL_TABLES.AVG_ROW_LEN], T1.[DBA_ALL_TABLES.AVG_SPACE_FREELIST_BLOCKS], T1.[DBA_ALL_TABLES.NUM_FREELIST_BLOCKS], T1.[DBA_ALL_TABLES.DEGREE], T1.[DBA_ALL_TABLES.INSTANCES], T1.[DBA_ALL_TABLES.CACHE], T1.[DBA_ALL_TABLES.TABLE_LOCK], T1.[DBA_ALL_TABLES.SAMPLE_SIZE], T1.[DBA_ALL_TABLES.LAST_ANALYZED], T1.[DBA_ALL_TABLES.PARTITIONED], T1.[DBA_ALL_TABLES.IOT_TYPE], T1.[DBA_ALL_TABLES.OBJECT_ID_TYPE], T1.[DBA_ALL_TABLES.TABLE_TYPE_OWNER], T1.[DBA_ALL_TABLES.TABLE_TYPE], T1.[DBA_ALL_TABLES.TEMPORARY], T1.[DBA_ALL_TABLES.SECONDARY], T1.[DBA_ALL_TABLES.NESTED], T1.[DBA_ALL_TABLES.BUFFER_POOL], T1.[DBA_ALL_TABLES.ROW_MOVEMENT], T1.[DBA_ALL_TABLES.GLOBAL_STATS], T1.[DBA_ALL_TABLES.USER_STATS], T1.[DBA_ALL_TABLES.DURATION], T1.[DBA_ALL_TABLES.SKIP_CORRUPT], T1.[DBA_ALL_TABLES.MONITORING], T1.[DBA_ALL_TABLES.CLUSTER_OWNER], T1.[DBA_ALL_TABLES.DEPENDENCIES], T1.[DBA_ALL_TABLES.COMPRESSION], T1.[DBA_ALL_TABLES.DROPPED])
    FROM (
        SELECT 
            T.OWNER AS [DBA_ALL_TABLES.OWNER], 
            T.TABLE_NAME AS [DBA_ALL_TABLES.TABLE_NAME], 
            T.TABLESPACE_NAME AS [DBA_ALL_TABLES.TABLESPACE_NAME], 
            T.CLUSTER_NAME AS [DBA_ALL_TABLES.CLUSTER_NAME], 
            T.IOT_NAME AS [DBA_ALL_TABLES.IOT_NAME], 
            T.STATUS AS [DBA_ALL_TABLES.STATUS], 
            T.PCT_FREE AS [DBA_ALL_TABLES.PCT_FREE], 
            T.PCT_USED AS [DBA_ALL_TABLES.PCT_USED], 
            T.INI_TRANS AS [DBA_ALL_TABLES.INI_TRANS], 
            T.MAX_TRANS AS [DBA_ALL_TABLES.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_ALL_TABLES.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_ALL_TABLES.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_ALL_TABLES.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_ALL_TABLES.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_ALL_TABLES.PCT_INCREASE], 
            T.FREELISTS AS [DBA_ALL_TABLES.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_ALL_TABLES.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_ALL_TABLES.LOGGING], 
            T.BACKED_UP AS [DBA_ALL_TABLES.BACKED_UP], 
            T.NUM_ROWS AS [DBA_ALL_TABLES.NUM_ROWS], 
            T.BLOCKS AS [DBA_ALL_TABLES.BLOCKS], 
            T.EMPTY_BLOCKS AS [DBA_ALL_TABLES.EMPTY_BLOCKS], 
            T.AVG_SPACE AS [DBA_ALL_TABLES.AVG_SPACE], 
            T.CHAIN_CNT AS [DBA_ALL_TABLES.CHAIN_CNT], 
            T.AVG_ROW_LEN AS [DBA_ALL_TABLES.AVG_ROW_LEN], 
            T.AVG_SPACE_FREELIST_BLOCKS AS [DBA_ALL_TABLES.AVG_SPACE_FREELIST_BLOCKS], 
            T.NUM_FREELIST_BLOCKS AS [DBA_ALL_TABLES.NUM_FREELIST_BLOCKS], 
            T.DEGREE AS [DBA_ALL_TABLES.DEGREE], 
            T.INSTANCES AS [DBA_ALL_TABLES.INSTANCES], 
            T.CACHE AS [DBA_ALL_TABLES.CACHE], 
            T.TABLE_LOCK AS [DBA_ALL_TABLES.TABLE_LOCK], 
            T.SAMPLE_SIZE AS [DBA_ALL_TABLES.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_ALL_TABLES.LAST_ANALYZED], 
            T.PARTITIONED AS [DBA_ALL_TABLES.PARTITIONED], 
            T.IOT_TYPE AS [DBA_ALL_TABLES.IOT_TYPE], 
            T.OBJECT_ID_TYPE AS [DBA_ALL_TABLES.OBJECT_ID_TYPE], 
            T.TABLE_TYPE_OWNER AS [DBA_ALL_TABLES.TABLE_TYPE_OWNER], 
            T.TABLE_TYPE AS [DBA_ALL_TABLES.TABLE_TYPE], 
            T.TEMPORARY AS [DBA_ALL_TABLES.TEMPORARY], 
            T.SECONDARY AS [DBA_ALL_TABLES.SECONDARY], 
            T.NESTED AS [DBA_ALL_TABLES.NESTED], 
            T.BUFFER_POOL AS [DBA_ALL_TABLES.BUFFER_POOL], 
            T.ROW_MOVEMENT AS [DBA_ALL_TABLES.ROW_MOVEMENT], 
            T.GLOBAL_STATS AS [DBA_ALL_TABLES.GLOBAL_STATS], 
            T.USER_STATS AS [DBA_ALL_TABLES.USER_STATS], 
            T.DURATION AS [DBA_ALL_TABLES.DURATION], 
            T.SKIP_CORRUPT AS [DBA_ALL_TABLES.SKIP_CORRUPT], 
            T.MONITORING AS [DBA_ALL_TABLES.MONITORING], 
            T.CLUSTER_OWNER AS [DBA_ALL_TABLES.CLUSTER_OWNER], 
            T.DEPENDENCIES AS [DBA_ALL_TABLES.DEPENDENCIES], 
            T.COMPRESSION AS [DBA_ALL_TABLES.COMPRESSION], 
            T.DROPPED AS [DBA_ALL_TABLES.DROPPED], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_ALL_TABLES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_TAB_COLUMNS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TAB_COLUMNS
        [EFModel.DataDictionary.Store.DBA_TAB_COLUMNS](T1.[DBA_TAB_COLUMNS.OWNER], T1.[DBA_TAB_COLUMNS.TABLE_NAME], T1.[DBA_TAB_COLUMNS.COLUMN_NAME], T1.[DBA_TAB_COLUMNS.DATA_TYPE], T1.[DBA_TAB_COLUMNS.DATA_TYPE_MOD], T1.[DBA_TAB_COLUMNS.DATA_TYPE_OWNER], T1.[DBA_TAB_COLUMNS.DATA_LENGTH], T1.[DBA_TAB_COLUMNS.DATA_PRECISION], T1.[DBA_TAB_COLUMNS.DATA_SCALE], T1.[DBA_TAB_COLUMNS.NULLABLE], T1.[DBA_TAB_COLUMNS.COLUMN_ID], T1.[DBA_TAB_COLUMNS.DEFAULT_LENGTH], T1.[DBA_TAB_COLUMNS.DATA_DEFAULT], T1.[DBA_TAB_COLUMNS.NUM_DISTINCT], T1.[DBA_TAB_COLUMNS.LOW_VALUE], T1.[DBA_TAB_COLUMNS.HIGH_VALUE], T1.[DBA_TAB_COLUMNS.DENSITY], T1.[DBA_TAB_COLUMNS.NUM_NULLS], T1.[DBA_TAB_COLUMNS.NUM_BUCKETS], T1.[DBA_TAB_COLUMNS.LAST_ANALYZED], T1.[DBA_TAB_COLUMNS.SAMPLE_SIZE], T1.[DBA_TAB_COLUMNS.CHARACTER_SET_NAME], T1.[DBA_TAB_COLUMNS.CHAR_COL_DECL_LENGTH], T1.[DBA_TAB_COLUMNS.GLOBAL_STATS], T1.[DBA_TAB_COLUMNS.USER_STATS], T1.[DBA_TAB_COLUMNS.AVG_COL_LEN], T1.[DBA_TAB_COLUMNS.CHAR_LENGTH], T1.[DBA_TAB_COLUMNS.CHAR_USED], T1.[DBA_TAB_COLUMNS.V80_FMT_IMAGE], T1.[DBA_TAB_COLUMNS.DATA_UPGRADED], T1.[DBA_TAB_COLUMNS.HISTOGRAM])
    FROM (
        SELECT 
            T.OWNER AS [DBA_TAB_COLUMNS.OWNER], 
            T.TABLE_NAME AS [DBA_TAB_COLUMNS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_TAB_COLUMNS.COLUMN_NAME], 
            T.DATA_TYPE AS [DBA_TAB_COLUMNS.DATA_TYPE], 
            T.DATA_TYPE_MOD AS [DBA_TAB_COLUMNS.DATA_TYPE_MOD], 
            T.DATA_TYPE_OWNER AS [DBA_TAB_COLUMNS.DATA_TYPE_OWNER], 
            T.DATA_LENGTH AS [DBA_TAB_COLUMNS.DATA_LENGTH], 
            T.DATA_PRECISION AS [DBA_TAB_COLUMNS.DATA_PRECISION], 
            T.DATA_SCALE AS [DBA_TAB_COLUMNS.DATA_SCALE], 
            T.NULLABLE AS [DBA_TAB_COLUMNS.NULLABLE], 
            T.COLUMN_ID AS [DBA_TAB_COLUMNS.COLUMN_ID], 
            T.DEFAULT_LENGTH AS [DBA_TAB_COLUMNS.DEFAULT_LENGTH], 
            T.DATA_DEFAULT AS [DBA_TAB_COLUMNS.DATA_DEFAULT], 
            T.NUM_DISTINCT AS [DBA_TAB_COLUMNS.NUM_DISTINCT], 
            T.LOW_VALUE AS [DBA_TAB_COLUMNS.LOW_VALUE], 
            T.HIGH_VALUE AS [DBA_TAB_COLUMNS.HIGH_VALUE], 
            T.DENSITY AS [DBA_TAB_COLUMNS.DENSITY], 
            T.NUM_NULLS AS [DBA_TAB_COLUMNS.NUM_NULLS], 
            T.NUM_BUCKETS AS [DBA_TAB_COLUMNS.NUM_BUCKETS], 
            T.LAST_ANALYZED AS [DBA_TAB_COLUMNS.LAST_ANALYZED], 
            T.SAMPLE_SIZE AS [DBA_TAB_COLUMNS.SAMPLE_SIZE], 
            T.CHARACTER_SET_NAME AS [DBA_TAB_COLUMNS.CHARACTER_SET_NAME], 
            T.CHAR_COL_DECL_LENGTH AS [DBA_TAB_COLUMNS.CHAR_COL_DECL_LENGTH], 
            T.GLOBAL_STATS AS [DBA_TAB_COLUMNS.GLOBAL_STATS], 
            T.USER_STATS AS [DBA_TAB_COLUMNS.USER_STATS], 
            T.AVG_COL_LEN AS [DBA_TAB_COLUMNS.AVG_COL_LEN], 
            T.CHAR_LENGTH AS [DBA_TAB_COLUMNS.CHAR_LENGTH], 
            T.CHAR_USED AS [DBA_TAB_COLUMNS.CHAR_USED], 
            T.V80_FMT_IMAGE AS [DBA_TAB_COLUMNS.V80_FMT_IMAGE], 
            T.DATA_UPGRADED AS [DBA_TAB_COLUMNS.DATA_UPGRADED], 
            T.HISTOGRAM AS [DBA_TAB_COLUMNS.HISTOGRAM], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_TAB_COLUMNS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_TAB_COLUMNS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TAB_COLUMNS
        [EFModel.DataDictionary.DBA_TAB_COLUMNS](T1.[DBA_TAB_COLUMNS.OWNER], T1.[DBA_TAB_COLUMNS.TABLE_NAME], T1.[DBA_TAB_COLUMNS.COLUMN_NAME], T1.[DBA_TAB_COLUMNS.DATA_TYPE], T1.[DBA_TAB_COLUMNS.DATA_TYPE_MOD], T1.[DBA_TAB_COLUMNS.DATA_TYPE_OWNER], T1.[DBA_TAB_COLUMNS.DATA_LENGTH], T1.[DBA_TAB_COLUMNS.DATA_PRECISION], T1.[DBA_TAB_COLUMNS.DATA_SCALE], T1.[DBA_TAB_COLUMNS.NULLABLE], T1.[DBA_TAB_COLUMNS.COLUMN_ID], T1.[DBA_TAB_COLUMNS.DEFAULT_LENGTH], T1.[DBA_TAB_COLUMNS.DATA_DEFAULT], T1.[DBA_TAB_COLUMNS.NUM_DISTINCT], T1.[DBA_TAB_COLUMNS.LOW_VALUE], T1.[DBA_TAB_COLUMNS.HIGH_VALUE], T1.[DBA_TAB_COLUMNS.DENSITY], T1.[DBA_TAB_COLUMNS.NUM_NULLS], T1.[DBA_TAB_COLUMNS.NUM_BUCKETS], T1.[DBA_TAB_COLUMNS.LAST_ANALYZED], T1.[DBA_TAB_COLUMNS.SAMPLE_SIZE], T1.[DBA_TAB_COLUMNS.CHARACTER_SET_NAME], T1.[DBA_TAB_COLUMNS.CHAR_COL_DECL_LENGTH], T1.[DBA_TAB_COLUMNS.GLOBAL_STATS], T1.[DBA_TAB_COLUMNS.USER_STATS], T1.[DBA_TAB_COLUMNS.AVG_COL_LEN], T1.[DBA_TAB_COLUMNS.CHAR_LENGTH], T1.[DBA_TAB_COLUMNS.CHAR_USED], T1.[DBA_TAB_COLUMNS.V80_FMT_IMAGE], T1.[DBA_TAB_COLUMNS.DATA_UPGRADED], T1.[DBA_TAB_COLUMNS.HISTOGRAM])
    FROM (
        SELECT 
            T.OWNER AS [DBA_TAB_COLUMNS.OWNER], 
            T.TABLE_NAME AS [DBA_TAB_COLUMNS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_TAB_COLUMNS.COLUMN_NAME], 
            T.DATA_TYPE AS [DBA_TAB_COLUMNS.DATA_TYPE], 
            T.DATA_TYPE_MOD AS [DBA_TAB_COLUMNS.DATA_TYPE_MOD], 
            T.DATA_TYPE_OWNER AS [DBA_TAB_COLUMNS.DATA_TYPE_OWNER], 
            T.DATA_LENGTH AS [DBA_TAB_COLUMNS.DATA_LENGTH], 
            T.DATA_PRECISION AS [DBA_TAB_COLUMNS.DATA_PRECISION], 
            T.DATA_SCALE AS [DBA_TAB_COLUMNS.DATA_SCALE], 
            T.NULLABLE AS [DBA_TAB_COLUMNS.NULLABLE], 
            T.COLUMN_ID AS [DBA_TAB_COLUMNS.COLUMN_ID], 
            T.DEFAULT_LENGTH AS [DBA_TAB_COLUMNS.DEFAULT_LENGTH], 
            T.DATA_DEFAULT AS [DBA_TAB_COLUMNS.DATA_DEFAULT], 
            T.NUM_DISTINCT AS [DBA_TAB_COLUMNS.NUM_DISTINCT], 
            T.LOW_VALUE AS [DBA_TAB_COLUMNS.LOW_VALUE], 
            T.HIGH_VALUE AS [DBA_TAB_COLUMNS.HIGH_VALUE], 
            T.DENSITY AS [DBA_TAB_COLUMNS.DENSITY], 
            T.NUM_NULLS AS [DBA_TAB_COLUMNS.NUM_NULLS], 
            T.NUM_BUCKETS AS [DBA_TAB_COLUMNS.NUM_BUCKETS], 
            T.LAST_ANALYZED AS [DBA_TAB_COLUMNS.LAST_ANALYZED], 
            T.SAMPLE_SIZE AS [DBA_TAB_COLUMNS.SAMPLE_SIZE], 
            T.CHARACTER_SET_NAME AS [DBA_TAB_COLUMNS.CHARACTER_SET_NAME], 
            T.CHAR_COL_DECL_LENGTH AS [DBA_TAB_COLUMNS.CHAR_COL_DECL_LENGTH], 
            T.GLOBAL_STATS AS [DBA_TAB_COLUMNS.GLOBAL_STATS], 
            T.USER_STATS AS [DBA_TAB_COLUMNS.USER_STATS], 
            T.AVG_COL_LEN AS [DBA_TAB_COLUMNS.AVG_COL_LEN], 
            T.CHAR_LENGTH AS [DBA_TAB_COLUMNS.CHAR_LENGTH], 
            T.CHAR_USED AS [DBA_TAB_COLUMNS.CHAR_USED], 
            T.V80_FMT_IMAGE AS [DBA_TAB_COLUMNS.V80_FMT_IMAGE], 
            T.DATA_UPGRADED AS [DBA_TAB_COLUMNS.DATA_UPGRADED], 
            T.HISTOGRAM AS [DBA_TAB_COLUMNS.HISTOGRAM], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_TAB_COLUMNS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_TAB_COMMENTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TAB_COMMENTS
        [EFModel.DataDictionary.Store.DBA_TAB_COMMENTS](T1.[DBA_TAB_COMMENTS.OWNER], T1.[DBA_TAB_COMMENTS.TABLE_NAME], T1.[DBA_TAB_COMMENTS.TABLE_TYPE], T1.[DBA_TAB_COMMENTS.COMMENTS])
    FROM (
        SELECT 
            T.OWNER AS [DBA_TAB_COMMENTS.OWNER], 
            T.TABLE_NAME AS [DBA_TAB_COMMENTS.TABLE_NAME], 
            T.TABLE_TYPE AS [DBA_TAB_COMMENTS.TABLE_TYPE], 
            T.COMMENTS AS [DBA_TAB_COMMENTS.COMMENTS], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_TAB_COMMENTS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_TAB_COMMENTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TAB_COMMENTS
        [EFModel.DataDictionary.DBA_TAB_COMMENTS](T1.[DBA_TAB_COMMENTS.OWNER], T1.[DBA_TAB_COMMENTS.TABLE_NAME], T1.[DBA_TAB_COMMENTS.TABLE_TYPE], T1.[DBA_TAB_COMMENTS.COMMENTS])
    FROM (
        SELECT 
            T.OWNER AS [DBA_TAB_COMMENTS.OWNER], 
            T.TABLE_NAME AS [DBA_TAB_COMMENTS.TABLE_NAME], 
            T.TABLE_TYPE AS [DBA_TAB_COMMENTS.TABLE_TYPE], 
            T.COMMENTS AS [DBA_TAB_COMMENTS.COMMENTS], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_TAB_COMMENTS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_TAB_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TAB_PRIVS
        [EFModel.DataDictionary.Store.DBA_TAB_PRIVS](T1.[DBA_TAB_PRIVS.GRANTEE], T1.[DBA_TAB_PRIVS.OWNER], T1.[DBA_TAB_PRIVS.TABLE_NAME], T1.[DBA_TAB_PRIVS.GRANTOR], T1.[DBA_TAB_PRIVS.PRIVILEGE], T1.[DBA_TAB_PRIVS.GRANTABLE], T1.[DBA_TAB_PRIVS.HIERARCHY])
    FROM (
        SELECT 
            T.GRANTEE AS [DBA_TAB_PRIVS.GRANTEE], 
            T.OWNER AS [DBA_TAB_PRIVS.OWNER], 
            T.TABLE_NAME AS [DBA_TAB_PRIVS.TABLE_NAME], 
            T.GRANTOR AS [DBA_TAB_PRIVS.GRANTOR], 
            T.PRIVILEGE AS [DBA_TAB_PRIVS.PRIVILEGE], 
            T.GRANTABLE AS [DBA_TAB_PRIVS.GRANTABLE], 
            T.HIERARCHY AS [DBA_TAB_PRIVS.HIERARCHY], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_TAB_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_TAB_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TAB_PRIVS
        [EFModel.DataDictionary.DBA_TAB_PRIVS](T1.[DBA_TAB_PRIVS.GRANTEE], T1.[DBA_TAB_PRIVS.OWNER], T1.[DBA_TAB_PRIVS.TABLE_NAME], T1.[DBA_TAB_PRIVS.GRANTOR], T1.[DBA_TAB_PRIVS.PRIVILEGE], T1.[DBA_TAB_PRIVS.GRANTABLE], T1.[DBA_TAB_PRIVS.HIERARCHY])
    FROM (
        SELECT 
            T.GRANTEE AS [DBA_TAB_PRIVS.GRANTEE], 
            T.OWNER AS [DBA_TAB_PRIVS.OWNER], 
            T.TABLE_NAME AS [DBA_TAB_PRIVS.TABLE_NAME], 
            T.GRANTOR AS [DBA_TAB_PRIVS.GRANTOR], 
            T.PRIVILEGE AS [DBA_TAB_PRIVS.PRIVILEGE], 
            T.GRANTABLE AS [DBA_TAB_PRIVS.GRANTABLE], 
            T.HIERARCHY AS [DBA_TAB_PRIVS.HIERARCHY], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_TAB_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_USERS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_USERS
        [EFModel.DataDictionary.Store.DBA_USERS](T1.[DBA_USERS.USERNAME], T1.[DBA_USERS.USER_ID], T1.[DBA_USERS.PASSWORD], T1.[DBA_USERS.ACCOUNT_STATUS], T1.[DBA_USERS.LOCK_DATE], T1.[DBA_USERS.EXPIRY_DATE], T1.[DBA_USERS.DEFAULT_TABLESPACE], T1.[DBA_USERS.TEMPORARY_TABLESPACE], T1.[DBA_USERS.CREATED], T1.[DBA_USERS.PROFILE], T1.[DBA_USERS.INITIAL_RSRC_CONSUMER_GROUP], T1.[DBA_USERS.EXTERNAL_NAME])
    FROM (
        SELECT 
            T.USERNAME AS [DBA_USERS.USERNAME], 
            T.USER_ID AS [DBA_USERS.USER_ID], 
            T.PASSWORD AS [DBA_USERS.PASSWORD], 
            T.ACCOUNT_STATUS AS [DBA_USERS.ACCOUNT_STATUS], 
            T.LOCK_DATE AS [DBA_USERS.LOCK_DATE], 
            T.EXPIRY_DATE AS [DBA_USERS.EXPIRY_DATE], 
            T.DEFAULT_TABLESPACE AS [DBA_USERS.DEFAULT_TABLESPACE], 
            T.TEMPORARY_TABLESPACE AS [DBA_USERS.TEMPORARY_TABLESPACE], 
            T.CREATED AS [DBA_USERS.CREATED], 
            T.PROFILE AS [DBA_USERS.PROFILE], 
            T.INITIAL_RSRC_CONSUMER_GROUP AS [DBA_USERS.INITIAL_RSRC_CONSUMER_GROUP], 
            T.EXTERNAL_NAME AS [DBA_USERS.EXTERNAL_NAME], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_USERS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_USERS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_USERS
        [EFModel.DataDictionary.DBA_USERS](T1.[DBA_USERS.USERNAME], T1.[DBA_USERS.USER_ID], T1.[DBA_USERS.PASSWORD], T1.[DBA_USERS.ACCOUNT_STATUS], T1.[DBA_USERS.LOCK_DATE], T1.[DBA_USERS.EXPIRY_DATE], T1.[DBA_USERS.DEFAULT_TABLESPACE], T1.[DBA_USERS.TEMPORARY_TABLESPACE], T1.[DBA_USERS.CREATED], T1.[DBA_USERS.PROFILE], T1.[DBA_USERS.INITIAL_RSRC_CONSUMER_GROUP], T1.[DBA_USERS.EXTERNAL_NAME])
    FROM (
        SELECT 
            T.USERNAME AS [DBA_USERS.USERNAME], 
            T.USER_ID AS [DBA_USERS.USER_ID], 
            T.PASSWORD AS [DBA_USERS.PASSWORD], 
            T.ACCOUNT_STATUS AS [DBA_USERS.ACCOUNT_STATUS], 
            T.LOCK_DATE AS [DBA_USERS.LOCK_DATE], 
            T.EXPIRY_DATE AS [DBA_USERS.EXPIRY_DATE], 
            T.DEFAULT_TABLESPACE AS [DBA_USERS.DEFAULT_TABLESPACE], 
            T.TEMPORARY_TABLESPACE AS [DBA_USERS.TEMPORARY_TABLESPACE], 
            T.CREATED AS [DBA_USERS.CREATED], 
            T.PROFILE AS [DBA_USERS.PROFILE], 
            T.INITIAL_RSRC_CONSUMER_GROUP AS [DBA_USERS.INITIAL_RSRC_CONSUMER_GROUP], 
            T.EXTERNAL_NAME AS [DBA_USERS.EXTERNAL_NAME], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_USERS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_VIEWS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_VIEWS
        [EFModel.DataDictionary.Store.DBA_VIEWS](T1.[DBA_VIEWS.OWNER], T1.[DBA_VIEWS.VIEW_NAME], T1.[DBA_VIEWS.TEXT_LENGTH], T1.[DBA_VIEWS.TEXT], T1.[DBA_VIEWS.TYPE_TEXT_LENGTH], T1.[DBA_VIEWS.TYPE_TEXT], T1.[DBA_VIEWS.OID_TEXT_LENGTH], T1.[DBA_VIEWS.OID_TEXT], T1.[DBA_VIEWS.VIEW_TYPE_OWNER], T1.[DBA_VIEWS.VIEW_TYPE], T1.[DBA_VIEWS.SUPERVIEW_NAME])
    FROM (
        SELECT 
            T.OWNER AS [DBA_VIEWS.OWNER], 
            T.VIEW_NAME AS [DBA_VIEWS.VIEW_NAME], 
            T.TEXT_LENGTH AS [DBA_VIEWS.TEXT_LENGTH], 
            T.TEXT AS [DBA_VIEWS.TEXT], 
            T.TYPE_TEXT_LENGTH AS [DBA_VIEWS.TYPE_TEXT_LENGTH], 
            T.TYPE_TEXT AS [DBA_VIEWS.TYPE_TEXT], 
            T.OID_TEXT_LENGTH AS [DBA_VIEWS.OID_TEXT_LENGTH], 
            T.OID_TEXT AS [DBA_VIEWS.OID_TEXT], 
            T.VIEW_TYPE_OWNER AS [DBA_VIEWS.VIEW_TYPE_OWNER], 
            T.VIEW_TYPE AS [DBA_VIEWS.VIEW_TYPE], 
            T.SUPERVIEW_NAME AS [DBA_VIEWS.SUPERVIEW_NAME], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_VIEWS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_VIEWS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_VIEWS
        [EFModel.DataDictionary.DBA_VIEWS](T1.[DBA_VIEWS.OWNER], T1.[DBA_VIEWS.VIEW_NAME], T1.[DBA_VIEWS.TEXT_LENGTH], T1.[DBA_VIEWS.TEXT], T1.[DBA_VIEWS.TYPE_TEXT_LENGTH], T1.[DBA_VIEWS.TYPE_TEXT], T1.[DBA_VIEWS.OID_TEXT_LENGTH], T1.[DBA_VIEWS.OID_TEXT], T1.[DBA_VIEWS.VIEW_TYPE_OWNER], T1.[DBA_VIEWS.VIEW_TYPE], T1.[DBA_VIEWS.SUPERVIEW_NAME])
    FROM (
        SELECT 
            T.OWNER AS [DBA_VIEWS.OWNER], 
            T.VIEW_NAME AS [DBA_VIEWS.VIEW_NAME], 
            T.TEXT_LENGTH AS [DBA_VIEWS.TEXT_LENGTH], 
            T.TEXT AS [DBA_VIEWS.TEXT], 
            T.TYPE_TEXT_LENGTH AS [DBA_VIEWS.TYPE_TEXT_LENGTH], 
            T.TYPE_TEXT AS [DBA_VIEWS.TYPE_TEXT], 
            T.OID_TEXT_LENGTH AS [DBA_VIEWS.OID_TEXT_LENGTH], 
            T.OID_TEXT AS [DBA_VIEWS.OID_TEXT], 
            T.VIEW_TYPE_OWNER AS [DBA_VIEWS.VIEW_TYPE_OWNER], 
            T.VIEW_TYPE AS [DBA_VIEWS.VIEW_TYPE], 
            T.SUPERVIEW_NAME AS [DBA_VIEWS.SUPERVIEW_NAME], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_VIEWS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_CONSTRAINTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_CONSTRAINTS
        [EFModel.DataDictionary.Store.DBA_CONSTRAINTS](T1.[DBA_CONSTRAINTS.OWNER], T1.[DBA_CONSTRAINTS.CONSTRAINT_NAME], T1.[DBA_CONSTRAINTS.CONSTRAINT_TYPE], T1.[DBA_CONSTRAINTS.TABLE_NAME], T1.[DBA_CONSTRAINTS.SEARCH_CONDITION], T1.[DBA_CONSTRAINTS.R_OWNER], T1.[DBA_CONSTRAINTS.R_CONSTRAINT_NAME], T1.[DBA_CONSTRAINTS.DELETE_RULE], T1.[DBA_CONSTRAINTS.STATUS], T1.[DBA_CONSTRAINTS.DEFERRABLE], T1.[DBA_CONSTRAINTS.DEFERRED], T1.[DBA_CONSTRAINTS.VALIDATED], T1.[DBA_CONSTRAINTS.GENERATED], T1.[DBA_CONSTRAINTS.BAD], T1.[DBA_CONSTRAINTS.RELY], T1.[DBA_CONSTRAINTS.LAST_CHANGE], T1.[DBA_CONSTRAINTS.INDEX_OWNER], T1.[DBA_CONSTRAINTS.INDEX_NAME], T1.[DBA_CONSTRAINTS.INVALID], T1.[DBA_CONSTRAINTS.VIEW_RELATED])
    FROM (
        SELECT 
            T.OWNER AS [DBA_CONSTRAINTS.OWNER], 
            T.CONSTRAINT_NAME AS [DBA_CONSTRAINTS.CONSTRAINT_NAME], 
            T.CONSTRAINT_TYPE AS [DBA_CONSTRAINTS.CONSTRAINT_TYPE], 
            T.TABLE_NAME AS [DBA_CONSTRAINTS.TABLE_NAME], 
            T.SEARCH_CONDITION AS [DBA_CONSTRAINTS.SEARCH_CONDITION], 
            T.R_OWNER AS [DBA_CONSTRAINTS.R_OWNER], 
            T.R_CONSTRAINT_NAME AS [DBA_CONSTRAINTS.R_CONSTRAINT_NAME], 
            T.DELETE_RULE AS [DBA_CONSTRAINTS.DELETE_RULE], 
            T.STATUS AS [DBA_CONSTRAINTS.STATUS], 
            T.DEFERRABLE AS [DBA_CONSTRAINTS.DEFERRABLE], 
            T.DEFERRED AS [DBA_CONSTRAINTS.DEFERRED], 
            T.VALIDATED AS [DBA_CONSTRAINTS.VALIDATED], 
            T.GENERATED AS [DBA_CONSTRAINTS.GENERATED], 
            T.BAD AS [DBA_CONSTRAINTS.BAD], 
            T.RELY AS [DBA_CONSTRAINTS.RELY], 
            T.LAST_CHANGE AS [DBA_CONSTRAINTS.LAST_CHANGE], 
            T.INDEX_OWNER AS [DBA_CONSTRAINTS.INDEX_OWNER], 
            T.INDEX_NAME AS [DBA_CONSTRAINTS.INDEX_NAME], 
            T.INVALID AS [DBA_CONSTRAINTS.INVALID], 
            T.VIEW_RELATED AS [DBA_CONSTRAINTS.VIEW_RELATED], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_CONSTRAINTS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_CONSTRAINTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_CONSTRAINTS
        [EFModel.DataDictionary.DBA_CONSTRAINTS](T1.[DBA_CONSTRAINTS.OWNER], T1.[DBA_CONSTRAINTS.CONSTRAINT_NAME], T1.[DBA_CONSTRAINTS.CONSTRAINT_TYPE], T1.[DBA_CONSTRAINTS.TABLE_NAME], T1.[DBA_CONSTRAINTS.SEARCH_CONDITION], T1.[DBA_CONSTRAINTS.R_OWNER], T1.[DBA_CONSTRAINTS.R_CONSTRAINT_NAME], T1.[DBA_CONSTRAINTS.DELETE_RULE], T1.[DBA_CONSTRAINTS.STATUS], T1.[DBA_CONSTRAINTS.DEFERRABLE], T1.[DBA_CONSTRAINTS.DEFERRED], T1.[DBA_CONSTRAINTS.VALIDATED], T1.[DBA_CONSTRAINTS.GENERATED], T1.[DBA_CONSTRAINTS.BAD], T1.[DBA_CONSTRAINTS.RELY], T1.[DBA_CONSTRAINTS.LAST_CHANGE], T1.[DBA_CONSTRAINTS.INDEX_OWNER], T1.[DBA_CONSTRAINTS.INDEX_NAME], T1.[DBA_CONSTRAINTS.INVALID], T1.[DBA_CONSTRAINTS.VIEW_RELATED])
    FROM (
        SELECT 
            T.OWNER AS [DBA_CONSTRAINTS.OWNER], 
            T.CONSTRAINT_NAME AS [DBA_CONSTRAINTS.CONSTRAINT_NAME], 
            T.CONSTRAINT_TYPE AS [DBA_CONSTRAINTS.CONSTRAINT_TYPE], 
            T.TABLE_NAME AS [DBA_CONSTRAINTS.TABLE_NAME], 
            T.SEARCH_CONDITION AS [DBA_CONSTRAINTS.SEARCH_CONDITION], 
            T.R_OWNER AS [DBA_CONSTRAINTS.R_OWNER], 
            T.R_CONSTRAINT_NAME AS [DBA_CONSTRAINTS.R_CONSTRAINT_NAME], 
            T.DELETE_RULE AS [DBA_CONSTRAINTS.DELETE_RULE], 
            T.STATUS AS [DBA_CONSTRAINTS.STATUS], 
            T.DEFERRABLE AS [DBA_CONSTRAINTS.DEFERRABLE], 
            T.DEFERRED AS [DBA_CONSTRAINTS.DEFERRED], 
            T.VALIDATED AS [DBA_CONSTRAINTS.VALIDATED], 
            T.GENERATED AS [DBA_CONSTRAINTS.GENERATED], 
            T.BAD AS [DBA_CONSTRAINTS.BAD], 
            T.RELY AS [DBA_CONSTRAINTS.RELY], 
            T.LAST_CHANGE AS [DBA_CONSTRAINTS.LAST_CHANGE], 
            T.INDEX_OWNER AS [DBA_CONSTRAINTS.INDEX_OWNER], 
            T.INDEX_NAME AS [DBA_CONSTRAINTS.INDEX_NAME], 
            T.INVALID AS [DBA_CONSTRAINTS.INVALID], 
            T.VIEW_RELATED AS [DBA_CONSTRAINTS.VIEW_RELATED], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_CONSTRAINTS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_CONS_COLUMNS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_CONS_COLUMNS
        [EFModel.DataDictionary.Store.DBA_CONS_COLUMNS](T1.[DBA_CONS_COLUMNS.OWNER], T1.[DBA_CONS_COLUMNS.CONSTRAINT_NAME], T1.[DBA_CONS_COLUMNS.TABLE_NAME], T1.[DBA_CONS_COLUMNS.COLUMN_NAME], T1.[DBA_CONS_COLUMNS.POSITION])
    FROM (
        SELECT 
            T.OWNER AS [DBA_CONS_COLUMNS.OWNER], 
            T.CONSTRAINT_NAME AS [DBA_CONS_COLUMNS.CONSTRAINT_NAME], 
            T.TABLE_NAME AS [DBA_CONS_COLUMNS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_CONS_COLUMNS.COLUMN_NAME], 
            T.POSITION AS [DBA_CONS_COLUMNS.POSITION], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_CONS_COLUMNS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_CONS_COLUMNS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_CONS_COLUMNS
        [EFModel.DataDictionary.DBA_CONS_COLUMNS](T1.[DBA_CONS_COLUMNS.OWNER], T1.[DBA_CONS_COLUMNS.CONSTRAINT_NAME], T1.[DBA_CONS_COLUMNS.TABLE_NAME], T1.[DBA_CONS_COLUMNS.COLUMN_NAME], T1.[DBA_CONS_COLUMNS.POSITION])
    FROM (
        SELECT 
            T.OWNER AS [DBA_CONS_COLUMNS.OWNER], 
            T.CONSTRAINT_NAME AS [DBA_CONS_COLUMNS.CONSTRAINT_NAME], 
            T.TABLE_NAME AS [DBA_CONS_COLUMNS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_CONS_COLUMNS.COLUMN_NAME], 
            T.POSITION AS [DBA_CONS_COLUMNS.POSITION], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_CONS_COLUMNS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_SOURCE_TABLES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SOURCE_TABLES
        [EFModel.DataDictionary.Store.DBA_SOURCE_TABLES](T1.[DBA_SOURCE_TABLES.SOURCE_SCHEMA_NAME], T1.[DBA_SOURCE_TABLES.SOURCE_TABLE_NAME])
    FROM (
        SELECT 
            T.SOURCE_SCHEMA_NAME AS [DBA_SOURCE_TABLES.SOURCE_SCHEMA_NAME], 
            T.SOURCE_TABLE_NAME AS [DBA_SOURCE_TABLES.SOURCE_TABLE_NAME], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_SOURCE_TABLES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_SOURCE_TABLES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SOURCE_TABLES
        [EFModel.DataDictionary.DBA_SOURCE_TABLES](T1.[DBA_SOURCE_TABLES.SOURCE_SCHEMA_NAME], T1.[DBA_SOURCE_TABLES.SOURCE_TABLE_NAME])
    FROM (
        SELECT 
            T.SOURCE_SCHEMA_NAME AS [DBA_SOURCE_TABLES.SOURCE_SCHEMA_NAME], 
            T.SOURCE_TABLE_NAME AS [DBA_SOURCE_TABLES.SOURCE_TABLE_NAME], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_SOURCE_TABLES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_PART_TABLES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_PART_TABLES
        [EFModel.DataDictionary.Store.DBA_PART_TABLES](T1.[DBA_PART_TABLES.OWNER], T1.[DBA_PART_TABLES.TABLE_NAME], T1.[DBA_PART_TABLES.PARTITIONING_TYPE], T1.[DBA_PART_TABLES.SUBPARTITIONING_TYPE], T1.[DBA_PART_TABLES.PARTITION_COUNT], T1.[DBA_PART_TABLES.DEF_SUBPARTITION_COUNT], T1.[DBA_PART_TABLES.PARTITIONING_KEY_COUNT], T1.[DBA_PART_TABLES.SUBPARTITIONING_KEY_COUNT], T1.[DBA_PART_TABLES.STATUS], T1.[DBA_PART_TABLES.DEF_TABLESPACE_NAME], T1.[DBA_PART_TABLES.DEF_PCT_FREE], T1.[DBA_PART_TABLES.DEF_PCT_USED], T1.[DBA_PART_TABLES.DEF_INI_TRANS], T1.[DBA_PART_TABLES.DEF_MAX_TRANS], T1.[DBA_PART_TABLES.DEF_INITIAL_EXTENT], T1.[DBA_PART_TABLES.DEF_NEXT_EXTENT], T1.[DBA_PART_TABLES.DEF_MIN_EXTENTS], T1.[DBA_PART_TABLES.DEF_MAX_EXTENTS], T1.[DBA_PART_TABLES.DEF_PCT_INCREASE], T1.[DBA_PART_TABLES.DEF_FREELISTS], T1.[DBA_PART_TABLES.DEF_FREELIST_GROUPS], T1.[DBA_PART_TABLES.DEF_LOGGING], T1.[DBA_PART_TABLES.DEF_COMPRESSION], T1.[DBA_PART_TABLES.DEF_BUFFER_POOL])
    FROM (
        SELECT 
            T.OWNER AS [DBA_PART_TABLES.OWNER], 
            T.TABLE_NAME AS [DBA_PART_TABLES.TABLE_NAME], 
            T.PARTITIONING_TYPE AS [DBA_PART_TABLES.PARTITIONING_TYPE], 
            T.SUBPARTITIONING_TYPE AS [DBA_PART_TABLES.SUBPARTITIONING_TYPE], 
            T.PARTITION_COUNT AS [DBA_PART_TABLES.PARTITION_COUNT], 
            T.DEF_SUBPARTITION_COUNT AS [DBA_PART_TABLES.DEF_SUBPARTITION_COUNT], 
            T.PARTITIONING_KEY_COUNT AS [DBA_PART_TABLES.PARTITIONING_KEY_COUNT], 
            T.SUBPARTITIONING_KEY_COUNT AS [DBA_PART_TABLES.SUBPARTITIONING_KEY_COUNT], 
            T.STATUS AS [DBA_PART_TABLES.STATUS], 
            T.DEF_TABLESPACE_NAME AS [DBA_PART_TABLES.DEF_TABLESPACE_NAME], 
            T.DEF_PCT_FREE AS [DBA_PART_TABLES.DEF_PCT_FREE], 
            T.DEF_PCT_USED AS [DBA_PART_TABLES.DEF_PCT_USED], 
            T.DEF_INI_TRANS AS [DBA_PART_TABLES.DEF_INI_TRANS], 
            T.DEF_MAX_TRANS AS [DBA_PART_TABLES.DEF_MAX_TRANS], 
            T.DEF_INITIAL_EXTENT AS [DBA_PART_TABLES.DEF_INITIAL_EXTENT], 
            T.DEF_NEXT_EXTENT AS [DBA_PART_TABLES.DEF_NEXT_EXTENT], 
            T.DEF_MIN_EXTENTS AS [DBA_PART_TABLES.DEF_MIN_EXTENTS], 
            T.DEF_MAX_EXTENTS AS [DBA_PART_TABLES.DEF_MAX_EXTENTS], 
            T.DEF_PCT_INCREASE AS [DBA_PART_TABLES.DEF_PCT_INCREASE], 
            T.DEF_FREELISTS AS [DBA_PART_TABLES.DEF_FREELISTS], 
            T.DEF_FREELIST_GROUPS AS [DBA_PART_TABLES.DEF_FREELIST_GROUPS], 
            T.DEF_LOGGING AS [DBA_PART_TABLES.DEF_LOGGING], 
            T.DEF_COMPRESSION AS [DBA_PART_TABLES.DEF_COMPRESSION], 
            T.DEF_BUFFER_POOL AS [DBA_PART_TABLES.DEF_BUFFER_POOL], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_PART_TABLES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_PART_TABLES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_PART_TABLES
        [EFModel.DataDictionary.DBA_PART_TABLES](T1.[DBA_PART_TABLES.OWNER], T1.[DBA_PART_TABLES.TABLE_NAME], T1.[DBA_PART_TABLES.PARTITIONING_TYPE], T1.[DBA_PART_TABLES.SUBPARTITIONING_TYPE], T1.[DBA_PART_TABLES.PARTITION_COUNT], T1.[DBA_PART_TABLES.DEF_SUBPARTITION_COUNT], T1.[DBA_PART_TABLES.PARTITIONING_KEY_COUNT], T1.[DBA_PART_TABLES.SUBPARTITIONING_KEY_COUNT], T1.[DBA_PART_TABLES.STATUS], T1.[DBA_PART_TABLES.DEF_TABLESPACE_NAME], T1.[DBA_PART_TABLES.DEF_PCT_FREE], T1.[DBA_PART_TABLES.DEF_PCT_USED], T1.[DBA_PART_TABLES.DEF_INI_TRANS], T1.[DBA_PART_TABLES.DEF_MAX_TRANS], T1.[DBA_PART_TABLES.DEF_INITIAL_EXTENT], T1.[DBA_PART_TABLES.DEF_NEXT_EXTENT], T1.[DBA_PART_TABLES.DEF_MIN_EXTENTS], T1.[DBA_PART_TABLES.DEF_MAX_EXTENTS], T1.[DBA_PART_TABLES.DEF_PCT_INCREASE], T1.[DBA_PART_TABLES.DEF_FREELISTS], T1.[DBA_PART_TABLES.DEF_FREELIST_GROUPS], T1.[DBA_PART_TABLES.DEF_LOGGING], T1.[DBA_PART_TABLES.DEF_COMPRESSION], T1.[DBA_PART_TABLES.DEF_BUFFER_POOL])
    FROM (
        SELECT 
            T.OWNER AS [DBA_PART_TABLES.OWNER], 
            T.TABLE_NAME AS [DBA_PART_TABLES.TABLE_NAME], 
            T.PARTITIONING_TYPE AS [DBA_PART_TABLES.PARTITIONING_TYPE], 
            T.SUBPARTITIONING_TYPE AS [DBA_PART_TABLES.SUBPARTITIONING_TYPE], 
            T.PARTITION_COUNT AS [DBA_PART_TABLES.PARTITION_COUNT], 
            T.DEF_SUBPARTITION_COUNT AS [DBA_PART_TABLES.DEF_SUBPARTITION_COUNT], 
            T.PARTITIONING_KEY_COUNT AS [DBA_PART_TABLES.PARTITIONING_KEY_COUNT], 
            T.SUBPARTITIONING_KEY_COUNT AS [DBA_PART_TABLES.SUBPARTITIONING_KEY_COUNT], 
            T.STATUS AS [DBA_PART_TABLES.STATUS], 
            T.DEF_TABLESPACE_NAME AS [DBA_PART_TABLES.DEF_TABLESPACE_NAME], 
            T.DEF_PCT_FREE AS [DBA_PART_TABLES.DEF_PCT_FREE], 
            T.DEF_PCT_USED AS [DBA_PART_TABLES.DEF_PCT_USED], 
            T.DEF_INI_TRANS AS [DBA_PART_TABLES.DEF_INI_TRANS], 
            T.DEF_MAX_TRANS AS [DBA_PART_TABLES.DEF_MAX_TRANS], 
            T.DEF_INITIAL_EXTENT AS [DBA_PART_TABLES.DEF_INITIAL_EXTENT], 
            T.DEF_NEXT_EXTENT AS [DBA_PART_TABLES.DEF_NEXT_EXTENT], 
            T.DEF_MIN_EXTENTS AS [DBA_PART_TABLES.DEF_MIN_EXTENTS], 
            T.DEF_MAX_EXTENTS AS [DBA_PART_TABLES.DEF_MAX_EXTENTS], 
            T.DEF_PCT_INCREASE AS [DBA_PART_TABLES.DEF_PCT_INCREASE], 
            T.DEF_FREELISTS AS [DBA_PART_TABLES.DEF_FREELISTS], 
            T.DEF_FREELIST_GROUPS AS [DBA_PART_TABLES.DEF_FREELIST_GROUPS], 
            T.DEF_LOGGING AS [DBA_PART_TABLES.DEF_LOGGING], 
            T.DEF_COMPRESSION AS [DBA_PART_TABLES.DEF_COMPRESSION], 
            T.DEF_BUFFER_POOL AS [DBA_PART_TABLES.DEF_BUFFER_POOL], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_PART_TABLES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_PART_INDEXES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_PART_INDEXES
        [EFModel.DataDictionary.Store.DBA_PART_INDEXES](T1.[DBA_PART_INDEXES.OWNER], T1.[DBA_PART_INDEXES.INDEX_NAME], T1.[DBA_PART_INDEXES.TABLE_NAME], T1.[DBA_PART_INDEXES.PARTITIONING_TYPE], T1.[DBA_PART_INDEXES.SUBPARTITIONING_TYPE], T1.[DBA_PART_INDEXES.PARTITION_COUNT], T1.[DBA_PART_INDEXES.DEF_SUBPARTITION_COUNT], T1.[DBA_PART_INDEXES.PARTITIONING_KEY_COUNT], T1.[DBA_PART_INDEXES.SUBPARTITIONING_KEY_COUNT], T1.[DBA_PART_INDEXES.LOCALITY], T1.[DBA_PART_INDEXES.ALIGNMENT], T1.[DBA_PART_INDEXES.DEF_TABLESPACE_NAME], T1.[DBA_PART_INDEXES.DEF_PCT_FREE], T1.[DBA_PART_INDEXES.DEF_INI_TRANS], T1.[DBA_PART_INDEXES.DEF_MAX_TRANS], T1.[DBA_PART_INDEXES.DEF_INITIAL_EXTENT], T1.[DBA_PART_INDEXES.DEF_NEXT_EXTENT], T1.[DBA_PART_INDEXES.DEF_MIN_EXTENTS], T1.[DBA_PART_INDEXES.DEF_MAX_EXTENTS], T1.[DBA_PART_INDEXES.DEF_PCT_INCREASE], T1.[DBA_PART_INDEXES.DEF_FREELISTS], T1.[DBA_PART_INDEXES.DEF_FREELIST_GROUPS], T1.[DBA_PART_INDEXES.DEF_LOGGING], T1.[DBA_PART_INDEXES.DEF_BUFFER_POOL], T1.[DBA_PART_INDEXES.DEF_PARAMETERS])
    FROM (
        SELECT 
            T.OWNER AS [DBA_PART_INDEXES.OWNER], 
            T.INDEX_NAME AS [DBA_PART_INDEXES.INDEX_NAME], 
            T.TABLE_NAME AS [DBA_PART_INDEXES.TABLE_NAME], 
            T.PARTITIONING_TYPE AS [DBA_PART_INDEXES.PARTITIONING_TYPE], 
            T.SUBPARTITIONING_TYPE AS [DBA_PART_INDEXES.SUBPARTITIONING_TYPE], 
            T.PARTITION_COUNT AS [DBA_PART_INDEXES.PARTITION_COUNT], 
            T.DEF_SUBPARTITION_COUNT AS [DBA_PART_INDEXES.DEF_SUBPARTITION_COUNT], 
            T.PARTITIONING_KEY_COUNT AS [DBA_PART_INDEXES.PARTITIONING_KEY_COUNT], 
            T.SUBPARTITIONING_KEY_COUNT AS [DBA_PART_INDEXES.SUBPARTITIONING_KEY_COUNT], 
            T.LOCALITY AS [DBA_PART_INDEXES.LOCALITY], 
            T.ALIGNMENT AS [DBA_PART_INDEXES.ALIGNMENT], 
            T.DEF_TABLESPACE_NAME AS [DBA_PART_INDEXES.DEF_TABLESPACE_NAME], 
            T.DEF_PCT_FREE AS [DBA_PART_INDEXES.DEF_PCT_FREE], 
            T.DEF_INI_TRANS AS [DBA_PART_INDEXES.DEF_INI_TRANS], 
            T.DEF_MAX_TRANS AS [DBA_PART_INDEXES.DEF_MAX_TRANS], 
            T.DEF_INITIAL_EXTENT AS [DBA_PART_INDEXES.DEF_INITIAL_EXTENT], 
            T.DEF_NEXT_EXTENT AS [DBA_PART_INDEXES.DEF_NEXT_EXTENT], 
            T.DEF_MIN_EXTENTS AS [DBA_PART_INDEXES.DEF_MIN_EXTENTS], 
            T.DEF_MAX_EXTENTS AS [DBA_PART_INDEXES.DEF_MAX_EXTENTS], 
            T.DEF_PCT_INCREASE AS [DBA_PART_INDEXES.DEF_PCT_INCREASE], 
            T.DEF_FREELISTS AS [DBA_PART_INDEXES.DEF_FREELISTS], 
            T.DEF_FREELIST_GROUPS AS [DBA_PART_INDEXES.DEF_FREELIST_GROUPS], 
            T.DEF_LOGGING AS [DBA_PART_INDEXES.DEF_LOGGING], 
            T.DEF_BUFFER_POOL AS [DBA_PART_INDEXES.DEF_BUFFER_POOL], 
            T.DEF_PARAMETERS AS [DBA_PART_INDEXES.DEF_PARAMETERS], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_PART_INDEXES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_PART_INDEXES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_PART_INDEXES
        [EFModel.DataDictionary.DBA_PART_INDEXES](T1.[DBA_PART_INDEXES.OWNER], T1.[DBA_PART_INDEXES.INDEX_NAME], T1.[DBA_PART_INDEXES.TABLE_NAME], T1.[DBA_PART_INDEXES.PARTITIONING_TYPE], T1.[DBA_PART_INDEXES.SUBPARTITIONING_TYPE], T1.[DBA_PART_INDEXES.PARTITION_COUNT], T1.[DBA_PART_INDEXES.DEF_SUBPARTITION_COUNT], T1.[DBA_PART_INDEXES.PARTITIONING_KEY_COUNT], T1.[DBA_PART_INDEXES.SUBPARTITIONING_KEY_COUNT], T1.[DBA_PART_INDEXES.LOCALITY], T1.[DBA_PART_INDEXES.ALIGNMENT], T1.[DBA_PART_INDEXES.DEF_TABLESPACE_NAME], T1.[DBA_PART_INDEXES.DEF_PCT_FREE], T1.[DBA_PART_INDEXES.DEF_INI_TRANS], T1.[DBA_PART_INDEXES.DEF_MAX_TRANS], T1.[DBA_PART_INDEXES.DEF_INITIAL_EXTENT], T1.[DBA_PART_INDEXES.DEF_NEXT_EXTENT], T1.[DBA_PART_INDEXES.DEF_MIN_EXTENTS], T1.[DBA_PART_INDEXES.DEF_MAX_EXTENTS], T1.[DBA_PART_INDEXES.DEF_PCT_INCREASE], T1.[DBA_PART_INDEXES.DEF_FREELISTS], T1.[DBA_PART_INDEXES.DEF_FREELIST_GROUPS], T1.[DBA_PART_INDEXES.DEF_LOGGING], T1.[DBA_PART_INDEXES.DEF_BUFFER_POOL], T1.[DBA_PART_INDEXES.DEF_PARAMETERS])
    FROM (
        SELECT 
            T.OWNER AS [DBA_PART_INDEXES.OWNER], 
            T.INDEX_NAME AS [DBA_PART_INDEXES.INDEX_NAME], 
            T.TABLE_NAME AS [DBA_PART_INDEXES.TABLE_NAME], 
            T.PARTITIONING_TYPE AS [DBA_PART_INDEXES.PARTITIONING_TYPE], 
            T.SUBPARTITIONING_TYPE AS [DBA_PART_INDEXES.SUBPARTITIONING_TYPE], 
            T.PARTITION_COUNT AS [DBA_PART_INDEXES.PARTITION_COUNT], 
            T.DEF_SUBPARTITION_COUNT AS [DBA_PART_INDEXES.DEF_SUBPARTITION_COUNT], 
            T.PARTITIONING_KEY_COUNT AS [DBA_PART_INDEXES.PARTITIONING_KEY_COUNT], 
            T.SUBPARTITIONING_KEY_COUNT AS [DBA_PART_INDEXES.SUBPARTITIONING_KEY_COUNT], 
            T.LOCALITY AS [DBA_PART_INDEXES.LOCALITY], 
            T.ALIGNMENT AS [DBA_PART_INDEXES.ALIGNMENT], 
            T.DEF_TABLESPACE_NAME AS [DBA_PART_INDEXES.DEF_TABLESPACE_NAME], 
            T.DEF_PCT_FREE AS [DBA_PART_INDEXES.DEF_PCT_FREE], 
            T.DEF_INI_TRANS AS [DBA_PART_INDEXES.DEF_INI_TRANS], 
            T.DEF_MAX_TRANS AS [DBA_PART_INDEXES.DEF_MAX_TRANS], 
            T.DEF_INITIAL_EXTENT AS [DBA_PART_INDEXES.DEF_INITIAL_EXTENT], 
            T.DEF_NEXT_EXTENT AS [DBA_PART_INDEXES.DEF_NEXT_EXTENT], 
            T.DEF_MIN_EXTENTS AS [DBA_PART_INDEXES.DEF_MIN_EXTENTS], 
            T.DEF_MAX_EXTENTS AS [DBA_PART_INDEXES.DEF_MAX_EXTENTS], 
            T.DEF_PCT_INCREASE AS [DBA_PART_INDEXES.DEF_PCT_INCREASE], 
            T.DEF_FREELISTS AS [DBA_PART_INDEXES.DEF_FREELISTS], 
            T.DEF_FREELIST_GROUPS AS [DBA_PART_INDEXES.DEF_FREELIST_GROUPS], 
            T.DEF_LOGGING AS [DBA_PART_INDEXES.DEF_LOGGING], 
            T.DEF_BUFFER_POOL AS [DBA_PART_INDEXES.DEF_BUFFER_POOL], 
            T.DEF_PARAMETERS AS [DBA_PART_INDEXES.DEF_PARAMETERS], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_PART_INDEXES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_PART_KEY_COLUMNS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_PART_KEY_COLUMNS
        [EFModel.DataDictionary.Store.DBA_PART_KEY_COLUMNS](T1.[DBA_PART_KEY_COLUMNS.OWNER], T1.[DBA_PART_KEY_COLUMNS.NAME], T1.[DBA_PART_KEY_COLUMNS.OBJECT_TYPE], T1.[DBA_PART_KEY_COLUMNS.COLUMN_NAME], T1.[DBA_PART_KEY_COLUMNS.COLUMN_POSITION])
    FROM (
        SELECT 
            T.OWNER AS [DBA_PART_KEY_COLUMNS.OWNER], 
            T.NAME AS [DBA_PART_KEY_COLUMNS.NAME], 
            T.OBJECT_TYPE AS [DBA_PART_KEY_COLUMNS.OBJECT_TYPE], 
            T.COLUMN_NAME AS [DBA_PART_KEY_COLUMNS.COLUMN_NAME], 
            T.COLUMN_POSITION AS [DBA_PART_KEY_COLUMNS.COLUMN_POSITION], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_PART_KEY_COLUMNS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_PART_KEY_COLUMNS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_PART_KEY_COLUMNS
        [EFModel.DataDictionary.DBA_PART_KEY_COLUMNS](T1.[DBA_PART_KEY_COLUMNS.OWNER], T1.[DBA_PART_KEY_COLUMNS.NAME], T1.[DBA_PART_KEY_COLUMNS.OBJECT_TYPE], T1.[DBA_PART_KEY_COLUMNS.COLUMN_NAME], T1.[DBA_PART_KEY_COLUMNS.COLUMN_POSITION])
    FROM (
        SELECT 
            T.OWNER AS [DBA_PART_KEY_COLUMNS.OWNER], 
            T.NAME AS [DBA_PART_KEY_COLUMNS.NAME], 
            T.OBJECT_TYPE AS [DBA_PART_KEY_COLUMNS.OBJECT_TYPE], 
            T.COLUMN_NAME AS [DBA_PART_KEY_COLUMNS.COLUMN_NAME], 
            T.COLUMN_POSITION AS [DBA_PART_KEY_COLUMNS.COLUMN_POSITION], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_PART_KEY_COLUMNS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_TAB_PARTITIONS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TAB_PARTITIONS
        [EFModel.DataDictionary.Store.DBA_TAB_PARTITIONS](T1.[DBA_TAB_PARTITIONS.TABLE_OWNER], T1.[DBA_TAB_PARTITIONS.TABLE_NAME], T1.[DBA_TAB_PARTITIONS.COMPOSITE], T1.[DBA_TAB_PARTITIONS.PARTITION_NAME], T1.[DBA_TAB_PARTITIONS.SUBPARTITION_COUNT], T1.[DBA_TAB_PARTITIONS.HIGH_VALUE], T1.[DBA_TAB_PARTITIONS.HIGH_VALUE_LENGTH], T1.[DBA_TAB_PARTITIONS.PARTITION_POSITION], T1.[DBA_TAB_PARTITIONS.TABLESPACE_NAME], T1.[DBA_TAB_PARTITIONS.PCT_FREE], T1.[DBA_TAB_PARTITIONS.PCT_USED], T1.[DBA_TAB_PARTITIONS.INI_TRANS], T1.[DBA_TAB_PARTITIONS.MAX_TRANS], T1.[DBA_TAB_PARTITIONS.INITIAL_EXTENT], T1.[DBA_TAB_PARTITIONS.NEXT_EXTENT], T1.[DBA_TAB_PARTITIONS.MIN_EXTENT], T1.[DBA_TAB_PARTITIONS.MAX_EXTENT], T1.[DBA_TAB_PARTITIONS.PCT_INCREASE], T1.[DBA_TAB_PARTITIONS.FREELISTS], T1.[DBA_TAB_PARTITIONS.FREELIST_GROUPS], T1.[DBA_TAB_PARTITIONS.LOGGING], T1.[DBA_TAB_PARTITIONS.COMPRESSION], T1.[DBA_TAB_PARTITIONS.NUM_ROWS], T1.[DBA_TAB_PARTITIONS.BLOCKS], T1.[DBA_TAB_PARTITIONS.EMPTY_BLOCKS], T1.[DBA_TAB_PARTITIONS.AVG_SPACE], T1.[DBA_TAB_PARTITIONS.CHAIN_CNT], T1.[DBA_TAB_PARTITIONS.AVG_ROW_LEN], T1.[DBA_TAB_PARTITIONS.SAMPLE_SIZE], T1.[DBA_TAB_PARTITIONS.LAST_ANALYZED], T1.[DBA_TAB_PARTITIONS.BUFFER_POOL], T1.[DBA_TAB_PARTITIONS.GLOBAL_STATS], T1.[DBA_TAB_PARTITIONS.USER_STATS])
    FROM (
        SELECT 
            T.TABLE_OWNER AS [DBA_TAB_PARTITIONS.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_TAB_PARTITIONS.TABLE_NAME], 
            T.COMPOSITE AS [DBA_TAB_PARTITIONS.COMPOSITE], 
            T.PARTITION_NAME AS [DBA_TAB_PARTITIONS.PARTITION_NAME], 
            T.SUBPARTITION_COUNT AS [DBA_TAB_PARTITIONS.SUBPARTITION_COUNT], 
            T.HIGH_VALUE AS [DBA_TAB_PARTITIONS.HIGH_VALUE], 
            T.HIGH_VALUE_LENGTH AS [DBA_TAB_PARTITIONS.HIGH_VALUE_LENGTH], 
            T.PARTITION_POSITION AS [DBA_TAB_PARTITIONS.PARTITION_POSITION], 
            T.TABLESPACE_NAME AS [DBA_TAB_PARTITIONS.TABLESPACE_NAME], 
            T.PCT_FREE AS [DBA_TAB_PARTITIONS.PCT_FREE], 
            T.PCT_USED AS [DBA_TAB_PARTITIONS.PCT_USED], 
            T.INI_TRANS AS [DBA_TAB_PARTITIONS.INI_TRANS], 
            T.MAX_TRANS AS [DBA_TAB_PARTITIONS.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_TAB_PARTITIONS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_TAB_PARTITIONS.NEXT_EXTENT], 
            T.MIN_EXTENT AS [DBA_TAB_PARTITIONS.MIN_EXTENT], 
            T.MAX_EXTENT AS [DBA_TAB_PARTITIONS.MAX_EXTENT], 
            T.PCT_INCREASE AS [DBA_TAB_PARTITIONS.PCT_INCREASE], 
            T.FREELISTS AS [DBA_TAB_PARTITIONS.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_TAB_PARTITIONS.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_TAB_PARTITIONS.LOGGING], 
            T.COMPRESSION AS [DBA_TAB_PARTITIONS.COMPRESSION], 
            T.NUM_ROWS AS [DBA_TAB_PARTITIONS.NUM_ROWS], 
            T.BLOCKS AS [DBA_TAB_PARTITIONS.BLOCKS], 
            T.EMPTY_BLOCKS AS [DBA_TAB_PARTITIONS.EMPTY_BLOCKS], 
            T.AVG_SPACE AS [DBA_TAB_PARTITIONS.AVG_SPACE], 
            T.CHAIN_CNT AS [DBA_TAB_PARTITIONS.CHAIN_CNT], 
            T.AVG_ROW_LEN AS [DBA_TAB_PARTITIONS.AVG_ROW_LEN], 
            T.SAMPLE_SIZE AS [DBA_TAB_PARTITIONS.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_TAB_PARTITIONS.LAST_ANALYZED], 
            T.BUFFER_POOL AS [DBA_TAB_PARTITIONS.BUFFER_POOL], 
            T.GLOBAL_STATS AS [DBA_TAB_PARTITIONS.GLOBAL_STATS], 
            T.USER_STATS AS [DBA_TAB_PARTITIONS.USER_STATS], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_TAB_PARTITIONS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_TAB_PARTITIONS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TAB_PARTITIONS
        [EFModel.DataDictionary.DBA_TAB_PARTITIONS](T1.[DBA_TAB_PARTITIONS.TABLE_OWNER], T1.[DBA_TAB_PARTITIONS.TABLE_NAME], T1.[DBA_TAB_PARTITIONS.COMPOSITE], T1.[DBA_TAB_PARTITIONS.PARTITION_NAME], T1.[DBA_TAB_PARTITIONS.SUBPARTITION_COUNT], T1.[DBA_TAB_PARTITIONS.HIGH_VALUE], T1.[DBA_TAB_PARTITIONS.HIGH_VALUE_LENGTH], T1.[DBA_TAB_PARTITIONS.PARTITION_POSITION], T1.[DBA_TAB_PARTITIONS.TABLESPACE_NAME], T1.[DBA_TAB_PARTITIONS.PCT_FREE], T1.[DBA_TAB_PARTITIONS.PCT_USED], T1.[DBA_TAB_PARTITIONS.INI_TRANS], T1.[DBA_TAB_PARTITIONS.MAX_TRANS], T1.[DBA_TAB_PARTITIONS.INITIAL_EXTENT], T1.[DBA_TAB_PARTITIONS.NEXT_EXTENT], T1.[DBA_TAB_PARTITIONS.MIN_EXTENT], T1.[DBA_TAB_PARTITIONS.MAX_EXTENT], T1.[DBA_TAB_PARTITIONS.PCT_INCREASE], T1.[DBA_TAB_PARTITIONS.FREELISTS], T1.[DBA_TAB_PARTITIONS.FREELIST_GROUPS], T1.[DBA_TAB_PARTITIONS.LOGGING], T1.[DBA_TAB_PARTITIONS.COMPRESSION], T1.[DBA_TAB_PARTITIONS.NUM_ROWS], T1.[DBA_TAB_PARTITIONS.BLOCKS], T1.[DBA_TAB_PARTITIONS.EMPTY_BLOCKS], T1.[DBA_TAB_PARTITIONS.AVG_SPACE], T1.[DBA_TAB_PARTITIONS.CHAIN_CNT], T1.[DBA_TAB_PARTITIONS.AVG_ROW_LEN], T1.[DBA_TAB_PARTITIONS.SAMPLE_SIZE], T1.[DBA_TAB_PARTITIONS.LAST_ANALYZED], T1.[DBA_TAB_PARTITIONS.BUFFER_POOL], T1.[DBA_TAB_PARTITIONS.GLOBAL_STATS], T1.[DBA_TAB_PARTITIONS.USER_STATS])
    FROM (
        SELECT 
            T.TABLE_OWNER AS [DBA_TAB_PARTITIONS.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_TAB_PARTITIONS.TABLE_NAME], 
            T.COMPOSITE AS [DBA_TAB_PARTITIONS.COMPOSITE], 
            T.PARTITION_NAME AS [DBA_TAB_PARTITIONS.PARTITION_NAME], 
            T.SUBPARTITION_COUNT AS [DBA_TAB_PARTITIONS.SUBPARTITION_COUNT], 
            T.HIGH_VALUE AS [DBA_TAB_PARTITIONS.HIGH_VALUE], 
            T.HIGH_VALUE_LENGTH AS [DBA_TAB_PARTITIONS.HIGH_VALUE_LENGTH], 
            T.PARTITION_POSITION AS [DBA_TAB_PARTITIONS.PARTITION_POSITION], 
            T.TABLESPACE_NAME AS [DBA_TAB_PARTITIONS.TABLESPACE_NAME], 
            T.PCT_FREE AS [DBA_TAB_PARTITIONS.PCT_FREE], 
            T.PCT_USED AS [DBA_TAB_PARTITIONS.PCT_USED], 
            T.INI_TRANS AS [DBA_TAB_PARTITIONS.INI_TRANS], 
            T.MAX_TRANS AS [DBA_TAB_PARTITIONS.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_TAB_PARTITIONS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_TAB_PARTITIONS.NEXT_EXTENT], 
            T.MIN_EXTENT AS [DBA_TAB_PARTITIONS.MIN_EXTENT], 
            T.MAX_EXTENT AS [DBA_TAB_PARTITIONS.MAX_EXTENT], 
            T.PCT_INCREASE AS [DBA_TAB_PARTITIONS.PCT_INCREASE], 
            T.FREELISTS AS [DBA_TAB_PARTITIONS.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_TAB_PARTITIONS.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_TAB_PARTITIONS.LOGGING], 
            T.COMPRESSION AS [DBA_TAB_PARTITIONS.COMPRESSION], 
            T.NUM_ROWS AS [DBA_TAB_PARTITIONS.NUM_ROWS], 
            T.BLOCKS AS [DBA_TAB_PARTITIONS.BLOCKS], 
            T.EMPTY_BLOCKS AS [DBA_TAB_PARTITIONS.EMPTY_BLOCKS], 
            T.AVG_SPACE AS [DBA_TAB_PARTITIONS.AVG_SPACE], 
            T.CHAIN_CNT AS [DBA_TAB_PARTITIONS.CHAIN_CNT], 
            T.AVG_ROW_LEN AS [DBA_TAB_PARTITIONS.AVG_ROW_LEN], 
            T.SAMPLE_SIZE AS [DBA_TAB_PARTITIONS.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_TAB_PARTITIONS.LAST_ANALYZED], 
            T.BUFFER_POOL AS [DBA_TAB_PARTITIONS.BUFFER_POOL], 
            T.GLOBAL_STATS AS [DBA_TAB_PARTITIONS.GLOBAL_STATS], 
            T.USER_STATS AS [DBA_TAB_PARTITIONS.USER_STATS], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_TAB_PARTITIONS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_IND_PARTITIONS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_IND_PARTITIONS
        [EFModel.DataDictionary.Store.DBA_IND_PARTITIONS](T1.[DBA_IND_PARTITIONS.INDEX_OWNER], T1.[DBA_IND_PARTITIONS.INDEX_NAME], T1.[DBA_IND_PARTITIONS.COMPOSITE], T1.[DBA_IND_PARTITIONS.PARTITION_NAME], T1.[DBA_IND_PARTITIONS.SUBPARTITION_COUNT], T1.[DBA_IND_PARTITIONS.HIGH_VALUE], T1.[DBA_IND_PARTITIONS.HIGH_VALUE_LENGTH], T1.[DBA_IND_PARTITIONS.PARTITION_POSITION], T1.[DBA_IND_PARTITIONS.STATUS], T1.[DBA_IND_PARTITIONS.TABLESPACE_NAME], T1.[DBA_IND_PARTITIONS.PCT_FREE], T1.[DBA_IND_PARTITIONS.INI_TRANS], T1.[DBA_IND_PARTITIONS.MAX_TRANS], T1.[DBA_IND_PARTITIONS.INITIAL_EXTENT], T1.[DBA_IND_PARTITIONS.NEXT_EXTENT], T1.[DBA_IND_PARTITIONS.MIN_EXTENT], T1.[DBA_IND_PARTITIONS.MAX_EXTENT], T1.[DBA_IND_PARTITIONS.PCT_INCREASE], T1.[DBA_IND_PARTITIONS.FREELISTS], T1.[DBA_IND_PARTITIONS.FREELIST_GROUPS], T1.[DBA_IND_PARTITIONS.LOGGING], T1.[DBA_IND_PARTITIONS.COMPRESSION], T1.[DBA_IND_PARTITIONS.BLEVEL], T1.[DBA_IND_PARTITIONS.LEAF_BLOCKS], T1.[DBA_IND_PARTITIONS.DISTINCT_KEYS], T1.[DBA_IND_PARTITIONS.AVG_LEAF_BLOCKS_PER_KEY], T1.[DBA_IND_PARTITIONS.AVG_DATA_BLOCKS_PER_KEY], T1.[DBA_IND_PARTITIONS.CLUSTERING_FACTOR], T1.[DBA_IND_PARTITIONS.NUM_ROWS], T1.[DBA_IND_PARTITIONS.SAMPLE_SIZE], T1.[DBA_IND_PARTITIONS.LAST_ANALYZED], T1.[DBA_IND_PARTITIONS.BUFFER_POOL], T1.[DBA_IND_PARTITIONS.USER_STATS], T1.[DBA_IND_PARTITIONS.PCT_DIRECT_ACCESS], T1.[DBA_IND_PARTITIONS.GLOBAL_STATS], T1.[DBA_IND_PARTITIONS.DOMIDX_OPSTATUS], T1.[DBA_IND_PARTITIONS.PARAMETERS])
    FROM (
        SELECT 
            T.INDEX_OWNER AS [DBA_IND_PARTITIONS.INDEX_OWNER], 
            T.INDEX_NAME AS [DBA_IND_PARTITIONS.INDEX_NAME], 
            T.COMPOSITE AS [DBA_IND_PARTITIONS.COMPOSITE], 
            T.PARTITION_NAME AS [DBA_IND_PARTITIONS.PARTITION_NAME], 
            T.SUBPARTITION_COUNT AS [DBA_IND_PARTITIONS.SUBPARTITION_COUNT], 
            T.HIGH_VALUE AS [DBA_IND_PARTITIONS.HIGH_VALUE], 
            T.HIGH_VALUE_LENGTH AS [DBA_IND_PARTITIONS.HIGH_VALUE_LENGTH], 
            T.PARTITION_POSITION AS [DBA_IND_PARTITIONS.PARTITION_POSITION], 
            T.STATUS AS [DBA_IND_PARTITIONS.STATUS], 
            T.TABLESPACE_NAME AS [DBA_IND_PARTITIONS.TABLESPACE_NAME], 
            T.PCT_FREE AS [DBA_IND_PARTITIONS.PCT_FREE], 
            T.INI_TRANS AS [DBA_IND_PARTITIONS.INI_TRANS], 
            T.MAX_TRANS AS [DBA_IND_PARTITIONS.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_IND_PARTITIONS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_IND_PARTITIONS.NEXT_EXTENT], 
            T.MIN_EXTENT AS [DBA_IND_PARTITIONS.MIN_EXTENT], 
            T.MAX_EXTENT AS [DBA_IND_PARTITIONS.MAX_EXTENT], 
            T.PCT_INCREASE AS [DBA_IND_PARTITIONS.PCT_INCREASE], 
            T.FREELISTS AS [DBA_IND_PARTITIONS.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_IND_PARTITIONS.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_IND_PARTITIONS.LOGGING], 
            T.COMPRESSION AS [DBA_IND_PARTITIONS.COMPRESSION], 
            T.BLEVEL AS [DBA_IND_PARTITIONS.BLEVEL], 
            T.LEAF_BLOCKS AS [DBA_IND_PARTITIONS.LEAF_BLOCKS], 
            T.DISTINCT_KEYS AS [DBA_IND_PARTITIONS.DISTINCT_KEYS], 
            T.AVG_LEAF_BLOCKS_PER_KEY AS [DBA_IND_PARTITIONS.AVG_LEAF_BLOCKS_PER_KEY], 
            T.AVG_DATA_BLOCKS_PER_KEY AS [DBA_IND_PARTITIONS.AVG_DATA_BLOCKS_PER_KEY], 
            T.CLUSTERING_FACTOR AS [DBA_IND_PARTITIONS.CLUSTERING_FACTOR], 
            T.NUM_ROWS AS [DBA_IND_PARTITIONS.NUM_ROWS], 
            T.SAMPLE_SIZE AS [DBA_IND_PARTITIONS.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_IND_PARTITIONS.LAST_ANALYZED], 
            T.BUFFER_POOL AS [DBA_IND_PARTITIONS.BUFFER_POOL], 
            T.USER_STATS AS [DBA_IND_PARTITIONS.USER_STATS], 
            T.PCT_DIRECT_ACCESS AS [DBA_IND_PARTITIONS.PCT_DIRECT_ACCESS], 
            T.GLOBAL_STATS AS [DBA_IND_PARTITIONS.GLOBAL_STATS], 
            T.DOMIDX_OPSTATUS AS [DBA_IND_PARTITIONS.DOMIDX_OPSTATUS], 
            T.PARAMETERS AS [DBA_IND_PARTITIONS.PARAMETERS], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_IND_PARTITIONS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_IND_PARTITIONS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_IND_PARTITIONS
        [EFModel.DataDictionary.DBA_IND_PARTITIONS](T1.[DBA_IND_PARTITIONS.INDEX_OWNER], T1.[DBA_IND_PARTITIONS.INDEX_NAME], T1.[DBA_IND_PARTITIONS.COMPOSITE], T1.[DBA_IND_PARTITIONS.PARTITION_NAME], T1.[DBA_IND_PARTITIONS.SUBPARTITION_COUNT], T1.[DBA_IND_PARTITIONS.HIGH_VALUE], T1.[DBA_IND_PARTITIONS.HIGH_VALUE_LENGTH], T1.[DBA_IND_PARTITIONS.PARTITION_POSITION], T1.[DBA_IND_PARTITIONS.STATUS], T1.[DBA_IND_PARTITIONS.TABLESPACE_NAME], T1.[DBA_IND_PARTITIONS.PCT_FREE], T1.[DBA_IND_PARTITIONS.INI_TRANS], T1.[DBA_IND_PARTITIONS.MAX_TRANS], T1.[DBA_IND_PARTITIONS.INITIAL_EXTENT], T1.[DBA_IND_PARTITIONS.NEXT_EXTENT], T1.[DBA_IND_PARTITIONS.MIN_EXTENT], T1.[DBA_IND_PARTITIONS.MAX_EXTENT], T1.[DBA_IND_PARTITIONS.PCT_INCREASE], T1.[DBA_IND_PARTITIONS.FREELISTS], T1.[DBA_IND_PARTITIONS.FREELIST_GROUPS], T1.[DBA_IND_PARTITIONS.LOGGING], T1.[DBA_IND_PARTITIONS.COMPRESSION], T1.[DBA_IND_PARTITIONS.BLEVEL], T1.[DBA_IND_PARTITIONS.LEAF_BLOCKS], T1.[DBA_IND_PARTITIONS.DISTINCT_KEYS], T1.[DBA_IND_PARTITIONS.AVG_LEAF_BLOCKS_PER_KEY], T1.[DBA_IND_PARTITIONS.AVG_DATA_BLOCKS_PER_KEY], T1.[DBA_IND_PARTITIONS.CLUSTERING_FACTOR], T1.[DBA_IND_PARTITIONS.NUM_ROWS], T1.[DBA_IND_PARTITIONS.SAMPLE_SIZE], T1.[DBA_IND_PARTITIONS.LAST_ANALYZED], T1.[DBA_IND_PARTITIONS.BUFFER_POOL], T1.[DBA_IND_PARTITIONS.USER_STATS], T1.[DBA_IND_PARTITIONS.PCT_DIRECT_ACCESS], T1.[DBA_IND_PARTITIONS.GLOBAL_STATS], T1.[DBA_IND_PARTITIONS.DOMIDX_OPSTATUS], T1.[DBA_IND_PARTITIONS.PARAMETERS])
    FROM (
        SELECT 
            T.INDEX_OWNER AS [DBA_IND_PARTITIONS.INDEX_OWNER], 
            T.INDEX_NAME AS [DBA_IND_PARTITIONS.INDEX_NAME], 
            T.COMPOSITE AS [DBA_IND_PARTITIONS.COMPOSITE], 
            T.PARTITION_NAME AS [DBA_IND_PARTITIONS.PARTITION_NAME], 
            T.SUBPARTITION_COUNT AS [DBA_IND_PARTITIONS.SUBPARTITION_COUNT], 
            T.HIGH_VALUE AS [DBA_IND_PARTITIONS.HIGH_VALUE], 
            T.HIGH_VALUE_LENGTH AS [DBA_IND_PARTITIONS.HIGH_VALUE_LENGTH], 
            T.PARTITION_POSITION AS [DBA_IND_PARTITIONS.PARTITION_POSITION], 
            T.STATUS AS [DBA_IND_PARTITIONS.STATUS], 
            T.TABLESPACE_NAME AS [DBA_IND_PARTITIONS.TABLESPACE_NAME], 
            T.PCT_FREE AS [DBA_IND_PARTITIONS.PCT_FREE], 
            T.INI_TRANS AS [DBA_IND_PARTITIONS.INI_TRANS], 
            T.MAX_TRANS AS [DBA_IND_PARTITIONS.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_IND_PARTITIONS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_IND_PARTITIONS.NEXT_EXTENT], 
            T.MIN_EXTENT AS [DBA_IND_PARTITIONS.MIN_EXTENT], 
            T.MAX_EXTENT AS [DBA_IND_PARTITIONS.MAX_EXTENT], 
            T.PCT_INCREASE AS [DBA_IND_PARTITIONS.PCT_INCREASE], 
            T.FREELISTS AS [DBA_IND_PARTITIONS.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_IND_PARTITIONS.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_IND_PARTITIONS.LOGGING], 
            T.COMPRESSION AS [DBA_IND_PARTITIONS.COMPRESSION], 
            T.BLEVEL AS [DBA_IND_PARTITIONS.BLEVEL], 
            T.LEAF_BLOCKS AS [DBA_IND_PARTITIONS.LEAF_BLOCKS], 
            T.DISTINCT_KEYS AS [DBA_IND_PARTITIONS.DISTINCT_KEYS], 
            T.AVG_LEAF_BLOCKS_PER_KEY AS [DBA_IND_PARTITIONS.AVG_LEAF_BLOCKS_PER_KEY], 
            T.AVG_DATA_BLOCKS_PER_KEY AS [DBA_IND_PARTITIONS.AVG_DATA_BLOCKS_PER_KEY], 
            T.CLUSTERING_FACTOR AS [DBA_IND_PARTITIONS.CLUSTERING_FACTOR], 
            T.NUM_ROWS AS [DBA_IND_PARTITIONS.NUM_ROWS], 
            T.SAMPLE_SIZE AS [DBA_IND_PARTITIONS.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_IND_PARTITIONS.LAST_ANALYZED], 
            T.BUFFER_POOL AS [DBA_IND_PARTITIONS.BUFFER_POOL], 
            T.USER_STATS AS [DBA_IND_PARTITIONS.USER_STATS], 
            T.PCT_DIRECT_ACCESS AS [DBA_IND_PARTITIONS.PCT_DIRECT_ACCESS], 
            T.GLOBAL_STATS AS [DBA_IND_PARTITIONS.GLOBAL_STATS], 
            T.DOMIDX_OPSTATUS AS [DBA_IND_PARTITIONS.DOMIDX_OPSTATUS], 
            T.PARAMETERS AS [DBA_IND_PARTITIONS.PARAMETERS], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_IND_PARTITIONS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_TAB_SUBPARTITIONS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TAB_SUBPARTITIONS
        [EFModel.DataDictionary.Store.DBA_TAB_SUBPARTITIONS](T1.[DBA_TAB_SUBPARTITIONS.TABLE_OWNER], T1.[DBA_TAB_SUBPARTITIONS.TABLE_NAME], T1.[DBA_TAB_SUBPARTITIONS.PARTITION_NAME], T1.[DBA_TAB_SUBPARTITIONS.SUBPARTITION_NAME], T1.[DBA_TAB_SUBPARTITIONS.HIGH_VALUE], T1.[DBA_TAB_SUBPARTITIONS.HIGH_VALUE_LENGTH], T1.[DBA_TAB_SUBPARTITIONS.SUBPARTITION_POSITION], T1.[DBA_TAB_SUBPARTITIONS.TABLESPACE_NAME], T1.[DBA_TAB_SUBPARTITIONS.PCT_FREE], T1.[DBA_TAB_SUBPARTITIONS.PCT_USED], T1.[DBA_TAB_SUBPARTITIONS.INI_TRANS], T1.[DBA_TAB_SUBPARTITIONS.MAX_TRANS], T1.[DBA_TAB_SUBPARTITIONS.INITIAL_EXTENT], T1.[DBA_TAB_SUBPARTITIONS.NEXT_EXTENT], T1.[DBA_TAB_SUBPARTITIONS.MIN_EXTENT], T1.[DBA_TAB_SUBPARTITIONS.MAX_EXTENT], T1.[DBA_TAB_SUBPARTITIONS.PCT_INCREASE], T1.[DBA_TAB_SUBPARTITIONS.FREELISTS], T1.[DBA_TAB_SUBPARTITIONS.FREELIST_GROUPS], T1.[DBA_TAB_SUBPARTITIONS.LOGGING], T1.[DBA_TAB_SUBPARTITIONS.COMPRESSION], T1.[DBA_TAB_SUBPARTITIONS.NUM_ROWS], T1.[DBA_TAB_SUBPARTITIONS.BLOCKS], T1.[DBA_TAB_SUBPARTITIONS.EMPTY_BLOCKS], T1.[DBA_TAB_SUBPARTITIONS.AVG_SPACE], T1.[DBA_TAB_SUBPARTITIONS.CHAIN_CNT], T1.[DBA_TAB_SUBPARTITIONS.AVG_ROW_LEN], T1.[DBA_TAB_SUBPARTITIONS.SAMPLE_SIZE], T1.[DBA_TAB_SUBPARTITIONS.LAST_ANALYZED], T1.[DBA_TAB_SUBPARTITIONS.BUFFER_POOL], T1.[DBA_TAB_SUBPARTITIONS.GLOBAL_STATS], T1.[DBA_TAB_SUBPARTITIONS.USER_STATS])
    FROM (
        SELECT 
            T.TABLE_OWNER AS [DBA_TAB_SUBPARTITIONS.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_TAB_SUBPARTITIONS.TABLE_NAME], 
            T.PARTITION_NAME AS [DBA_TAB_SUBPARTITIONS.PARTITION_NAME], 
            T.SUBPARTITION_NAME AS [DBA_TAB_SUBPARTITIONS.SUBPARTITION_NAME], 
            T.HIGH_VALUE AS [DBA_TAB_SUBPARTITIONS.HIGH_VALUE], 
            T.HIGH_VALUE_LENGTH AS [DBA_TAB_SUBPARTITIONS.HIGH_VALUE_LENGTH], 
            T.SUBPARTITION_POSITION AS [DBA_TAB_SUBPARTITIONS.SUBPARTITION_POSITION], 
            T.TABLESPACE_NAME AS [DBA_TAB_SUBPARTITIONS.TABLESPACE_NAME], 
            T.PCT_FREE AS [DBA_TAB_SUBPARTITIONS.PCT_FREE], 
            T.PCT_USED AS [DBA_TAB_SUBPARTITIONS.PCT_USED], 
            T.INI_TRANS AS [DBA_TAB_SUBPARTITIONS.INI_TRANS], 
            T.MAX_TRANS AS [DBA_TAB_SUBPARTITIONS.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_TAB_SUBPARTITIONS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_TAB_SUBPARTITIONS.NEXT_EXTENT], 
            T.MIN_EXTENT AS [DBA_TAB_SUBPARTITIONS.MIN_EXTENT], 
            T.MAX_EXTENT AS [DBA_TAB_SUBPARTITIONS.MAX_EXTENT], 
            T.PCT_INCREASE AS [DBA_TAB_SUBPARTITIONS.PCT_INCREASE], 
            T.FREELISTS AS [DBA_TAB_SUBPARTITIONS.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_TAB_SUBPARTITIONS.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_TAB_SUBPARTITIONS.LOGGING], 
            T.COMPRESSION AS [DBA_TAB_SUBPARTITIONS.COMPRESSION], 
            T.NUM_ROWS AS [DBA_TAB_SUBPARTITIONS.NUM_ROWS], 
            T.BLOCKS AS [DBA_TAB_SUBPARTITIONS.BLOCKS], 
            T.EMPTY_BLOCKS AS [DBA_TAB_SUBPARTITIONS.EMPTY_BLOCKS], 
            T.AVG_SPACE AS [DBA_TAB_SUBPARTITIONS.AVG_SPACE], 
            T.CHAIN_CNT AS [DBA_TAB_SUBPARTITIONS.CHAIN_CNT], 
            T.AVG_ROW_LEN AS [DBA_TAB_SUBPARTITIONS.AVG_ROW_LEN], 
            T.SAMPLE_SIZE AS [DBA_TAB_SUBPARTITIONS.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_TAB_SUBPARTITIONS.LAST_ANALYZED], 
            T.BUFFER_POOL AS [DBA_TAB_SUBPARTITIONS.BUFFER_POOL], 
            T.GLOBAL_STATS AS [DBA_TAB_SUBPARTITIONS.GLOBAL_STATS], 
            T.USER_STATS AS [DBA_TAB_SUBPARTITIONS.USER_STATS], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_TAB_SUBPARTITIONS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_TAB_SUBPARTITIONS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TAB_SUBPARTITIONS
        [EFModel.DataDictionary.DBA_TAB_SUBPARTITIONS](T1.[DBA_TAB_SUBPARTITIONS.TABLE_OWNER], T1.[DBA_TAB_SUBPARTITIONS.TABLE_NAME], T1.[DBA_TAB_SUBPARTITIONS.PARTITION_NAME], T1.[DBA_TAB_SUBPARTITIONS.SUBPARTITION_NAME], T1.[DBA_TAB_SUBPARTITIONS.HIGH_VALUE], T1.[DBA_TAB_SUBPARTITIONS.HIGH_VALUE_LENGTH], T1.[DBA_TAB_SUBPARTITIONS.SUBPARTITION_POSITION], T1.[DBA_TAB_SUBPARTITIONS.TABLESPACE_NAME], T1.[DBA_TAB_SUBPARTITIONS.PCT_FREE], T1.[DBA_TAB_SUBPARTITIONS.PCT_USED], T1.[DBA_TAB_SUBPARTITIONS.INI_TRANS], T1.[DBA_TAB_SUBPARTITIONS.MAX_TRANS], T1.[DBA_TAB_SUBPARTITIONS.INITIAL_EXTENT], T1.[DBA_TAB_SUBPARTITIONS.NEXT_EXTENT], T1.[DBA_TAB_SUBPARTITIONS.MIN_EXTENT], T1.[DBA_TAB_SUBPARTITIONS.MAX_EXTENT], T1.[DBA_TAB_SUBPARTITIONS.PCT_INCREASE], T1.[DBA_TAB_SUBPARTITIONS.FREELISTS], T1.[DBA_TAB_SUBPARTITIONS.FREELIST_GROUPS], T1.[DBA_TAB_SUBPARTITIONS.LOGGING], T1.[DBA_TAB_SUBPARTITIONS.COMPRESSION], T1.[DBA_TAB_SUBPARTITIONS.NUM_ROWS], T1.[DBA_TAB_SUBPARTITIONS.BLOCKS], T1.[DBA_TAB_SUBPARTITIONS.EMPTY_BLOCKS], T1.[DBA_TAB_SUBPARTITIONS.AVG_SPACE], T1.[DBA_TAB_SUBPARTITIONS.CHAIN_CNT], T1.[DBA_TAB_SUBPARTITIONS.AVG_ROW_LEN], T1.[DBA_TAB_SUBPARTITIONS.SAMPLE_SIZE], T1.[DBA_TAB_SUBPARTITIONS.LAST_ANALYZED], T1.[DBA_TAB_SUBPARTITIONS.BUFFER_POOL], T1.[DBA_TAB_SUBPARTITIONS.GLOBAL_STATS], T1.[DBA_TAB_SUBPARTITIONS.USER_STATS])
    FROM (
        SELECT 
            T.TABLE_OWNER AS [DBA_TAB_SUBPARTITIONS.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_TAB_SUBPARTITIONS.TABLE_NAME], 
            T.PARTITION_NAME AS [DBA_TAB_SUBPARTITIONS.PARTITION_NAME], 
            T.SUBPARTITION_NAME AS [DBA_TAB_SUBPARTITIONS.SUBPARTITION_NAME], 
            T.HIGH_VALUE AS [DBA_TAB_SUBPARTITIONS.HIGH_VALUE], 
            T.HIGH_VALUE_LENGTH AS [DBA_TAB_SUBPARTITIONS.HIGH_VALUE_LENGTH], 
            T.SUBPARTITION_POSITION AS [DBA_TAB_SUBPARTITIONS.SUBPARTITION_POSITION], 
            T.TABLESPACE_NAME AS [DBA_TAB_SUBPARTITIONS.TABLESPACE_NAME], 
            T.PCT_FREE AS [DBA_TAB_SUBPARTITIONS.PCT_FREE], 
            T.PCT_USED AS [DBA_TAB_SUBPARTITIONS.PCT_USED], 
            T.INI_TRANS AS [DBA_TAB_SUBPARTITIONS.INI_TRANS], 
            T.MAX_TRANS AS [DBA_TAB_SUBPARTITIONS.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_TAB_SUBPARTITIONS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_TAB_SUBPARTITIONS.NEXT_EXTENT], 
            T.MIN_EXTENT AS [DBA_TAB_SUBPARTITIONS.MIN_EXTENT], 
            T.MAX_EXTENT AS [DBA_TAB_SUBPARTITIONS.MAX_EXTENT], 
            T.PCT_INCREASE AS [DBA_TAB_SUBPARTITIONS.PCT_INCREASE], 
            T.FREELISTS AS [DBA_TAB_SUBPARTITIONS.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_TAB_SUBPARTITIONS.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_TAB_SUBPARTITIONS.LOGGING], 
            T.COMPRESSION AS [DBA_TAB_SUBPARTITIONS.COMPRESSION], 
            T.NUM_ROWS AS [DBA_TAB_SUBPARTITIONS.NUM_ROWS], 
            T.BLOCKS AS [DBA_TAB_SUBPARTITIONS.BLOCKS], 
            T.EMPTY_BLOCKS AS [DBA_TAB_SUBPARTITIONS.EMPTY_BLOCKS], 
            T.AVG_SPACE AS [DBA_TAB_SUBPARTITIONS.AVG_SPACE], 
            T.CHAIN_CNT AS [DBA_TAB_SUBPARTITIONS.CHAIN_CNT], 
            T.AVG_ROW_LEN AS [DBA_TAB_SUBPARTITIONS.AVG_ROW_LEN], 
            T.SAMPLE_SIZE AS [DBA_TAB_SUBPARTITIONS.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_TAB_SUBPARTITIONS.LAST_ANALYZED], 
            T.BUFFER_POOL AS [DBA_TAB_SUBPARTITIONS.BUFFER_POOL], 
            T.GLOBAL_STATS AS [DBA_TAB_SUBPARTITIONS.GLOBAL_STATS], 
            T.USER_STATS AS [DBA_TAB_SUBPARTITIONS.USER_STATS], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_TAB_SUBPARTITIONS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_IND_SUBPARTITIONS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_IND_SUBPARTITIONS
        [EFModel.DataDictionary.Store.DBA_IND_SUBPARTITIONS](T1.[DBA_IND_SUBPARTITIONS.INDEX_OWNER], T1.[DBA_IND_SUBPARTITIONS.INDEX_NAME], T1.[DBA_IND_SUBPARTITIONS.PARTITION_NAME], T1.[DBA_IND_SUBPARTITIONS.SUBPARTITION_NAME], T1.[DBA_IND_SUBPARTITIONS.HIGH_VALUE], T1.[DBA_IND_SUBPARTITIONS.HIGH_VALUE_LENGTH], T1.[DBA_IND_SUBPARTITIONS.SUBPARTITION_POSITION], T1.[DBA_IND_SUBPARTITIONS.STATUS], T1.[DBA_IND_SUBPARTITIONS.TABLESPACE_NAME], T1.[DBA_IND_SUBPARTITIONS.PCT_FREE], T1.[DBA_IND_SUBPARTITIONS.INI_TRANS], T1.[DBA_IND_SUBPARTITIONS.MAX_TRANS], T1.[DBA_IND_SUBPARTITIONS.INITIAL_EXTENT], T1.[DBA_IND_SUBPARTITIONS.NEXT_EXTENT], T1.[DBA_IND_SUBPARTITIONS.MIN_EXTENT], T1.[DBA_IND_SUBPARTITIONS.MAX_EXTENT], T1.[DBA_IND_SUBPARTITIONS.PCT_INCREASE], T1.[DBA_IND_SUBPARTITIONS.FREELISTS], T1.[DBA_IND_SUBPARTITIONS.FREELIST_GROUPS], T1.[DBA_IND_SUBPARTITIONS.LOGGING], T1.[DBA_IND_SUBPARTITIONS.COMPRESSION], T1.[DBA_IND_SUBPARTITIONS.BLEVEL], T1.[DBA_IND_SUBPARTITIONS.LEAF_BLOCKS], T1.[DBA_IND_SUBPARTITIONS.DISTINCT_KEYS], T1.[DBA_IND_SUBPARTITIONS.AVG_LEAF_BLOCKS_PER_KEY], T1.[DBA_IND_SUBPARTITIONS.AVG_DATA_BLOCKS_PER_KEY], T1.[DBA_IND_SUBPARTITIONS.CLUSTERING_FACTOR], T1.[DBA_IND_SUBPARTITIONS.NUM_ROWS], T1.[DBA_IND_SUBPARTITIONS.SAMPLE_SIZE], T1.[DBA_IND_SUBPARTITIONS.LAST_ANALYZED], T1.[DBA_IND_SUBPARTITIONS.BUFFER_POOL], T1.[DBA_IND_SUBPARTITIONS.USER_STATS], T1.[DBA_IND_SUBPARTITIONS.GLOBAL_STATS])
    FROM (
        SELECT 
            T.INDEX_OWNER AS [DBA_IND_SUBPARTITIONS.INDEX_OWNER], 
            T.INDEX_NAME AS [DBA_IND_SUBPARTITIONS.INDEX_NAME], 
            T.PARTITION_NAME AS [DBA_IND_SUBPARTITIONS.PARTITION_NAME], 
            T.SUBPARTITION_NAME AS [DBA_IND_SUBPARTITIONS.SUBPARTITION_NAME], 
            T.HIGH_VALUE AS [DBA_IND_SUBPARTITIONS.HIGH_VALUE], 
            T.HIGH_VALUE_LENGTH AS [DBA_IND_SUBPARTITIONS.HIGH_VALUE_LENGTH], 
            T.SUBPARTITION_POSITION AS [DBA_IND_SUBPARTITIONS.SUBPARTITION_POSITION], 
            T.STATUS AS [DBA_IND_SUBPARTITIONS.STATUS], 
            T.TABLESPACE_NAME AS [DBA_IND_SUBPARTITIONS.TABLESPACE_NAME], 
            T.PCT_FREE AS [DBA_IND_SUBPARTITIONS.PCT_FREE], 
            T.INI_TRANS AS [DBA_IND_SUBPARTITIONS.INI_TRANS], 
            T.MAX_TRANS AS [DBA_IND_SUBPARTITIONS.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_IND_SUBPARTITIONS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_IND_SUBPARTITIONS.NEXT_EXTENT], 
            T.MIN_EXTENT AS [DBA_IND_SUBPARTITIONS.MIN_EXTENT], 
            T.MAX_EXTENT AS [DBA_IND_SUBPARTITIONS.MAX_EXTENT], 
            T.PCT_INCREASE AS [DBA_IND_SUBPARTITIONS.PCT_INCREASE], 
            T.FREELISTS AS [DBA_IND_SUBPARTITIONS.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_IND_SUBPARTITIONS.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_IND_SUBPARTITIONS.LOGGING], 
            T.COMPRESSION AS [DBA_IND_SUBPARTITIONS.COMPRESSION], 
            T.BLEVEL AS [DBA_IND_SUBPARTITIONS.BLEVEL], 
            T.LEAF_BLOCKS AS [DBA_IND_SUBPARTITIONS.LEAF_BLOCKS], 
            T.DISTINCT_KEYS AS [DBA_IND_SUBPARTITIONS.DISTINCT_KEYS], 
            T.AVG_LEAF_BLOCKS_PER_KEY AS [DBA_IND_SUBPARTITIONS.AVG_LEAF_BLOCKS_PER_KEY], 
            T.AVG_DATA_BLOCKS_PER_KEY AS [DBA_IND_SUBPARTITIONS.AVG_DATA_BLOCKS_PER_KEY], 
            T.CLUSTERING_FACTOR AS [DBA_IND_SUBPARTITIONS.CLUSTERING_FACTOR], 
            T.NUM_ROWS AS [DBA_IND_SUBPARTITIONS.NUM_ROWS], 
            T.SAMPLE_SIZE AS [DBA_IND_SUBPARTITIONS.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_IND_SUBPARTITIONS.LAST_ANALYZED], 
            T.BUFFER_POOL AS [DBA_IND_SUBPARTITIONS.BUFFER_POOL], 
            T.USER_STATS AS [DBA_IND_SUBPARTITIONS.USER_STATS], 
            T.GLOBAL_STATS AS [DBA_IND_SUBPARTITIONS.GLOBAL_STATS], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_IND_SUBPARTITIONS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_IND_SUBPARTITIONS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_IND_SUBPARTITIONS
        [EFModel.DataDictionary.DBA_IND_SUBPARTITIONS](T1.[DBA_IND_SUBPARTITIONS.INDEX_OWNER], T1.[DBA_IND_SUBPARTITIONS.INDEX_NAME], T1.[DBA_IND_SUBPARTITIONS.PARTITION_NAME], T1.[DBA_IND_SUBPARTITIONS.SUBPARTITION_NAME], T1.[DBA_IND_SUBPARTITIONS.HIGH_VALUE], T1.[DBA_IND_SUBPARTITIONS.HIGH_VALUE_LENGTH], T1.[DBA_IND_SUBPARTITIONS.SUBPARTITION_POSITION], T1.[DBA_IND_SUBPARTITIONS.STATUS], T1.[DBA_IND_SUBPARTITIONS.TABLESPACE_NAME], T1.[DBA_IND_SUBPARTITIONS.PCT_FREE], T1.[DBA_IND_SUBPARTITIONS.INI_TRANS], T1.[DBA_IND_SUBPARTITIONS.MAX_TRANS], T1.[DBA_IND_SUBPARTITIONS.INITIAL_EXTENT], T1.[DBA_IND_SUBPARTITIONS.NEXT_EXTENT], T1.[DBA_IND_SUBPARTITIONS.MIN_EXTENT], T1.[DBA_IND_SUBPARTITIONS.MAX_EXTENT], T1.[DBA_IND_SUBPARTITIONS.PCT_INCREASE], T1.[DBA_IND_SUBPARTITIONS.FREELISTS], T1.[DBA_IND_SUBPARTITIONS.FREELIST_GROUPS], T1.[DBA_IND_SUBPARTITIONS.LOGGING], T1.[DBA_IND_SUBPARTITIONS.COMPRESSION], T1.[DBA_IND_SUBPARTITIONS.BLEVEL], T1.[DBA_IND_SUBPARTITIONS.LEAF_BLOCKS], T1.[DBA_IND_SUBPARTITIONS.DISTINCT_KEYS], T1.[DBA_IND_SUBPARTITIONS.AVG_LEAF_BLOCKS_PER_KEY], T1.[DBA_IND_SUBPARTITIONS.AVG_DATA_BLOCKS_PER_KEY], T1.[DBA_IND_SUBPARTITIONS.CLUSTERING_FACTOR], T1.[DBA_IND_SUBPARTITIONS.NUM_ROWS], T1.[DBA_IND_SUBPARTITIONS.SAMPLE_SIZE], T1.[DBA_IND_SUBPARTITIONS.LAST_ANALYZED], T1.[DBA_IND_SUBPARTITIONS.BUFFER_POOL], T1.[DBA_IND_SUBPARTITIONS.USER_STATS], T1.[DBA_IND_SUBPARTITIONS.GLOBAL_STATS])
    FROM (
        SELECT 
            T.INDEX_OWNER AS [DBA_IND_SUBPARTITIONS.INDEX_OWNER], 
            T.INDEX_NAME AS [DBA_IND_SUBPARTITIONS.INDEX_NAME], 
            T.PARTITION_NAME AS [DBA_IND_SUBPARTITIONS.PARTITION_NAME], 
            T.SUBPARTITION_NAME AS [DBA_IND_SUBPARTITIONS.SUBPARTITION_NAME], 
            T.HIGH_VALUE AS [DBA_IND_SUBPARTITIONS.HIGH_VALUE], 
            T.HIGH_VALUE_LENGTH AS [DBA_IND_SUBPARTITIONS.HIGH_VALUE_LENGTH], 
            T.SUBPARTITION_POSITION AS [DBA_IND_SUBPARTITIONS.SUBPARTITION_POSITION], 
            T.STATUS AS [DBA_IND_SUBPARTITIONS.STATUS], 
            T.TABLESPACE_NAME AS [DBA_IND_SUBPARTITIONS.TABLESPACE_NAME], 
            T.PCT_FREE AS [DBA_IND_SUBPARTITIONS.PCT_FREE], 
            T.INI_TRANS AS [DBA_IND_SUBPARTITIONS.INI_TRANS], 
            T.MAX_TRANS AS [DBA_IND_SUBPARTITIONS.MAX_TRANS], 
            T.INITIAL_EXTENT AS [DBA_IND_SUBPARTITIONS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_IND_SUBPARTITIONS.NEXT_EXTENT], 
            T.MIN_EXTENT AS [DBA_IND_SUBPARTITIONS.MIN_EXTENT], 
            T.MAX_EXTENT AS [DBA_IND_SUBPARTITIONS.MAX_EXTENT], 
            T.PCT_INCREASE AS [DBA_IND_SUBPARTITIONS.PCT_INCREASE], 
            T.FREELISTS AS [DBA_IND_SUBPARTITIONS.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_IND_SUBPARTITIONS.FREELIST_GROUPS], 
            T.LOGGING AS [DBA_IND_SUBPARTITIONS.LOGGING], 
            T.COMPRESSION AS [DBA_IND_SUBPARTITIONS.COMPRESSION], 
            T.BLEVEL AS [DBA_IND_SUBPARTITIONS.BLEVEL], 
            T.LEAF_BLOCKS AS [DBA_IND_SUBPARTITIONS.LEAF_BLOCKS], 
            T.DISTINCT_KEYS AS [DBA_IND_SUBPARTITIONS.DISTINCT_KEYS], 
            T.AVG_LEAF_BLOCKS_PER_KEY AS [DBA_IND_SUBPARTITIONS.AVG_LEAF_BLOCKS_PER_KEY], 
            T.AVG_DATA_BLOCKS_PER_KEY AS [DBA_IND_SUBPARTITIONS.AVG_DATA_BLOCKS_PER_KEY], 
            T.CLUSTERING_FACTOR AS [DBA_IND_SUBPARTITIONS.CLUSTERING_FACTOR], 
            T.NUM_ROWS AS [DBA_IND_SUBPARTITIONS.NUM_ROWS], 
            T.SAMPLE_SIZE AS [DBA_IND_SUBPARTITIONS.SAMPLE_SIZE], 
            T.LAST_ANALYZED AS [DBA_IND_SUBPARTITIONS.LAST_ANALYZED], 
            T.BUFFER_POOL AS [DBA_IND_SUBPARTITIONS.BUFFER_POOL], 
            T.USER_STATS AS [DBA_IND_SUBPARTITIONS.USER_STATS], 
            T.GLOBAL_STATS AS [DBA_IND_SUBPARTITIONS.GLOBAL_STATS], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_IND_SUBPARTITIONS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_SUBPART_KEY_COLUMNS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SUBPART_KEY_COLUMNS
        [EFModel.DataDictionary.Store.DBA_SUBPART_KEY_COLUMNS](T1.[DBA_SUBPART_KEY_COLUMNS.OWNER], T1.[DBA_SUBPART_KEY_COLUMNS.NAME], T1.[DBA_SUBPART_KEY_COLUMNS.OBJECT_TYPE], T1.[DBA_SUBPART_KEY_COLUMNS.COLUMN_NAME], T1.[DBA_SUBPART_KEY_COLUMNS.COLUMN_POSITION])
    FROM (
        SELECT 
            T.OWNER AS [DBA_SUBPART_KEY_COLUMNS.OWNER], 
            T.NAME AS [DBA_SUBPART_KEY_COLUMNS.NAME], 
            T.OBJECT_TYPE AS [DBA_SUBPART_KEY_COLUMNS.OBJECT_TYPE], 
            T.COLUMN_NAME AS [DBA_SUBPART_KEY_COLUMNS.COLUMN_NAME], 
            T.COLUMN_POSITION AS [DBA_SUBPART_KEY_COLUMNS.COLUMN_POSITION], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_SUBPART_KEY_COLUMNS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_SUBPART_KEY_COLUMNS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SUBPART_KEY_COLUMNS
        [EFModel.DataDictionary.DBA_SUBPART_KEY_COLUMNS](T1.[DBA_SUBPART_KEY_COLUMNS.OWNER], T1.[DBA_SUBPART_KEY_COLUMNS.NAME], T1.[DBA_SUBPART_KEY_COLUMNS.OBJECT_TYPE], T1.[DBA_SUBPART_KEY_COLUMNS.COLUMN_NAME], T1.[DBA_SUBPART_KEY_COLUMNS.COLUMN_POSITION])
    FROM (
        SELECT 
            T.OWNER AS [DBA_SUBPART_KEY_COLUMNS.OWNER], 
            T.NAME AS [DBA_SUBPART_KEY_COLUMNS.NAME], 
            T.OBJECT_TYPE AS [DBA_SUBPART_KEY_COLUMNS.OBJECT_TYPE], 
            T.COLUMN_NAME AS [DBA_SUBPART_KEY_COLUMNS.COLUMN_NAME], 
            T.COLUMN_POSITION AS [DBA_SUBPART_KEY_COLUMNS.COLUMN_POSITION], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_SUBPART_KEY_COLUMNS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_SUBPARTITION_TEMPLATES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SUBPARTITION_TEMPLATES
        [EFModel.DataDictionary.Store.DBA_SUBPARTITION_TEMPLATES](T1.[DBA_SUBPARTITION_TEMPLATES.USER_NAME], T1.[DBA_SUBPARTITION_TEMPLATES.TABLE_NAME], T1.[DBA_SUBPARTITION_TEMPLATES.SUBPARTITION_NAME], T1.[DBA_SUBPARTITION_TEMPLATES.SUBPARTITION_POSITION], T1.[DBA_SUBPARTITION_TEMPLATES.TABLESPACE_NAME], T1.[DBA_SUBPARTITION_TEMPLATES.HIGH_BOUND])
    FROM (
        SELECT 
            T.USER_NAME AS [DBA_SUBPARTITION_TEMPLATES.USER_NAME], 
            T.TABLE_NAME AS [DBA_SUBPARTITION_TEMPLATES.TABLE_NAME], 
            T.SUBPARTITION_NAME AS [DBA_SUBPARTITION_TEMPLATES.SUBPARTITION_NAME], 
            T.SUBPARTITION_POSITION AS [DBA_SUBPARTITION_TEMPLATES.SUBPARTITION_POSITION], 
            T.TABLESPACE_NAME AS [DBA_SUBPARTITION_TEMPLATES.TABLESPACE_NAME], 
            T.HIGH_BOUND AS [DBA_SUBPARTITION_TEMPLATES.HIGH_BOUND], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_SUBPARTITION_TEMPLATES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_SUBPARTITION_TEMPLATES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SUBPARTITION_TEMPLATES
        [EFModel.DataDictionary.DBA_SUBPARTITION_TEMPLATES](T1.[DBA_SUBPARTITION_TEMPLATES.USER_NAME], T1.[DBA_SUBPARTITION_TEMPLATES.TABLE_NAME], T1.[DBA_SUBPARTITION_TEMPLATES.SUBPARTITION_NAME], T1.[DBA_SUBPARTITION_TEMPLATES.SUBPARTITION_POSITION], T1.[DBA_SUBPARTITION_TEMPLATES.TABLESPACE_NAME], T1.[DBA_SUBPARTITION_TEMPLATES.HIGH_BOUND])
    FROM (
        SELECT 
            T.USER_NAME AS [DBA_SUBPARTITION_TEMPLATES.USER_NAME], 
            T.TABLE_NAME AS [DBA_SUBPARTITION_TEMPLATES.TABLE_NAME], 
            T.SUBPARTITION_NAME AS [DBA_SUBPARTITION_TEMPLATES.SUBPARTITION_NAME], 
            T.SUBPARTITION_POSITION AS [DBA_SUBPARTITION_TEMPLATES.SUBPARTITION_POSITION], 
            T.TABLESPACE_NAME AS [DBA_SUBPARTITION_TEMPLATES.TABLESPACE_NAME], 
            T.HIGH_BOUND AS [DBA_SUBPARTITION_TEMPLATES.HIGH_BOUND], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_SUBPARTITION_TEMPLATES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_TYPES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TYPES
        [EFModel.DataDictionary.Store.DBA_TYPES](T1.[DBA_TYPES.OWNER], T1.[DBA_TYPES.TYPE_NAME], T1.[DBA_TYPES.TYPE_OID], T1.[DBA_TYPES.TYPECODE], T1.[DBA_TYPES.ATTRIBUTES], T1.[DBA_TYPES.METHODS], T1.[DBA_TYPES.PREDEFINED], T1.[DBA_TYPES.INCOMPLETE], T1.[DBA_TYPES.FINAL], T1.[DBA_TYPES.INSTANTIABLE], T1.[DBA_TYPES.SUPERTYPE_OWNER], T1.[DBA_TYPES.SUPERTYPE_NAME], T1.[DBA_TYPES.LOCAL_ATTRIBUTES], T1.[DBA_TYPES.LOCAL_METHODS], T1.[DBA_TYPES.TYPEID])
    FROM (
        SELECT 
            T.OWNER AS [DBA_TYPES.OWNER], 
            T.TYPE_NAME AS [DBA_TYPES.TYPE_NAME], 
            T.TYPE_OID AS [DBA_TYPES.TYPE_OID], 
            T.TYPECODE AS [DBA_TYPES.TYPECODE], 
            T.ATTRIBUTES AS [DBA_TYPES.ATTRIBUTES], 
            T.METHODS AS [DBA_TYPES.METHODS], 
            T.PREDEFINED AS [DBA_TYPES.PREDEFINED], 
            T.INCOMPLETE AS [DBA_TYPES.INCOMPLETE], 
            T.FINAL AS [DBA_TYPES.FINAL], 
            T.INSTANTIABLE AS [DBA_TYPES.INSTANTIABLE], 
            T.SUPERTYPE_OWNER AS [DBA_TYPES.SUPERTYPE_OWNER], 
            T.SUPERTYPE_NAME AS [DBA_TYPES.SUPERTYPE_NAME], 
            T.LOCAL_ATTRIBUTES AS [DBA_TYPES.LOCAL_ATTRIBUTES], 
            T.LOCAL_METHODS AS [DBA_TYPES.LOCAL_METHODS], 
            T.TYPEID AS [DBA_TYPES.TYPEID], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_TYPES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_TYPES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TYPES
        [EFModel.DataDictionary.DBA_TYPES](T1.[DBA_TYPES.OWNER], T1.[DBA_TYPES.TYPE_NAME], T1.[DBA_TYPES.TYPE_OID], T1.[DBA_TYPES.TYPECODE], T1.[DBA_TYPES.ATTRIBUTES], T1.[DBA_TYPES.METHODS], T1.[DBA_TYPES.PREDEFINED], T1.[DBA_TYPES.INCOMPLETE], T1.[DBA_TYPES.FINAL], T1.[DBA_TYPES.INSTANTIABLE], T1.[DBA_TYPES.SUPERTYPE_OWNER], T1.[DBA_TYPES.SUPERTYPE_NAME], T1.[DBA_TYPES.LOCAL_ATTRIBUTES], T1.[DBA_TYPES.LOCAL_METHODS], T1.[DBA_TYPES.TYPEID])
    FROM (
        SELECT 
            T.OWNER AS [DBA_TYPES.OWNER], 
            T.TYPE_NAME AS [DBA_TYPES.TYPE_NAME], 
            T.TYPE_OID AS [DBA_TYPES.TYPE_OID], 
            T.TYPECODE AS [DBA_TYPES.TYPECODE], 
            T.ATTRIBUTES AS [DBA_TYPES.ATTRIBUTES], 
            T.METHODS AS [DBA_TYPES.METHODS], 
            T.PREDEFINED AS [DBA_TYPES.PREDEFINED], 
            T.INCOMPLETE AS [DBA_TYPES.INCOMPLETE], 
            T.FINAL AS [DBA_TYPES.FINAL], 
            T.INSTANTIABLE AS [DBA_TYPES.INSTANTIABLE], 
            T.SUPERTYPE_OWNER AS [DBA_TYPES.SUPERTYPE_OWNER], 
            T.SUPERTYPE_NAME AS [DBA_TYPES.SUPERTYPE_NAME], 
            T.LOCAL_ATTRIBUTES AS [DBA_TYPES.LOCAL_ATTRIBUTES], 
            T.LOCAL_METHODS AS [DBA_TYPES.LOCAL_METHODS], 
            T.TYPEID AS [DBA_TYPES.TYPEID], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_TYPES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_MVIEW_KEYS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_MVIEW_KEYS
        [EFModel.DataDictionary.Store.DBA_MVIEW_KEYS](T1.[DBA_MVIEW_KEYS.OWNER], T1.[DBA_MVIEW_KEYS.MVIEW_NAME], T1.[DBA_MVIEW_KEYS.POSITION_IN_SELECT], T1.[DBA_MVIEW_KEYS.CONTAINER_COLUMN], T1.[DBA_MVIEW_KEYS.DETAILOBJ_OWNER], T1.[DBA_MVIEW_KEYS.DETAILOBJ_NAME], T1.[DBA_MVIEW_KEYS.DETAILOBJ_ALIAS], T1.[DBA_MVIEW_KEYS.DETAILOBJ_TYPE], T1.[DBA_MVIEW_KEYS.DETAILOBJ_COLUMN])
    FROM (
        SELECT 
            T.OWNER AS [DBA_MVIEW_KEYS.OWNER], 
            T.MVIEW_NAME AS [DBA_MVIEW_KEYS.MVIEW_NAME], 
            T.POSITION_IN_SELECT AS [DBA_MVIEW_KEYS.POSITION_IN_SELECT], 
            T.CONTAINER_COLUMN AS [DBA_MVIEW_KEYS.CONTAINER_COLUMN], 
            T.DETAILOBJ_OWNER AS [DBA_MVIEW_KEYS.DETAILOBJ_OWNER], 
            T.DETAILOBJ_NAME AS [DBA_MVIEW_KEYS.DETAILOBJ_NAME], 
            T.DETAILOBJ_ALIAS AS [DBA_MVIEW_KEYS.DETAILOBJ_ALIAS], 
            T.DETAILOBJ_TYPE AS [DBA_MVIEW_KEYS.DETAILOBJ_TYPE], 
            T.DETAILOBJ_COLUMN AS [DBA_MVIEW_KEYS.DETAILOBJ_COLUMN], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_MVIEW_KEYS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_MVIEW_KEYS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_MVIEW_KEYS
        [EFModel.DataDictionary.DBA_MVIEW_KEYS](T1.[DBA_MVIEW_KEYS.OWNER], T1.[DBA_MVIEW_KEYS.MVIEW_NAME], T1.[DBA_MVIEW_KEYS.POSITION_IN_SELECT], T1.[DBA_MVIEW_KEYS.CONTAINER_COLUMN], T1.[DBA_MVIEW_KEYS.DETAILOBJ_OWNER], T1.[DBA_MVIEW_KEYS.DETAILOBJ_NAME], T1.[DBA_MVIEW_KEYS.DETAILOBJ_ALIAS], T1.[DBA_MVIEW_KEYS.DETAILOBJ_TYPE], T1.[DBA_MVIEW_KEYS.DETAILOBJ_COLUMN])
    FROM (
        SELECT 
            T.OWNER AS [DBA_MVIEW_KEYS.OWNER], 
            T.MVIEW_NAME AS [DBA_MVIEW_KEYS.MVIEW_NAME], 
            T.POSITION_IN_SELECT AS [DBA_MVIEW_KEYS.POSITION_IN_SELECT], 
            T.CONTAINER_COLUMN AS [DBA_MVIEW_KEYS.CONTAINER_COLUMN], 
            T.DETAILOBJ_OWNER AS [DBA_MVIEW_KEYS.DETAILOBJ_OWNER], 
            T.DETAILOBJ_NAME AS [DBA_MVIEW_KEYS.DETAILOBJ_NAME], 
            T.DETAILOBJ_ALIAS AS [DBA_MVIEW_KEYS.DETAILOBJ_ALIAS], 
            T.DETAILOBJ_TYPE AS [DBA_MVIEW_KEYS.DETAILOBJ_TYPE], 
            T.DETAILOBJ_COLUMN AS [DBA_MVIEW_KEYS.DETAILOBJ_COLUMN], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_MVIEW_KEYS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_MVIEW_JOINS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_MVIEW_JOINS
        [EFModel.DataDictionary.Store.DBA_MVIEW_JOINS](T1.[DBA_MVIEW_JOINS.OWNER], T1.[DBA_MVIEW_JOINS.MVIEW_NAME], T1.[DBA_MVIEW_JOINS.DETAILOBJ1_OWNER], T1.[DBA_MVIEW_JOINS.DETAILOBJ1_RELATION], T1.[DBA_MVIEW_JOINS.DETAILOBJ1_COLUMN], T1.[DBA_MVIEW_JOINS.OPERATOR], T1.[DBA_MVIEW_JOINS.OPERATOR_TYPE], T1.[DBA_MVIEW_JOINS.DETAILOBJ2_OWNER], T1.[DBA_MVIEW_JOINS.DETAILOBJ2_RELATION], T1.[DBA_MVIEW_JOINS.DETAILOBJ2_COLUMN])
    FROM (
        SELECT 
            T.OWNER AS [DBA_MVIEW_JOINS.OWNER], 
            T.MVIEW_NAME AS [DBA_MVIEW_JOINS.MVIEW_NAME], 
            T.DETAILOBJ1_OWNER AS [DBA_MVIEW_JOINS.DETAILOBJ1_OWNER], 
            T.DETAILOBJ1_RELATION AS [DBA_MVIEW_JOINS.DETAILOBJ1_RELATION], 
            T.DETAILOBJ1_COLUMN AS [DBA_MVIEW_JOINS.DETAILOBJ1_COLUMN], 
            T.OPERATOR AS [DBA_MVIEW_JOINS.OPERATOR], 
            T.OPERATOR_TYPE AS [DBA_MVIEW_JOINS.OPERATOR_TYPE], 
            T.DETAILOBJ2_OWNER AS [DBA_MVIEW_JOINS.DETAILOBJ2_OWNER], 
            T.DETAILOBJ2_RELATION AS [DBA_MVIEW_JOINS.DETAILOBJ2_RELATION], 
            T.DETAILOBJ2_COLUMN AS [DBA_MVIEW_JOINS.DETAILOBJ2_COLUMN], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_MVIEW_JOINS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_MVIEW_JOINS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_MVIEW_JOINS
        [EFModel.DataDictionary.DBA_MVIEW_JOINS](T1.[DBA_MVIEW_JOINS.OWNER], T1.[DBA_MVIEW_JOINS.MVIEW_NAME], T1.[DBA_MVIEW_JOINS.DETAILOBJ1_OWNER], T1.[DBA_MVIEW_JOINS.DETAILOBJ1_RELATION], T1.[DBA_MVIEW_JOINS.DETAILOBJ1_COLUMN], T1.[DBA_MVIEW_JOINS.OPERATOR], T1.[DBA_MVIEW_JOINS.OPERATOR_TYPE], T1.[DBA_MVIEW_JOINS.DETAILOBJ2_OWNER], T1.[DBA_MVIEW_JOINS.DETAILOBJ2_RELATION], T1.[DBA_MVIEW_JOINS.DETAILOBJ2_COLUMN])
    FROM (
        SELECT 
            T.OWNER AS [DBA_MVIEW_JOINS.OWNER], 
            T.MVIEW_NAME AS [DBA_MVIEW_JOINS.MVIEW_NAME], 
            T.DETAILOBJ1_OWNER AS [DBA_MVIEW_JOINS.DETAILOBJ1_OWNER], 
            T.DETAILOBJ1_RELATION AS [DBA_MVIEW_JOINS.DETAILOBJ1_RELATION], 
            T.DETAILOBJ1_COLUMN AS [DBA_MVIEW_JOINS.DETAILOBJ1_COLUMN], 
            T.OPERATOR AS [DBA_MVIEW_JOINS.OPERATOR], 
            T.OPERATOR_TYPE AS [DBA_MVIEW_JOINS.OPERATOR_TYPE], 
            T.DETAILOBJ2_OWNER AS [DBA_MVIEW_JOINS.DETAILOBJ2_OWNER], 
            T.DETAILOBJ2_RELATION AS [DBA_MVIEW_JOINS.DETAILOBJ2_RELATION], 
            T.DETAILOBJ2_COLUMN AS [DBA_MVIEW_JOINS.DETAILOBJ2_COLUMN], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_MVIEW_JOINS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_MVIEW_COMMENTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_MVIEW_COMMENTS
        [EFModel.DataDictionary.Store.DBA_MVIEW_COMMENTS](T1.[DBA_MVIEW_COMMENTS.OWNER], T1.[DBA_MVIEW_COMMENTS.MVIEW_NAME], T1.[DBA_MVIEW_COMMENTS.COMMENTS])
    FROM (
        SELECT 
            T.OWNER AS [DBA_MVIEW_COMMENTS.OWNER], 
            T.MVIEW_NAME AS [DBA_MVIEW_COMMENTS.MVIEW_NAME], 
            T.COMMENTS AS [DBA_MVIEW_COMMENTS.COMMENTS], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_MVIEW_COMMENTS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_MVIEW_COMMENTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_MVIEW_COMMENTS
        [EFModel.DataDictionary.DBA_MVIEW_COMMENTS](T1.[DBA_MVIEW_COMMENTS.OWNER], T1.[DBA_MVIEW_COMMENTS.MVIEW_NAME], T1.[DBA_MVIEW_COMMENTS.COMMENTS])
    FROM (
        SELECT 
            T.OWNER AS [DBA_MVIEW_COMMENTS.OWNER], 
            T.MVIEW_NAME AS [DBA_MVIEW_COMMENTS.MVIEW_NAME], 
            T.COMMENTS AS [DBA_MVIEW_COMMENTS.COMMENTS], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_MVIEW_COMMENTS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_SOURCEs", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SOURCEs
        [EFModel.DataDictionary.Store.DBA_SOURCE](T1.[DBA_SOURCE.OWNER], T1.[DBA_SOURCE.NAME], T1.[DBA_SOURCE.TYPE], T1.[DBA_SOURCE.LINE], T1.[DBA_SOURCE.TEXT])
    FROM (
        SELECT 
            T.OWNER AS [DBA_SOURCE.OWNER], 
            T.NAME AS [DBA_SOURCE.NAME], 
            T.TYPE AS [DBA_SOURCE.TYPE], 
            T.LINE AS [DBA_SOURCE.LINE], 
            T.TEXT AS [DBA_SOURCE.TEXT], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_SOURCE AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_SOURCE", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SOURCE
        [EFModel.DataDictionary.DBA_SOURCE](T1.[DBA_SOURCE.OWNER], T1.[DBA_SOURCE.NAME], T1.[DBA_SOURCE.TYPE], T1.[DBA_SOURCE.LINE], T1.[DBA_SOURCE.TEXT])
    FROM (
        SELECT 
            T.OWNER AS [DBA_SOURCE.OWNER], 
            T.NAME AS [DBA_SOURCE.NAME], 
            T.TYPE AS [DBA_SOURCE.TYPE], 
            T.LINE AS [DBA_SOURCE.LINE], 
            T.TEXT AS [DBA_SOURCE.TEXT], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_SOURCEs AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_TRIGGERS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TRIGGERS
        [EFModel.DataDictionary.Store.DBA_TRIGGERS](T1.[DBA_TRIGGERS.OWNER], T1.[DBA_TRIGGERS.TRIGGER_NAME], T1.[DBA_TRIGGERS.TRIGGER_TYPE], T1.[DBA_TRIGGERS.TRIGGERING_EVENT], T1.[DBA_TRIGGERS.TABLE_OWNER], T1.[DBA_TRIGGERS.BASE_OBJECT_TYPE], T1.[DBA_TRIGGERS.TABLE_NAME], T1.[DBA_TRIGGERS.COLUMN_NAME], T1.[DBA_TRIGGERS.REFERENCING_NAMES], T1.[DBA_TRIGGERS.WHEN_CLAUSE], T1.[DBA_TRIGGERS.STATUS], T1.[DBA_TRIGGERS.DESCRIPTION], T1.[DBA_TRIGGERS.ACTION_TYPE], T1.[DBA_TRIGGERS.TRIGGER_BODY])
    FROM (
        SELECT 
            T.OWNER AS [DBA_TRIGGERS.OWNER], 
            T.TRIGGER_NAME AS [DBA_TRIGGERS.TRIGGER_NAME], 
            T.TRIGGER_TYPE AS [DBA_TRIGGERS.TRIGGER_TYPE], 
            T.TRIGGERING_EVENT AS [DBA_TRIGGERS.TRIGGERING_EVENT], 
            T.TABLE_OWNER AS [DBA_TRIGGERS.TABLE_OWNER], 
            T.BASE_OBJECT_TYPE AS [DBA_TRIGGERS.BASE_OBJECT_TYPE], 
            T.TABLE_NAME AS [DBA_TRIGGERS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_TRIGGERS.COLUMN_NAME], 
            T.REFERENCING_NAMES AS [DBA_TRIGGERS.REFERENCING_NAMES], 
            T.WHEN_CLAUSE AS [DBA_TRIGGERS.WHEN_CLAUSE], 
            T.STATUS AS [DBA_TRIGGERS.STATUS], 
            T.DESCRIPTION AS [DBA_TRIGGERS.DESCRIPTION], 
            T.ACTION_TYPE AS [DBA_TRIGGERS.ACTION_TYPE], 
            T.TRIGGER_BODY AS [DBA_TRIGGERS.TRIGGER_BODY], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_TRIGGERS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_TRIGGERS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TRIGGERS
        [EFModel.DataDictionary.DBA_TRIGGERS](T1.[DBA_TRIGGERS.OWNER], T1.[DBA_TRIGGERS.TRIGGER_NAME], T1.[DBA_TRIGGERS.TRIGGER_TYPE], T1.[DBA_TRIGGERS.TRIGGERING_EVENT], T1.[DBA_TRIGGERS.TABLE_OWNER], T1.[DBA_TRIGGERS.BASE_OBJECT_TYPE], T1.[DBA_TRIGGERS.TABLE_NAME], T1.[DBA_TRIGGERS.COLUMN_NAME], T1.[DBA_TRIGGERS.REFERENCING_NAMES], T1.[DBA_TRIGGERS.WHEN_CLAUSE], T1.[DBA_TRIGGERS.STATUS], T1.[DBA_TRIGGERS.DESCRIPTION], T1.[DBA_TRIGGERS.ACTION_TYPE], T1.[DBA_TRIGGERS.TRIGGER_BODY])
    FROM (
        SELECT 
            T.OWNER AS [DBA_TRIGGERS.OWNER], 
            T.TRIGGER_NAME AS [DBA_TRIGGERS.TRIGGER_NAME], 
            T.TRIGGER_TYPE AS [DBA_TRIGGERS.TRIGGER_TYPE], 
            T.TRIGGERING_EVENT AS [DBA_TRIGGERS.TRIGGERING_EVENT], 
            T.TABLE_OWNER AS [DBA_TRIGGERS.TABLE_OWNER], 
            T.BASE_OBJECT_TYPE AS [DBA_TRIGGERS.BASE_OBJECT_TYPE], 
            T.TABLE_NAME AS [DBA_TRIGGERS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_TRIGGERS.COLUMN_NAME], 
            T.REFERENCING_NAMES AS [DBA_TRIGGERS.REFERENCING_NAMES], 
            T.WHEN_CLAUSE AS [DBA_TRIGGERS.WHEN_CLAUSE], 
            T.STATUS AS [DBA_TRIGGERS.STATUS], 
            T.DESCRIPTION AS [DBA_TRIGGERS.DESCRIPTION], 
            T.ACTION_TYPE AS [DBA_TRIGGERS.ACTION_TYPE], 
            T.TRIGGER_BODY AS [DBA_TRIGGERS.TRIGGER_BODY], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_TRIGGERS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_TRIGGER_COLS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TRIGGER_COLS
        [EFModel.DataDictionary.Store.DBA_TRIGGER_COLS](T1.[DBA_TRIGGER_COLS.TRIGGER_OWNER], T1.[DBA_TRIGGER_COLS.TRIGGER_NAME], T1.[DBA_TRIGGER_COLS.TABLE_OWNER], T1.[DBA_TRIGGER_COLS.TABLE_NAME], T1.[DBA_TRIGGER_COLS.COLUMN_NAME], T1.[DBA_TRIGGER_COLS.COLUMN_LIST], T1.[DBA_TRIGGER_COLS.COLUMN_USAGE])
    FROM (
        SELECT 
            T.TRIGGER_OWNER AS [DBA_TRIGGER_COLS.TRIGGER_OWNER], 
            T.TRIGGER_NAME AS [DBA_TRIGGER_COLS.TRIGGER_NAME], 
            T.TABLE_OWNER AS [DBA_TRIGGER_COLS.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_TRIGGER_COLS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_TRIGGER_COLS.COLUMN_NAME], 
            T.COLUMN_LIST AS [DBA_TRIGGER_COLS.COLUMN_LIST], 
            T.COLUMN_USAGE AS [DBA_TRIGGER_COLS.COLUMN_USAGE], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_TRIGGER_COLS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_TRIGGER_COLS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TRIGGER_COLS
        [EFModel.DataDictionary.DBA_TRIGGER_COLS](T1.[DBA_TRIGGER_COLS.TRIGGER_OWNER], T1.[DBA_TRIGGER_COLS.TRIGGER_NAME], T1.[DBA_TRIGGER_COLS.TABLE_OWNER], T1.[DBA_TRIGGER_COLS.TABLE_NAME], T1.[DBA_TRIGGER_COLS.COLUMN_NAME], T1.[DBA_TRIGGER_COLS.COLUMN_LIST], T1.[DBA_TRIGGER_COLS.COLUMN_USAGE])
    FROM (
        SELECT 
            T.TRIGGER_OWNER AS [DBA_TRIGGER_COLS.TRIGGER_OWNER], 
            T.TRIGGER_NAME AS [DBA_TRIGGER_COLS.TRIGGER_NAME], 
            T.TABLE_OWNER AS [DBA_TRIGGER_COLS.TABLE_OWNER], 
            T.TABLE_NAME AS [DBA_TRIGGER_COLS.TABLE_NAME], 
            T.COLUMN_NAME AS [DBA_TRIGGER_COLS.COLUMN_NAME], 
            T.COLUMN_LIST AS [DBA_TRIGGER_COLS.COLUMN_LIST], 
            T.COLUMN_USAGE AS [DBA_TRIGGER_COLS.COLUMN_USAGE], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_TRIGGER_COLS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_DEPENDENCIES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_DEPENDENCIES
        [EFModel.DataDictionary.Store.DBA_DEPENDENCIES](T1.[DBA_DEPENDENCIES.OWNER], T1.[DBA_DEPENDENCIES.NAME], T1.[DBA_DEPENDENCIES.TYPE], T1.[DBA_DEPENDENCIES.REFERENCED_OWNER], T1.[DBA_DEPENDENCIES.REFERENCED_NAME], T1.[DBA_DEPENDENCIES.REFERENCED_TYPE], T1.[DBA_DEPENDENCIES.REFERENCED_LINK_NAME], T1.[DBA_DEPENDENCIES.DEPENDENCY_TYPE])
    FROM (
        SELECT 
            T.OWNER AS [DBA_DEPENDENCIES.OWNER], 
            T.NAME AS [DBA_DEPENDENCIES.NAME], 
            T.TYPE AS [DBA_DEPENDENCIES.TYPE], 
            T.REFERENCED_OWNER AS [DBA_DEPENDENCIES.REFERENCED_OWNER], 
            T.REFERENCED_NAME AS [DBA_DEPENDENCIES.REFERENCED_NAME], 
            T.REFERENCED_TYPE AS [DBA_DEPENDENCIES.REFERENCED_TYPE], 
            T.REFERENCED_LINK_NAME AS [DBA_DEPENDENCIES.REFERENCED_LINK_NAME], 
            T.DEPENDENCY_TYPE AS [DBA_DEPENDENCIES.DEPENDENCY_TYPE], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_DEPENDENCIES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_DEPENDENCIES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_DEPENDENCIES
        [EFModel.DataDictionary.DBA_DEPENDENCIES](T1.[DBA_DEPENDENCIES.OWNER], T1.[DBA_DEPENDENCIES.NAME], T1.[DBA_DEPENDENCIES.TYPE], T1.[DBA_DEPENDENCIES.REFERENCED_OWNER], T1.[DBA_DEPENDENCIES.REFERENCED_NAME], T1.[DBA_DEPENDENCIES.REFERENCED_TYPE], T1.[DBA_DEPENDENCIES.REFERENCED_LINK_NAME], T1.[DBA_DEPENDENCIES.DEPENDENCY_TYPE])
    FROM (
        SELECT 
            T.OWNER AS [DBA_DEPENDENCIES.OWNER], 
            T.NAME AS [DBA_DEPENDENCIES.NAME], 
            T.TYPE AS [DBA_DEPENDENCIES.TYPE], 
            T.REFERENCED_OWNER AS [DBA_DEPENDENCIES.REFERENCED_OWNER], 
            T.REFERENCED_NAME AS [DBA_DEPENDENCIES.REFERENCED_NAME], 
            T.REFERENCED_TYPE AS [DBA_DEPENDENCIES.REFERENCED_TYPE], 
            T.REFERENCED_LINK_NAME AS [DBA_DEPENDENCIES.REFERENCED_LINK_NAME], 
            T.DEPENDENCY_TYPE AS [DBA_DEPENDENCIES.DEPENDENCY_TYPE], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_DEPENDENCIES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_JOBS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_JOBS
        [EFModel.DataDictionary.Store.DBA_JOBS](T1.[DBA_JOBS.JOB], T1.[DBA_JOBS.LOG_USER], T1.[DBA_JOBS.PRIV_USER], T1.[DBA_JOBS.SCHEMA_USER], T1.[DBA_JOBS.LAST_DATE], T1.[DBA_JOBS.LAST_SEC], T1.[DBA_JOBS.THIS_DATE], T1.[DBA_JOBS.THIS_SEC], T1.[DBA_JOBS.NEXT_DATE], T1.[DBA_JOBS.NEXT_SEC], T1.[DBA_JOBS.TOTAL_TIME], T1.[DBA_JOBS.BROKEN], T1.[DBA_JOBS.INTERVAL], T1.[DBA_JOBS.FAILURES], T1.[DBA_JOBS.WHAT], T1.[DBA_JOBS.NLS_ENV], T1.[DBA_JOBS.MISC_ENV], T1.[DBA_JOBS.INSTANCE])
    FROM (
        SELECT 
            T.JOB AS [DBA_JOBS.JOB], 
            T.LOG_USER AS [DBA_JOBS.LOG_USER], 
            T.PRIV_USER AS [DBA_JOBS.PRIV_USER], 
            T.SCHEMA_USER AS [DBA_JOBS.SCHEMA_USER], 
            T.LAST_DATE AS [DBA_JOBS.LAST_DATE], 
            T.LAST_SEC AS [DBA_JOBS.LAST_SEC], 
            T.THIS_DATE AS [DBA_JOBS.THIS_DATE], 
            T.THIS_SEC AS [DBA_JOBS.THIS_SEC], 
            T.NEXT_DATE AS [DBA_JOBS.NEXT_DATE], 
            T.NEXT_SEC AS [DBA_JOBS.NEXT_SEC], 
            T.TOTAL_TIME AS [DBA_JOBS.TOTAL_TIME], 
            T.BROKEN AS [DBA_JOBS.BROKEN], 
            T.INTERVAL AS [DBA_JOBS.INTERVAL], 
            T.FAILURES AS [DBA_JOBS.FAILURES], 
            T.WHAT AS [DBA_JOBS.WHAT], 
            T.NLS_ENV AS [DBA_JOBS.NLS_ENV], 
            T.MISC_ENV AS [DBA_JOBS.MISC_ENV], 
            T.INSTANCE AS [DBA_JOBS.INSTANCE], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_JOBS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_JOBS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_JOBS
        [EFModel.DataDictionary.DBA_JOBS](T1.[DBA_JOBS.JOB], T1.[DBA_JOBS.LOG_USER], T1.[DBA_JOBS.PRIV_USER], T1.[DBA_JOBS.SCHEMA_USER], T1.[DBA_JOBS.LAST_DATE], T1.[DBA_JOBS.LAST_SEC], T1.[DBA_JOBS.THIS_DATE], T1.[DBA_JOBS.THIS_SEC], T1.[DBA_JOBS.NEXT_DATE], T1.[DBA_JOBS.NEXT_SEC], T1.[DBA_JOBS.TOTAL_TIME], T1.[DBA_JOBS.BROKEN], T1.[DBA_JOBS.INTERVAL], T1.[DBA_JOBS.FAILURES], T1.[DBA_JOBS.WHAT], T1.[DBA_JOBS.NLS_ENV], T1.[DBA_JOBS.MISC_ENV], T1.[DBA_JOBS.INSTANCE])
    FROM (
        SELECT 
            T.JOB AS [DBA_JOBS.JOB], 
            T.LOG_USER AS [DBA_JOBS.LOG_USER], 
            T.PRIV_USER AS [DBA_JOBS.PRIV_USER], 
            T.SCHEMA_USER AS [DBA_JOBS.SCHEMA_USER], 
            T.LAST_DATE AS [DBA_JOBS.LAST_DATE], 
            T.LAST_SEC AS [DBA_JOBS.LAST_SEC], 
            T.THIS_DATE AS [DBA_JOBS.THIS_DATE], 
            T.THIS_SEC AS [DBA_JOBS.THIS_SEC], 
            T.NEXT_DATE AS [DBA_JOBS.NEXT_DATE], 
            T.NEXT_SEC AS [DBA_JOBS.NEXT_SEC], 
            T.TOTAL_TIME AS [DBA_JOBS.TOTAL_TIME], 
            T.BROKEN AS [DBA_JOBS.BROKEN], 
            T.INTERVAL AS [DBA_JOBS.INTERVAL], 
            T.FAILURES AS [DBA_JOBS.FAILURES], 
            T.WHAT AS [DBA_JOBS.WHAT], 
            T.NLS_ENV AS [DBA_JOBS.NLS_ENV], 
            T.MISC_ENV AS [DBA_JOBS.MISC_ENV], 
            T.INSTANCE AS [DBA_JOBS.INSTANCE], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_JOBS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_SEGMENTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SEGMENTS
        [EFModel.DataDictionary.Store.DBA_SEGMENTS](T1.[DBA_SEGMENTS.OWNER], T1.[DBA_SEGMENTS.SEGMENT_NAME], T1.[DBA_SEGMENTS.PARTITION_NAME], T1.[DBA_SEGMENTS.SEGMENT_TYPE], T1.[DBA_SEGMENTS.TABLESPACE_NAME], T1.[DBA_SEGMENTS.HEADER_FILE], T1.[DBA_SEGMENTS.HEADER_BLOCK], T1.[DBA_SEGMENTS.BYTES], T1.[DBA_SEGMENTS.BLOCKS], T1.[DBA_SEGMENTS.EXTENTS], T1.[DBA_SEGMENTS.INITIAL_EXTENT], T1.[DBA_SEGMENTS.NEXT_EXTENT], T1.[DBA_SEGMENTS.MIN_EXTENTS], T1.[DBA_SEGMENTS.MAX_EXTENTS], T1.[DBA_SEGMENTS.PCT_INCREASE], T1.[DBA_SEGMENTS.FREELISTS], T1.[DBA_SEGMENTS.FREELIST_GROUPS], T1.[DBA_SEGMENTS.RELATIVE_FNO], T1.[DBA_SEGMENTS.BUFFER_POOL])
    FROM (
        SELECT 
            T.OWNER AS [DBA_SEGMENTS.OWNER], 
            T.SEGMENT_NAME AS [DBA_SEGMENTS.SEGMENT_NAME], 
            T.PARTITION_NAME AS [DBA_SEGMENTS.PARTITION_NAME], 
            T.SEGMENT_TYPE AS [DBA_SEGMENTS.SEGMENT_TYPE], 
            T.TABLESPACE_NAME AS [DBA_SEGMENTS.TABLESPACE_NAME], 
            T.HEADER_FILE AS [DBA_SEGMENTS.HEADER_FILE], 
            T.HEADER_BLOCK AS [DBA_SEGMENTS.HEADER_BLOCK], 
            T.BYTES AS [DBA_SEGMENTS.BYTES], 
            T.BLOCKS AS [DBA_SEGMENTS.BLOCKS], 
            T.EXTENTS AS [DBA_SEGMENTS.EXTENTS], 
            T.INITIAL_EXTENT AS [DBA_SEGMENTS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_SEGMENTS.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_SEGMENTS.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_SEGMENTS.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_SEGMENTS.PCT_INCREASE], 
            T.FREELISTS AS [DBA_SEGMENTS.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_SEGMENTS.FREELIST_GROUPS], 
            T.RELATIVE_FNO AS [DBA_SEGMENTS.RELATIVE_FNO], 
            T.BUFFER_POOL AS [DBA_SEGMENTS.BUFFER_POOL], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_SEGMENTS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_SEGMENTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SEGMENTS
        [EFModel.DataDictionary.DBA_SEGMENTS](T1.[DBA_SEGMENTS.OWNER], T1.[DBA_SEGMENTS.SEGMENT_NAME], T1.[DBA_SEGMENTS.PARTITION_NAME], T1.[DBA_SEGMENTS.SEGMENT_TYPE], T1.[DBA_SEGMENTS.TABLESPACE_NAME], T1.[DBA_SEGMENTS.HEADER_FILE], T1.[DBA_SEGMENTS.HEADER_BLOCK], T1.[DBA_SEGMENTS.BYTES], T1.[DBA_SEGMENTS.BLOCKS], T1.[DBA_SEGMENTS.EXTENTS], T1.[DBA_SEGMENTS.INITIAL_EXTENT], T1.[DBA_SEGMENTS.NEXT_EXTENT], T1.[DBA_SEGMENTS.MIN_EXTENTS], T1.[DBA_SEGMENTS.MAX_EXTENTS], T1.[DBA_SEGMENTS.PCT_INCREASE], T1.[DBA_SEGMENTS.FREELISTS], T1.[DBA_SEGMENTS.FREELIST_GROUPS], T1.[DBA_SEGMENTS.RELATIVE_FNO], T1.[DBA_SEGMENTS.BUFFER_POOL])
    FROM (
        SELECT 
            T.OWNER AS [DBA_SEGMENTS.OWNER], 
            T.SEGMENT_NAME AS [DBA_SEGMENTS.SEGMENT_NAME], 
            T.PARTITION_NAME AS [DBA_SEGMENTS.PARTITION_NAME], 
            T.SEGMENT_TYPE AS [DBA_SEGMENTS.SEGMENT_TYPE], 
            T.TABLESPACE_NAME AS [DBA_SEGMENTS.TABLESPACE_NAME], 
            T.HEADER_FILE AS [DBA_SEGMENTS.HEADER_FILE], 
            T.HEADER_BLOCK AS [DBA_SEGMENTS.HEADER_BLOCK], 
            T.BYTES AS [DBA_SEGMENTS.BYTES], 
            T.BLOCKS AS [DBA_SEGMENTS.BLOCKS], 
            T.EXTENTS AS [DBA_SEGMENTS.EXTENTS], 
            T.INITIAL_EXTENT AS [DBA_SEGMENTS.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_SEGMENTS.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_SEGMENTS.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_SEGMENTS.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_SEGMENTS.PCT_INCREASE], 
            T.FREELISTS AS [DBA_SEGMENTS.FREELISTS], 
            T.FREELIST_GROUPS AS [DBA_SEGMENTS.FREELIST_GROUPS], 
            T.RELATIVE_FNO AS [DBA_SEGMENTS.RELATIVE_FNO], 
            T.BUFFER_POOL AS [DBA_SEGMENTS.BUFFER_POOL], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_SEGMENTS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_TABLESPACES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TABLESPACES
        [EFModel.DataDictionary.Store.DBA_TABLESPACES](T1.[DBA_TABLESPACES.TABLESPACE_NAME], T1.[DBA_TABLESPACES.BLOCK_SIZE], T1.[DBA_TABLESPACES.INITIAL_EXTENT], T1.[DBA_TABLESPACES.NEXT_EXTENT], T1.[DBA_TABLESPACES.MIN_EXTENTS], T1.[DBA_TABLESPACES.MAX_EXTENTS], T1.[DBA_TABLESPACES.PCT_INCREASE], T1.[DBA_TABLESPACES.MIN_EXTLEN], T1.[DBA_TABLESPACES.STATUS], T1.[DBA_TABLESPACES.CONTENTS], T1.[DBA_TABLESPACES.LOGGING], T1.[DBA_TABLESPACES.FORCE_LOGGING], T1.[DBA_TABLESPACES.EXTENT_MANAGEMENT], T1.[DBA_TABLESPACES.ALLOCATION_TYPE], T1.[DBA_TABLESPACES.PLUGGED_IN], T1.[DBA_TABLESPACES.SEGMENT_SPACE_MANAGEMENT], T1.[DBA_TABLESPACES.DEF_TAB_COMPRESSION], T1.[DBA_TABLESPACES.RETENTION], T1.[DBA_TABLESPACES.BIGFILE])
    FROM (
        SELECT 
            T.TABLESPACE_NAME AS [DBA_TABLESPACES.TABLESPACE_NAME], 
            T.BLOCK_SIZE AS [DBA_TABLESPACES.BLOCK_SIZE], 
            T.INITIAL_EXTENT AS [DBA_TABLESPACES.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_TABLESPACES.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_TABLESPACES.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_TABLESPACES.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_TABLESPACES.PCT_INCREASE], 
            T.MIN_EXTLEN AS [DBA_TABLESPACES.MIN_EXTLEN], 
            T.STATUS AS [DBA_TABLESPACES.STATUS], 
            T.CONTENTS AS [DBA_TABLESPACES.CONTENTS], 
            T.LOGGING AS [DBA_TABLESPACES.LOGGING], 
            T.FORCE_LOGGING AS [DBA_TABLESPACES.FORCE_LOGGING], 
            T.EXTENT_MANAGEMENT AS [DBA_TABLESPACES.EXTENT_MANAGEMENT], 
            T.ALLOCATION_TYPE AS [DBA_TABLESPACES.ALLOCATION_TYPE], 
            T.PLUGGED_IN AS [DBA_TABLESPACES.PLUGGED_IN], 
            T.SEGMENT_SPACE_MANAGEMENT AS [DBA_TABLESPACES.SEGMENT_SPACE_MANAGEMENT], 
            T.DEF_TAB_COMPRESSION AS [DBA_TABLESPACES.DEF_TAB_COMPRESSION], 
            T.RETENTION AS [DBA_TABLESPACES.RETENTION], 
            T.BIGFILE AS [DBA_TABLESPACES.BIGFILE], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_TABLESPACES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_TABLESPACES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TABLESPACES
        [EFModel.DataDictionary.DBA_TABLESPACES](T1.[DBA_TABLESPACES.TABLESPACE_NAME], T1.[DBA_TABLESPACES.BLOCK_SIZE], T1.[DBA_TABLESPACES.INITIAL_EXTENT], T1.[DBA_TABLESPACES.NEXT_EXTENT], T1.[DBA_TABLESPACES.MIN_EXTENTS], T1.[DBA_TABLESPACES.MAX_EXTENTS], T1.[DBA_TABLESPACES.PCT_INCREASE], T1.[DBA_TABLESPACES.MIN_EXTLEN], T1.[DBA_TABLESPACES.STATUS], T1.[DBA_TABLESPACES.CONTENTS], T1.[DBA_TABLESPACES.LOGGING], T1.[DBA_TABLESPACES.FORCE_LOGGING], T1.[DBA_TABLESPACES.EXTENT_MANAGEMENT], T1.[DBA_TABLESPACES.ALLOCATION_TYPE], T1.[DBA_TABLESPACES.PLUGGED_IN], T1.[DBA_TABLESPACES.SEGMENT_SPACE_MANAGEMENT], T1.[DBA_TABLESPACES.DEF_TAB_COMPRESSION], T1.[DBA_TABLESPACES.RETENTION], T1.[DBA_TABLESPACES.BIGFILE])
    FROM (
        SELECT 
            T.TABLESPACE_NAME AS [DBA_TABLESPACES.TABLESPACE_NAME], 
            T.BLOCK_SIZE AS [DBA_TABLESPACES.BLOCK_SIZE], 
            T.INITIAL_EXTENT AS [DBA_TABLESPACES.INITIAL_EXTENT], 
            T.NEXT_EXTENT AS [DBA_TABLESPACES.NEXT_EXTENT], 
            T.MIN_EXTENTS AS [DBA_TABLESPACES.MIN_EXTENTS], 
            T.MAX_EXTENTS AS [DBA_TABLESPACES.MAX_EXTENTS], 
            T.PCT_INCREASE AS [DBA_TABLESPACES.PCT_INCREASE], 
            T.MIN_EXTLEN AS [DBA_TABLESPACES.MIN_EXTLEN], 
            T.STATUS AS [DBA_TABLESPACES.STATUS], 
            T.CONTENTS AS [DBA_TABLESPACES.CONTENTS], 
            T.LOGGING AS [DBA_TABLESPACES.LOGGING], 
            T.FORCE_LOGGING AS [DBA_TABLESPACES.FORCE_LOGGING], 
            T.EXTENT_MANAGEMENT AS [DBA_TABLESPACES.EXTENT_MANAGEMENT], 
            T.ALLOCATION_TYPE AS [DBA_TABLESPACES.ALLOCATION_TYPE], 
            T.PLUGGED_IN AS [DBA_TABLESPACES.PLUGGED_IN], 
            T.SEGMENT_SPACE_MANAGEMENT AS [DBA_TABLESPACES.SEGMENT_SPACE_MANAGEMENT], 
            T.DEF_TAB_COMPRESSION AS [DBA_TABLESPACES.DEF_TAB_COMPRESSION], 
            T.RETENTION AS [DBA_TABLESPACES.RETENTION], 
            T.BIGFILE AS [DBA_TABLESPACES.BIGFILE], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_TABLESPACES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_TS_QUOTAS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TS_QUOTAS
        [EFModel.DataDictionary.Store.DBA_TS_QUOTAS](T1.[DBA_TS_QUOTAS.TABLESPACE_NAME], T1.[DBA_TS_QUOTAS.USERNAME], T1.[DBA_TS_QUOTAS.BYTES], T1.[DBA_TS_QUOTAS.MAX_BYTES], T1.[DBA_TS_QUOTAS.BLOCKS], T1.[DBA_TS_QUOTAS.MAX_BLOCKS], T1.[DBA_TS_QUOTAS.DROPPED])
    FROM (
        SELECT 
            T.TABLESPACE_NAME AS [DBA_TS_QUOTAS.TABLESPACE_NAME], 
            T.USERNAME AS [DBA_TS_QUOTAS.USERNAME], 
            T.BYTES AS [DBA_TS_QUOTAS.BYTES], 
            T.MAX_BYTES AS [DBA_TS_QUOTAS.MAX_BYTES], 
            T.BLOCKS AS [DBA_TS_QUOTAS.BLOCKS], 
            T.MAX_BLOCKS AS [DBA_TS_QUOTAS.MAX_BLOCKS], 
            T.DROPPED AS [DBA_TS_QUOTAS.DROPPED], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_TS_QUOTAS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_TS_QUOTAS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_TS_QUOTAS
        [EFModel.DataDictionary.DBA_TS_QUOTAS](T1.[DBA_TS_QUOTAS.TABLESPACE_NAME], T1.[DBA_TS_QUOTAS.USERNAME], T1.[DBA_TS_QUOTAS.BYTES], T1.[DBA_TS_QUOTAS.MAX_BYTES], T1.[DBA_TS_QUOTAS.BLOCKS], T1.[DBA_TS_QUOTAS.MAX_BLOCKS], T1.[DBA_TS_QUOTAS.DROPPED])
    FROM (
        SELECT 
            T.TABLESPACE_NAME AS [DBA_TS_QUOTAS.TABLESPACE_NAME], 
            T.USERNAME AS [DBA_TS_QUOTAS.USERNAME], 
            T.BYTES AS [DBA_TS_QUOTAS.BYTES], 
            T.MAX_BYTES AS [DBA_TS_QUOTAS.MAX_BYTES], 
            T.BLOCKS AS [DBA_TS_QUOTAS.BLOCKS], 
            T.MAX_BLOCKS AS [DBA_TS_QUOTAS.MAX_BLOCKS], 
            T.DROPPED AS [DBA_TS_QUOTAS.DROPPED], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_TS_QUOTAS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_MVIEWS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_MVIEWS
        [EFModel.DataDictionary.Store.DBA_MVIEWS](T1.[DBA_MVIEWS.OWNER], T1.[DBA_MVIEWS.MVIEW_NAME], T1.[DBA_MVIEWS.CONTAINER_NAME], T1.[DBA_MVIEWS.QUERY], T1.[DBA_MVIEWS.QUERY_LEN], T1.[DBA_MVIEWS.UPDATABLE], T1.[DBA_MVIEWS.UPDATE_LOG], T1.[DBA_MVIEWS.MASTER_ROLLBACK_SEG], T1.[DBA_MVIEWS.MASTER_LINK], T1.[DBA_MVIEWS.REWRITE_ENABLED], T1.[DBA_MVIEWS.REWRITE_CAPABILITY], T1.[DBA_MVIEWS.REFRESH_MODE], T1.[DBA_MVIEWS.REFRESH_METHOD], T1.[DBA_MVIEWS.BUILD_MODE], T1.[DBA_MVIEWS.FAST_REFRESHABLE], T1.[DBA_MVIEWS.LAST_REFRESH_TYPE], T1.[DBA_MVIEWS.LAST_REFRESH_DATE], T1.[DBA_MVIEWS.STALENESS], T1.[DBA_MVIEWS.AFTER_FAST_REFRESH], T1.[DBA_MVIEWS.UNKNOWN_PREBUILT], T1.[DBA_MVIEWS.UNKNOWN_PLSQL_FUNC], T1.[DBA_MVIEWS.UNKNOWN_EXTERNAL_TABLE], T1.[DBA_MVIEWS.UNKNOWN_CONSIDER_FRESH], T1.[DBA_MVIEWS.UNKNOWN_IMPORT], T1.[DBA_MVIEWS.UNKNOWN_TRUSTED_FD], T1.[DBA_MVIEWS.COMPILE_STATE], T1.[DBA_MVIEWS.USE_NO_INDEX], T1.[DBA_MVIEWS.STALE_SINCE])
    FROM (
        SELECT 
            T.OWNER AS [DBA_MVIEWS.OWNER], 
            T.MVIEW_NAME AS [DBA_MVIEWS.MVIEW_NAME], 
            T.CONTAINER_NAME AS [DBA_MVIEWS.CONTAINER_NAME], 
            T.QUERY AS [DBA_MVIEWS.QUERY], 
            T.QUERY_LEN AS [DBA_MVIEWS.QUERY_LEN], 
            T.UPDATABLE AS [DBA_MVIEWS.UPDATABLE], 
            T.UPDATE_LOG AS [DBA_MVIEWS.UPDATE_LOG], 
            T.MASTER_ROLLBACK_SEG AS [DBA_MVIEWS.MASTER_ROLLBACK_SEG], 
            T.MASTER_LINK AS [DBA_MVIEWS.MASTER_LINK], 
            T.REWRITE_ENABLED AS [DBA_MVIEWS.REWRITE_ENABLED], 
            T.REWRITE_CAPABILITY AS [DBA_MVIEWS.REWRITE_CAPABILITY], 
            T.REFRESH_MODE AS [DBA_MVIEWS.REFRESH_MODE], 
            T.REFRESH_METHOD AS [DBA_MVIEWS.REFRESH_METHOD], 
            T.BUILD_MODE AS [DBA_MVIEWS.BUILD_MODE], 
            T.FAST_REFRESHABLE AS [DBA_MVIEWS.FAST_REFRESHABLE], 
            T.LAST_REFRESH_TYPE AS [DBA_MVIEWS.LAST_REFRESH_TYPE], 
            T.LAST_REFRESH_DATE AS [DBA_MVIEWS.LAST_REFRESH_DATE], 
            T.STALENESS AS [DBA_MVIEWS.STALENESS], 
            T.AFTER_FAST_REFRESH AS [DBA_MVIEWS.AFTER_FAST_REFRESH], 
            T.UNKNOWN_PREBUILT AS [DBA_MVIEWS.UNKNOWN_PREBUILT], 
            T.UNKNOWN_PLSQL_FUNC AS [DBA_MVIEWS.UNKNOWN_PLSQL_FUNC], 
            T.UNKNOWN_EXTERNAL_TABLE AS [DBA_MVIEWS.UNKNOWN_EXTERNAL_TABLE], 
            T.UNKNOWN_CONSIDER_FRESH AS [DBA_MVIEWS.UNKNOWN_CONSIDER_FRESH], 
            T.UNKNOWN_IMPORT AS [DBA_MVIEWS.UNKNOWN_IMPORT], 
            T.UNKNOWN_TRUSTED_FD AS [DBA_MVIEWS.UNKNOWN_TRUSTED_FD], 
            T.COMPILE_STATE AS [DBA_MVIEWS.COMPILE_STATE], 
            T.USE_NO_INDEX AS [DBA_MVIEWS.USE_NO_INDEX], 
            T.STALE_SINCE AS [DBA_MVIEWS.STALE_SINCE], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_MVIEWS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_MVIEWS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_MVIEWS
        [EFModel.DataDictionary.DBA_MVIEWS](T1.[DBA_MVIEWS.OWNER], T1.[DBA_MVIEWS.MVIEW_NAME], T1.[DBA_MVIEWS.CONTAINER_NAME], T1.[DBA_MVIEWS.QUERY], T1.[DBA_MVIEWS.QUERY_LEN], T1.[DBA_MVIEWS.UPDATABLE], T1.[DBA_MVIEWS.UPDATE_LOG], T1.[DBA_MVIEWS.MASTER_ROLLBACK_SEG], T1.[DBA_MVIEWS.MASTER_LINK], T1.[DBA_MVIEWS.REWRITE_ENABLED], T1.[DBA_MVIEWS.REWRITE_CAPABILITY], T1.[DBA_MVIEWS.REFRESH_MODE], T1.[DBA_MVIEWS.REFRESH_METHOD], T1.[DBA_MVIEWS.BUILD_MODE], T1.[DBA_MVIEWS.FAST_REFRESHABLE], T1.[DBA_MVIEWS.LAST_REFRESH_TYPE], T1.[DBA_MVIEWS.LAST_REFRESH_DATE], T1.[DBA_MVIEWS.STALENESS], T1.[DBA_MVIEWS.AFTER_FAST_REFRESH], T1.[DBA_MVIEWS.UNKNOWN_PREBUILT], T1.[DBA_MVIEWS.UNKNOWN_PLSQL_FUNC], T1.[DBA_MVIEWS.UNKNOWN_EXTERNAL_TABLE], T1.[DBA_MVIEWS.UNKNOWN_CONSIDER_FRESH], T1.[DBA_MVIEWS.UNKNOWN_IMPORT], T1.[DBA_MVIEWS.UNKNOWN_TRUSTED_FD], T1.[DBA_MVIEWS.COMPILE_STATE], T1.[DBA_MVIEWS.USE_NO_INDEX], T1.[DBA_MVIEWS.STALE_SINCE])
    FROM (
        SELECT 
            T.OWNER AS [DBA_MVIEWS.OWNER], 
            T.MVIEW_NAME AS [DBA_MVIEWS.MVIEW_NAME], 
            T.CONTAINER_NAME AS [DBA_MVIEWS.CONTAINER_NAME], 
            T.QUERY AS [DBA_MVIEWS.QUERY], 
            T.QUERY_LEN AS [DBA_MVIEWS.QUERY_LEN], 
            T.UPDATABLE AS [DBA_MVIEWS.UPDATABLE], 
            T.UPDATE_LOG AS [DBA_MVIEWS.UPDATE_LOG], 
            T.MASTER_ROLLBACK_SEG AS [DBA_MVIEWS.MASTER_ROLLBACK_SEG], 
            T.MASTER_LINK AS [DBA_MVIEWS.MASTER_LINK], 
            T.REWRITE_ENABLED AS [DBA_MVIEWS.REWRITE_ENABLED], 
            T.REWRITE_CAPABILITY AS [DBA_MVIEWS.REWRITE_CAPABILITY], 
            T.REFRESH_MODE AS [DBA_MVIEWS.REFRESH_MODE], 
            T.REFRESH_METHOD AS [DBA_MVIEWS.REFRESH_METHOD], 
            T.BUILD_MODE AS [DBA_MVIEWS.BUILD_MODE], 
            T.FAST_REFRESHABLE AS [DBA_MVIEWS.FAST_REFRESHABLE], 
            T.LAST_REFRESH_TYPE AS [DBA_MVIEWS.LAST_REFRESH_TYPE], 
            T.LAST_REFRESH_DATE AS [DBA_MVIEWS.LAST_REFRESH_DATE], 
            T.STALENESS AS [DBA_MVIEWS.STALENESS], 
            T.AFTER_FAST_REFRESH AS [DBA_MVIEWS.AFTER_FAST_REFRESH], 
            T.UNKNOWN_PREBUILT AS [DBA_MVIEWS.UNKNOWN_PREBUILT], 
            T.UNKNOWN_PLSQL_FUNC AS [DBA_MVIEWS.UNKNOWN_PLSQL_FUNC], 
            T.UNKNOWN_EXTERNAL_TABLE AS [DBA_MVIEWS.UNKNOWN_EXTERNAL_TABLE], 
            T.UNKNOWN_CONSIDER_FRESH AS [DBA_MVIEWS.UNKNOWN_CONSIDER_FRESH], 
            T.UNKNOWN_IMPORT AS [DBA_MVIEWS.UNKNOWN_IMPORT], 
            T.UNKNOWN_TRUSTED_FD AS [DBA_MVIEWS.UNKNOWN_TRUSTED_FD], 
            T.COMPILE_STATE AS [DBA_MVIEWS.COMPILE_STATE], 
            T.USE_NO_INDEX AS [DBA_MVIEWS.USE_NO_INDEX], 
            T.STALE_SINCE AS [DBA_MVIEWS.STALE_SINCE], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_MVIEWS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_SCHEDULER_JOBS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SCHEDULER_JOBS
        [EFModel.DataDictionary.Store.DBA_SCHEDULER_JOBS](T1.[DBA_SCHEDULER_JOBS.OWNER], T1.[DBA_SCHEDULER_JOBS.JOB_NAME], T1.[DBA_SCHEDULER_JOBS.JOB_SUBNAME], T1.[DBA_SCHEDULER_JOBS.JOB_CREATOR], T1.[DBA_SCHEDULER_JOBS.CLIENT_ID], T1.[DBA_SCHEDULER_JOBS.GLOBAL_UID], T1.[DBA_SCHEDULER_JOBS.PROGRAM_OWNER], T1.[DBA_SCHEDULER_JOBS.PROGRAM_NAME], T1.[DBA_SCHEDULER_JOBS.JOB_TYPE], T1.[DBA_SCHEDULER_JOBS.JOB_ACTION], T1.[DBA_SCHEDULER_JOBS.NUMBER_OF_ARGUMENTS], T1.[DBA_SCHEDULER_JOBS.SCHEDULE_OWNER], T1.[DBA_SCHEDULER_JOBS.SCHEDULE_NAME], T1.[DBA_SCHEDULER_JOBS.SCHEDULE_TYPE], T1.[DBA_SCHEDULER_JOBS.START_DATE], T1.[DBA_SCHEDULER_JOBS.REPEAT_INTERVAL], T1.[DBA_SCHEDULER_JOBS.EVENT_QUEUE_OWNER], T1.[DBA_SCHEDULER_JOBS.EVENT_QUEUE_NAME], T1.[DBA_SCHEDULER_JOBS.EVENT_QUEUE_AGENT], T1.[DBA_SCHEDULER_JOBS.EVENT_CONDITION], T1.[DBA_SCHEDULER_JOBS.EVENT_RULE], T1.[DBA_SCHEDULER_JOBS.END_DATE], T1.[DBA_SCHEDULER_JOBS.JOB_CLASS], T1.[DBA_SCHEDULER_JOBS.ENABLED], T1.[DBA_SCHEDULER_JOBS.AUTO_DROP], T1.[DBA_SCHEDULER_JOBS.RESTARTABLE], T1.[DBA_SCHEDULER_JOBS.STATE], T1.[DBA_SCHEDULER_JOBS.JOB_PRIORITY], T1.[DBA_SCHEDULER_JOBS.RUN_COUNT], T1.[DBA_SCHEDULER_JOBS.MAX_RUNS], T1.[DBA_SCHEDULER_JOBS.FAILURE_COUNT], T1.[DBA_SCHEDULER_JOBS.MAX_FAILURES], T1.[DBA_SCHEDULER_JOBS.RETRY_COUNT], T1.[DBA_SCHEDULER_JOBS.LAST_START_DATE], T1.[DBA_SCHEDULER_JOBS.LAST_RUN_DURATION], T1.[DBA_SCHEDULER_JOBS.NEXT_RUN_DATE], T1.[DBA_SCHEDULER_JOBS.SCHEDULE_LIMIT], T1.[DBA_SCHEDULER_JOBS.MAX_RUN_DURATION], T1.[DBA_SCHEDULER_JOBS.LOGGING_LEVEL], T1.[DBA_SCHEDULER_JOBS.STOP_ON_WINDOW_CLOSE], T1.[DBA_SCHEDULER_JOBS.INSTANCE_STICKINESS], T1.[DBA_SCHEDULER_JOBS.RAISE_EVENTS], T1.[DBA_SCHEDULER_JOBS.SYSTEM], T1.[DBA_SCHEDULER_JOBS.JOB_WEIGHT], T1.[DBA_SCHEDULER_JOBS.NLS_ENV], T1.[DBA_SCHEDULER_JOBS.SOURCE], T1.[DBA_SCHEDULER_JOBS.DESTINATION], T1.[DBA_SCHEDULER_JOBS.COMMENTS], T1.[DBA_SCHEDULER_JOBS.FLAGS])
    FROM (
        SELECT 
            T.OWNER AS [DBA_SCHEDULER_JOBS.OWNER], 
            T.JOB_NAME AS [DBA_SCHEDULER_JOBS.JOB_NAME], 
            T.JOB_SUBNAME AS [DBA_SCHEDULER_JOBS.JOB_SUBNAME], 
            T.JOB_CREATOR AS [DBA_SCHEDULER_JOBS.JOB_CREATOR], 
            T.CLIENT_ID AS [DBA_SCHEDULER_JOBS.CLIENT_ID], 
            T.GLOBAL_UID AS [DBA_SCHEDULER_JOBS.GLOBAL_UID], 
            T.PROGRAM_OWNER AS [DBA_SCHEDULER_JOBS.PROGRAM_OWNER], 
            T.PROGRAM_NAME AS [DBA_SCHEDULER_JOBS.PROGRAM_NAME], 
            T.JOB_TYPE AS [DBA_SCHEDULER_JOBS.JOB_TYPE], 
            T.JOB_ACTION AS [DBA_SCHEDULER_JOBS.JOB_ACTION], 
            T.NUMBER_OF_ARGUMENTS AS [DBA_SCHEDULER_JOBS.NUMBER_OF_ARGUMENTS], 
            T.SCHEDULE_OWNER AS [DBA_SCHEDULER_JOBS.SCHEDULE_OWNER], 
            T.SCHEDULE_NAME AS [DBA_SCHEDULER_JOBS.SCHEDULE_NAME], 
            T.SCHEDULE_TYPE AS [DBA_SCHEDULER_JOBS.SCHEDULE_TYPE], 
            T.START_DATE AS [DBA_SCHEDULER_JOBS.START_DATE], 
            T.REPEAT_INTERVAL AS [DBA_SCHEDULER_JOBS.REPEAT_INTERVAL], 
            T.EVENT_QUEUE_OWNER AS [DBA_SCHEDULER_JOBS.EVENT_QUEUE_OWNER], 
            T.EVENT_QUEUE_NAME AS [DBA_SCHEDULER_JOBS.EVENT_QUEUE_NAME], 
            T.EVENT_QUEUE_AGENT AS [DBA_SCHEDULER_JOBS.EVENT_QUEUE_AGENT], 
            T.EVENT_CONDITION AS [DBA_SCHEDULER_JOBS.EVENT_CONDITION], 
            T.EVENT_RULE AS [DBA_SCHEDULER_JOBS.EVENT_RULE], 
            T.END_DATE AS [DBA_SCHEDULER_JOBS.END_DATE], 
            T.JOB_CLASS AS [DBA_SCHEDULER_JOBS.JOB_CLASS], 
            T.ENABLED AS [DBA_SCHEDULER_JOBS.ENABLED], 
            T.AUTO_DROP AS [DBA_SCHEDULER_JOBS.AUTO_DROP], 
            T.RESTARTABLE AS [DBA_SCHEDULER_JOBS.RESTARTABLE], 
            T.STATE AS [DBA_SCHEDULER_JOBS.STATE], 
            T.JOB_PRIORITY AS [DBA_SCHEDULER_JOBS.JOB_PRIORITY], 
            T.RUN_COUNT AS [DBA_SCHEDULER_JOBS.RUN_COUNT], 
            T.MAX_RUNS AS [DBA_SCHEDULER_JOBS.MAX_RUNS], 
            T.FAILURE_COUNT AS [DBA_SCHEDULER_JOBS.FAILURE_COUNT], 
            T.MAX_FAILURES AS [DBA_SCHEDULER_JOBS.MAX_FAILURES], 
            T.RETRY_COUNT AS [DBA_SCHEDULER_JOBS.RETRY_COUNT], 
            T.LAST_START_DATE AS [DBA_SCHEDULER_JOBS.LAST_START_DATE], 
            T.LAST_RUN_DURATION AS [DBA_SCHEDULER_JOBS.LAST_RUN_DURATION], 
            T.NEXT_RUN_DATE AS [DBA_SCHEDULER_JOBS.NEXT_RUN_DATE], 
            T.SCHEDULE_LIMIT AS [DBA_SCHEDULER_JOBS.SCHEDULE_LIMIT], 
            T.MAX_RUN_DURATION AS [DBA_SCHEDULER_JOBS.MAX_RUN_DURATION], 
            T.LOGGING_LEVEL AS [DBA_SCHEDULER_JOBS.LOGGING_LEVEL], 
            T.STOP_ON_WINDOW_CLOSE AS [DBA_SCHEDULER_JOBS.STOP_ON_WINDOW_CLOSE], 
            T.INSTANCE_STICKINESS AS [DBA_SCHEDULER_JOBS.INSTANCE_STICKINESS], 
            T.RAISE_EVENTS AS [DBA_SCHEDULER_JOBS.RAISE_EVENTS], 
            T.SYSTEM AS [DBA_SCHEDULER_JOBS.SYSTEM], 
            T.JOB_WEIGHT AS [DBA_SCHEDULER_JOBS.JOB_WEIGHT], 
            T.NLS_ENV AS [DBA_SCHEDULER_JOBS.NLS_ENV], 
            T.SOURCE AS [DBA_SCHEDULER_JOBS.SOURCE], 
            T.DESTINATION AS [DBA_SCHEDULER_JOBS.DESTINATION], 
            T.COMMENTS AS [DBA_SCHEDULER_JOBS.COMMENTS], 
            T.FLAGS AS [DBA_SCHEDULER_JOBS.FLAGS], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_SCHEDULER_JOBS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_SCHEDULER_JOBS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SCHEDULER_JOBS
        [EFModel.DataDictionary.DBA_SCHEDULER_JOBS](T1.[DBA_SCHEDULER_JOBS.OWNER], T1.[DBA_SCHEDULER_JOBS.JOB_NAME], T1.[DBA_SCHEDULER_JOBS.JOB_SUBNAME], T1.[DBA_SCHEDULER_JOBS.JOB_CREATOR], T1.[DBA_SCHEDULER_JOBS.CLIENT_ID], T1.[DBA_SCHEDULER_JOBS.GLOBAL_UID], T1.[DBA_SCHEDULER_JOBS.PROGRAM_OWNER], T1.[DBA_SCHEDULER_JOBS.PROGRAM_NAME], T1.[DBA_SCHEDULER_JOBS.JOB_TYPE], T1.[DBA_SCHEDULER_JOBS.JOB_ACTION], T1.[DBA_SCHEDULER_JOBS.NUMBER_OF_ARGUMENTS], T1.[DBA_SCHEDULER_JOBS.SCHEDULE_OWNER], T1.[DBA_SCHEDULER_JOBS.SCHEDULE_NAME], T1.[DBA_SCHEDULER_JOBS.SCHEDULE_TYPE], T1.[DBA_SCHEDULER_JOBS.START_DATE], T1.[DBA_SCHEDULER_JOBS.REPEAT_INTERVAL], T1.[DBA_SCHEDULER_JOBS.EVENT_QUEUE_OWNER], T1.[DBA_SCHEDULER_JOBS.EVENT_QUEUE_NAME], T1.[DBA_SCHEDULER_JOBS.EVENT_QUEUE_AGENT], T1.[DBA_SCHEDULER_JOBS.EVENT_CONDITION], T1.[DBA_SCHEDULER_JOBS.EVENT_RULE], T1.[DBA_SCHEDULER_JOBS.END_DATE], T1.[DBA_SCHEDULER_JOBS.JOB_CLASS], T1.[DBA_SCHEDULER_JOBS.ENABLED], T1.[DBA_SCHEDULER_JOBS.AUTO_DROP], T1.[DBA_SCHEDULER_JOBS.RESTARTABLE], T1.[DBA_SCHEDULER_JOBS.STATE], T1.[DBA_SCHEDULER_JOBS.JOB_PRIORITY], T1.[DBA_SCHEDULER_JOBS.RUN_COUNT], T1.[DBA_SCHEDULER_JOBS.MAX_RUNS], T1.[DBA_SCHEDULER_JOBS.FAILURE_COUNT], T1.[DBA_SCHEDULER_JOBS.MAX_FAILURES], T1.[DBA_SCHEDULER_JOBS.RETRY_COUNT], T1.[DBA_SCHEDULER_JOBS.LAST_START_DATE], T1.[DBA_SCHEDULER_JOBS.LAST_RUN_DURATION], T1.[DBA_SCHEDULER_JOBS.NEXT_RUN_DATE], T1.[DBA_SCHEDULER_JOBS.SCHEDULE_LIMIT], T1.[DBA_SCHEDULER_JOBS.MAX_RUN_DURATION], T1.[DBA_SCHEDULER_JOBS.LOGGING_LEVEL], T1.[DBA_SCHEDULER_JOBS.STOP_ON_WINDOW_CLOSE], T1.[DBA_SCHEDULER_JOBS.INSTANCE_STICKINESS], T1.[DBA_SCHEDULER_JOBS.RAISE_EVENTS], T1.[DBA_SCHEDULER_JOBS.SYSTEM], T1.[DBA_SCHEDULER_JOBS.JOB_WEIGHT], T1.[DBA_SCHEDULER_JOBS.NLS_ENV], T1.[DBA_SCHEDULER_JOBS.SOURCE], T1.[DBA_SCHEDULER_JOBS.DESTINATION], T1.[DBA_SCHEDULER_JOBS.COMMENTS], T1.[DBA_SCHEDULER_JOBS.FLAGS])
    FROM (
        SELECT 
            T.OWNER AS [DBA_SCHEDULER_JOBS.OWNER], 
            T.JOB_NAME AS [DBA_SCHEDULER_JOBS.JOB_NAME], 
            T.JOB_SUBNAME AS [DBA_SCHEDULER_JOBS.JOB_SUBNAME], 
            T.JOB_CREATOR AS [DBA_SCHEDULER_JOBS.JOB_CREATOR], 
            T.CLIENT_ID AS [DBA_SCHEDULER_JOBS.CLIENT_ID], 
            T.GLOBAL_UID AS [DBA_SCHEDULER_JOBS.GLOBAL_UID], 
            T.PROGRAM_OWNER AS [DBA_SCHEDULER_JOBS.PROGRAM_OWNER], 
            T.PROGRAM_NAME AS [DBA_SCHEDULER_JOBS.PROGRAM_NAME], 
            T.JOB_TYPE AS [DBA_SCHEDULER_JOBS.JOB_TYPE], 
            T.JOB_ACTION AS [DBA_SCHEDULER_JOBS.JOB_ACTION], 
            T.NUMBER_OF_ARGUMENTS AS [DBA_SCHEDULER_JOBS.NUMBER_OF_ARGUMENTS], 
            T.SCHEDULE_OWNER AS [DBA_SCHEDULER_JOBS.SCHEDULE_OWNER], 
            T.SCHEDULE_NAME AS [DBA_SCHEDULER_JOBS.SCHEDULE_NAME], 
            T.SCHEDULE_TYPE AS [DBA_SCHEDULER_JOBS.SCHEDULE_TYPE], 
            T.START_DATE AS [DBA_SCHEDULER_JOBS.START_DATE], 
            T.REPEAT_INTERVAL AS [DBA_SCHEDULER_JOBS.REPEAT_INTERVAL], 
            T.EVENT_QUEUE_OWNER AS [DBA_SCHEDULER_JOBS.EVENT_QUEUE_OWNER], 
            T.EVENT_QUEUE_NAME AS [DBA_SCHEDULER_JOBS.EVENT_QUEUE_NAME], 
            T.EVENT_QUEUE_AGENT AS [DBA_SCHEDULER_JOBS.EVENT_QUEUE_AGENT], 
            T.EVENT_CONDITION AS [DBA_SCHEDULER_JOBS.EVENT_CONDITION], 
            T.EVENT_RULE AS [DBA_SCHEDULER_JOBS.EVENT_RULE], 
            T.END_DATE AS [DBA_SCHEDULER_JOBS.END_DATE], 
            T.JOB_CLASS AS [DBA_SCHEDULER_JOBS.JOB_CLASS], 
            T.ENABLED AS [DBA_SCHEDULER_JOBS.ENABLED], 
            T.AUTO_DROP AS [DBA_SCHEDULER_JOBS.AUTO_DROP], 
            T.RESTARTABLE AS [DBA_SCHEDULER_JOBS.RESTARTABLE], 
            T.STATE AS [DBA_SCHEDULER_JOBS.STATE], 
            T.JOB_PRIORITY AS [DBA_SCHEDULER_JOBS.JOB_PRIORITY], 
            T.RUN_COUNT AS [DBA_SCHEDULER_JOBS.RUN_COUNT], 
            T.MAX_RUNS AS [DBA_SCHEDULER_JOBS.MAX_RUNS], 
            T.FAILURE_COUNT AS [DBA_SCHEDULER_JOBS.FAILURE_COUNT], 
            T.MAX_FAILURES AS [DBA_SCHEDULER_JOBS.MAX_FAILURES], 
            T.RETRY_COUNT AS [DBA_SCHEDULER_JOBS.RETRY_COUNT], 
            T.LAST_START_DATE AS [DBA_SCHEDULER_JOBS.LAST_START_DATE], 
            T.LAST_RUN_DURATION AS [DBA_SCHEDULER_JOBS.LAST_RUN_DURATION], 
            T.NEXT_RUN_DATE AS [DBA_SCHEDULER_JOBS.NEXT_RUN_DATE], 
            T.SCHEDULE_LIMIT AS [DBA_SCHEDULER_JOBS.SCHEDULE_LIMIT], 
            T.MAX_RUN_DURATION AS [DBA_SCHEDULER_JOBS.MAX_RUN_DURATION], 
            T.LOGGING_LEVEL AS [DBA_SCHEDULER_JOBS.LOGGING_LEVEL], 
            T.STOP_ON_WINDOW_CLOSE AS [DBA_SCHEDULER_JOBS.STOP_ON_WINDOW_CLOSE], 
            T.INSTANCE_STICKINESS AS [DBA_SCHEDULER_JOBS.INSTANCE_STICKINESS], 
            T.RAISE_EVENTS AS [DBA_SCHEDULER_JOBS.RAISE_EVENTS], 
            T.SYSTEM AS [DBA_SCHEDULER_JOBS.SYSTEM], 
            T.JOB_WEIGHT AS [DBA_SCHEDULER_JOBS.JOB_WEIGHT], 
            T.NLS_ENV AS [DBA_SCHEDULER_JOBS.NLS_ENV], 
            T.SOURCE AS [DBA_SCHEDULER_JOBS.SOURCE], 
            T.DESTINATION AS [DBA_SCHEDULER_JOBS.DESTINATION], 
            T.COMMENTS AS [DBA_SCHEDULER_JOBS.COMMENTS], 
            T.FLAGS AS [DBA_SCHEDULER_JOBS.FLAGS], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_SCHEDULER_JOBS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_SCHEDULER_JOB_CLASSES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SCHEDULER_JOB_CLASSES
        [EFModel.DataDictionary.Store.DBA_SCHEDULER_JOB_CLASSES](T1.[DBA_SCHEDULER_JOB_CLASSES.JOB_CLASS_NAME], T1.[DBA_SCHEDULER_JOB_CLASSES.RESOURCE_CONSUMER_GROUP], T1.[DBA_SCHEDULER_JOB_CLASSES.SERVICE], T1.[DBA_SCHEDULER_JOB_CLASSES.LOGGING_LEVEL], T1.[DBA_SCHEDULER_JOB_CLASSES.LOG_HISTORY], T1.[DBA_SCHEDULER_JOB_CLASSES.COMMENTS])
    FROM (
        SELECT 
            T.JOB_CLASS_NAME AS [DBA_SCHEDULER_JOB_CLASSES.JOB_CLASS_NAME], 
            T.RESOURCE_CONSUMER_GROUP AS [DBA_SCHEDULER_JOB_CLASSES.RESOURCE_CONSUMER_GROUP], 
            T.SERVICE AS [DBA_SCHEDULER_JOB_CLASSES.SERVICE], 
            T.LOGGING_LEVEL AS [DBA_SCHEDULER_JOB_CLASSES.LOGGING_LEVEL], 
            T.LOG_HISTORY AS [DBA_SCHEDULER_JOB_CLASSES.LOG_HISTORY], 
            T.COMMENTS AS [DBA_SCHEDULER_JOB_CLASSES.COMMENTS], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_SCHEDULER_JOB_CLASSES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_SCHEDULER_JOB_CLASSES", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_SCHEDULER_JOB_CLASSES
        [EFModel.DataDictionary.DBA_SCHEDULER_JOB_CLASSES](T1.[DBA_SCHEDULER_JOB_CLASSES.JOB_CLASS_NAME], T1.[DBA_SCHEDULER_JOB_CLASSES.RESOURCE_CONSUMER_GROUP], T1.[DBA_SCHEDULER_JOB_CLASSES.SERVICE], T1.[DBA_SCHEDULER_JOB_CLASSES.LOGGING_LEVEL], T1.[DBA_SCHEDULER_JOB_CLASSES.LOG_HISTORY], T1.[DBA_SCHEDULER_JOB_CLASSES.COMMENTS])
    FROM (
        SELECT 
            T.JOB_CLASS_NAME AS [DBA_SCHEDULER_JOB_CLASSES.JOB_CLASS_NAME], 
            T.RESOURCE_CONSUMER_GROUP AS [DBA_SCHEDULER_JOB_CLASSES.RESOURCE_CONSUMER_GROUP], 
            T.SERVICE AS [DBA_SCHEDULER_JOB_CLASSES.SERVICE], 
            T.LOGGING_LEVEL AS [DBA_SCHEDULER_JOB_CLASSES.LOGGING_LEVEL], 
            T.LOG_HISTORY AS [DBA_SCHEDULER_JOB_CLASSES.LOG_HISTORY], 
            T.COMMENTS AS [DBA_SCHEDULER_JOB_CLASSES.COMMENTS], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_SCHEDULER_JOB_CLASSES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DATABASE_PROPERTIES", new DbMappingView(@"
    SELECT VALUE -- Constructing DATABASE_PROPERTIES
        [EFModel.DataDictionary.Store.DATABASE_PROPERTIES](T1.[DATABASE_PROPERTIES.PROPERTY_NAME], T1.[DATABASE_PROPERTIES.PROPERTY_VALUE], T1.[DATABASE_PROPERTIES.DESCRIPTION])
    FROM (
        SELECT 
            T.PROPERTY_NAME AS [DATABASE_PROPERTIES.PROPERTY_NAME], 
            T.PROPERTY_VALUE AS [DATABASE_PROPERTIES.PROPERTY_VALUE], 
            T.DESCRIPTION AS [DATABASE_PROPERTIES.DESCRIPTION], 
            True AS _from0
        FROM DataDictionaryDbContext.DATABASE_PROPERTIES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DATABASE_PROPERTIES", new DbMappingView(@"
    SELECT VALUE -- Constructing DATABASE_PROPERTIES
        [EFModel.DataDictionary.DATABASE_PROPERTIES](T1.[DATABASE_PROPERTIES.PROPERTY_NAME], T1.[DATABASE_PROPERTIES.PROPERTY_VALUE], T1.[DATABASE_PROPERTIES.DESCRIPTION])
    FROM (
        SELECT 
            T.PROPERTY_NAME AS [DATABASE_PROPERTIES.PROPERTY_NAME], 
            T.PROPERTY_VALUE AS [DATABASE_PROPERTIES.PROPERTY_VALUE], 
            T.DESCRIPTION AS [DATABASE_PROPERTIES.DESCRIPTION], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DATABASE_PROPERTIES AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.ROLE_SYS_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing ROLE_SYS_PRIVS
        [EFModel.DataDictionary.Store.ROLE_SYS_PRIVS](T1.[ROLE_SYS_PRIVS.ROLE], T1.[ROLE_SYS_PRIVS.PRIVILEGE], T1.[ROLE_SYS_PRIVS.ADMIN_OPTION])
    FROM (
        SELECT 
            T.ROLE AS [ROLE_SYS_PRIVS.ROLE], 
            T.PRIVILEGE AS [ROLE_SYS_PRIVS.PRIVILEGE], 
            T.ADMIN_OPTION AS [ROLE_SYS_PRIVS.ADMIN_OPTION], 
            True AS _from0
        FROM DataDictionaryDbContext.ROLE_SYS_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.ROLE_SYS_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing ROLE_SYS_PRIVS
        [EFModel.DataDictionary.ROLE_SYS_PRIVS](T1.[ROLE_SYS_PRIVS.ROLE], T1.[ROLE_SYS_PRIVS.PRIVILEGE], T1.[ROLE_SYS_PRIVS.ADMIN_OPTION])
    FROM (
        SELECT 
            T.ROLE AS [ROLE_SYS_PRIVS.ROLE], 
            T.PRIVILEGE AS [ROLE_SYS_PRIVS.PRIVILEGE], 
            T.ADMIN_OPTION AS [ROLE_SYS_PRIVS.ADMIN_OPTION], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.ROLE_SYS_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.ROLE_TAB_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing ROLE_TAB_PRIVS
        [EFModel.DataDictionary.Store.ROLE_TAB_PRIVS](T1.[ROLE_TAB_PRIVS.ROLE], T1.[ROLE_TAB_PRIVS.OWNER], T1.[ROLE_TAB_PRIVS.TABLE_NAME], T1.[ROLE_TAB_PRIVS.COLUMN_NAME], T1.[ROLE_TAB_PRIVS.PRIVILEGE], T1.[ROLE_TAB_PRIVS.GRANTABLE])
    FROM (
        SELECT 
            T.ROLE AS [ROLE_TAB_PRIVS.ROLE], 
            T.OWNER AS [ROLE_TAB_PRIVS.OWNER], 
            T.TABLE_NAME AS [ROLE_TAB_PRIVS.TABLE_NAME], 
            T.COLUMN_NAME AS [ROLE_TAB_PRIVS.COLUMN_NAME], 
            T.PRIVILEGE AS [ROLE_TAB_PRIVS.PRIVILEGE], 
            T.GRANTABLE AS [ROLE_TAB_PRIVS.GRANTABLE], 
            True AS _from0
        FROM DataDictionaryDbContext.ROLE_TAB_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.ROLE_TAB_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing ROLE_TAB_PRIVS
        [EFModel.DataDictionary.ROLE_TAB_PRIVS](T1.[ROLE_TAB_PRIVS.ROLE], T1.[ROLE_TAB_PRIVS.OWNER], T1.[ROLE_TAB_PRIVS.TABLE_NAME], T1.[ROLE_TAB_PRIVS.COLUMN_NAME], T1.[ROLE_TAB_PRIVS.PRIVILEGE], T1.[ROLE_TAB_PRIVS.GRANTABLE])
    FROM (
        SELECT 
            T.ROLE AS [ROLE_TAB_PRIVS.ROLE], 
            T.OWNER AS [ROLE_TAB_PRIVS.OWNER], 
            T.TABLE_NAME AS [ROLE_TAB_PRIVS.TABLE_NAME], 
            T.COLUMN_NAME AS [ROLE_TAB_PRIVS.COLUMN_NAME], 
            T.PRIVILEGE AS [ROLE_TAB_PRIVS.PRIVILEGE], 
            T.GRANTABLE AS [ROLE_TAB_PRIVS.GRANTABLE], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.ROLE_TAB_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.ROLE_ROLE_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing ROLE_ROLE_PRIVS
        [EFModel.DataDictionary.Store.ROLE_ROLE_PRIVS](T1.[ROLE_ROLE_PRIVS.ROLE], T1.[ROLE_ROLE_PRIVS.GRANTED_ROLE], T1.[ROLE_ROLE_PRIVS.ADMIN_OPTION])
    FROM (
        SELECT 
            T.ROLE AS [ROLE_ROLE_PRIVS.ROLE], 
            T.GRANTED_ROLE AS [ROLE_ROLE_PRIVS.GRANTED_ROLE], 
            T.ADMIN_OPTION AS [ROLE_ROLE_PRIVS.ADMIN_OPTION], 
            True AS _from0
        FROM DataDictionaryDbContext.ROLE_ROLE_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.ROLE_ROLE_PRIVS", new DbMappingView(@"
    SELECT VALUE -- Constructing ROLE_ROLE_PRIVS
        [EFModel.DataDictionary.ROLE_ROLE_PRIVS](T1.[ROLE_ROLE_PRIVS.ROLE], T1.[ROLE_ROLE_PRIVS.GRANTED_ROLE], T1.[ROLE_ROLE_PRIVS.ADMIN_OPTION])
    FROM (
        SELECT 
            T.ROLE AS [ROLE_ROLE_PRIVS.ROLE], 
            T.GRANTED_ROLE AS [ROLE_ROLE_PRIVS.GRANTED_ROLE], 
            T.ADMIN_OPTION AS [ROLE_ROLE_PRIVS.ADMIN_OPTION], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.ROLE_ROLE_PRIVS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContextStoreContainer.DBA_OBJECTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_OBJECTS
        [EFModel.DataDictionary.Store.DBA_OBJECTS](T1.[DBA_OBJECTS.OWNER], T1.[DBA_OBJECTS.OBJECT_NAME], T1.[DBA_OBJECTS.SUBOBJECT_NAME], T1.[DBA_OBJECTS.OBJECT_ID], T1.[DBA_OBJECTS.DATA_OBJECT_ID], T1.[DBA_OBJECTS.OBJECT_TYPE], T1.[DBA_OBJECTS.CREATED], T1.[DBA_OBJECTS.LAST_DDL_TIME], T1.[DBA_OBJECTS.TIMESTAMP], T1.[DBA_OBJECTS.STATUS], T1.[DBA_OBJECTS.TEMPORARY], T1.[DBA_OBJECTS.GENERATED], T1.[DBA_OBJECTS.SECONDARY])
    FROM (
        SELECT 
            T.OWNER AS [DBA_OBJECTS.OWNER], 
            T.OBJECT_NAME AS [DBA_OBJECTS.OBJECT_NAME], 
            T.SUBOBJECT_NAME AS [DBA_OBJECTS.SUBOBJECT_NAME], 
            T.OBJECT_ID AS [DBA_OBJECTS.OBJECT_ID], 
            T.DATA_OBJECT_ID AS [DBA_OBJECTS.DATA_OBJECT_ID], 
            T.OBJECT_TYPE AS [DBA_OBJECTS.OBJECT_TYPE], 
            T.CREATED AS [DBA_OBJECTS.CREATED], 
            T.LAST_DDL_TIME AS [DBA_OBJECTS.LAST_DDL_TIME], 
            T.TIMESTAMP AS [DBA_OBJECTS.TIMESTAMP], 
            T.STATUS AS [DBA_OBJECTS.STATUS], 
            T.TEMPORARY AS [DBA_OBJECTS.TEMPORARY], 
            T.GENERATED AS [DBA_OBJECTS.GENERATED], 
            T.SECONDARY AS [DBA_OBJECTS.SECONDARY], 
            True AS _from0
        FROM DataDictionaryDbContext.DBA_OBJECTS AS T
    ) AS T1"));
				cachedViews.Add("DataDictionaryDbContext.DBA_OBJECTS", new DbMappingView(@"
    SELECT VALUE -- Constructing DBA_OBJECTS
        [EFModel.DataDictionary.DBA_OBJECTS](T1.[DBA_OBJECTS.OWNER], T1.[DBA_OBJECTS.OBJECT_NAME], T1.[DBA_OBJECTS.SUBOBJECT_NAME], T1.[DBA_OBJECTS.OBJECT_ID], T1.[DBA_OBJECTS.DATA_OBJECT_ID], T1.[DBA_OBJECTS.OBJECT_TYPE], T1.[DBA_OBJECTS.CREATED], T1.[DBA_OBJECTS.LAST_DDL_TIME], T1.[DBA_OBJECTS.TIMESTAMP], T1.[DBA_OBJECTS.STATUS], T1.[DBA_OBJECTS.TEMPORARY], T1.[DBA_OBJECTS.GENERATED], T1.[DBA_OBJECTS.SECONDARY])
    FROM (
        SELECT 
            T.OWNER AS [DBA_OBJECTS.OWNER], 
            T.OBJECT_NAME AS [DBA_OBJECTS.OBJECT_NAME], 
            T.SUBOBJECT_NAME AS [DBA_OBJECTS.SUBOBJECT_NAME], 
            T.OBJECT_ID AS [DBA_OBJECTS.OBJECT_ID], 
            T.DATA_OBJECT_ID AS [DBA_OBJECTS.DATA_OBJECT_ID], 
            T.OBJECT_TYPE AS [DBA_OBJECTS.OBJECT_TYPE], 
            T.CREATED AS [DBA_OBJECTS.CREATED], 
            T.LAST_DDL_TIME AS [DBA_OBJECTS.LAST_DDL_TIME], 
            T.TIMESTAMP AS [DBA_OBJECTS.TIMESTAMP], 
            T.STATUS AS [DBA_OBJECTS.STATUS], 
            T.TEMPORARY AS [DBA_OBJECTS.TEMPORARY], 
            T.GENERATED AS [DBA_OBJECTS.GENERATED], 
            T.SECONDARY AS [DBA_OBJECTS.SECONDARY], 
            True AS _from0
        FROM DataDictionaryDbContextStoreContainer.DBA_OBJECTS AS T
    ) AS T1"));
		}

	}
}
