//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;

namespace EFModel.DataDictionary
{

    /// <summary>
    /// Description of all tablespaces
    /// </summary>
    public partial class DBA_TABLESPACES : ICloneable, INotifyPropertyChanged    {

        public DBA_TABLESPACES()
        {
        }

        #region Properties
    
        /// <summary>
        /// Tablespace name
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string TABLESPACE_NAME
        {
            get
            {
                return _TABLESPACE_NAME;
            }
            set
            {
                if (_TABLESPACE_NAME != value)
                {
                    _TABLESPACE_NAME = value;
                    OnPropertyChanged("TABLESPACE_NAME");
                }
            }
        }
        private string _TABLESPACE_NAME;

    
        /// <summary>
        /// Tablespace block size
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual decimal BLOCK_SIZE
        {
            get
            {
                return _BLOCK_SIZE;
            }
            set
            {
                if (_BLOCK_SIZE != value)
                {
                    _BLOCK_SIZE = value;
                    OnPropertyChanged("BLOCK_SIZE");
                }
            }
        }
        private decimal _BLOCK_SIZE;

    
        /// <summary>
        /// Default initial extent size
        /// </summary>
        public virtual global::System.Nullable<decimal> INITIAL_EXTENT
        {
            get
            {
                return _INITIAL_EXTENT;
            }
            set
            {
                if (_INITIAL_EXTENT != value)
                {
                    _INITIAL_EXTENT = value;
                    OnPropertyChanged("INITIAL_EXTENT");
                }
            }
        }
        private global::System.Nullable<decimal> _INITIAL_EXTENT;

    
        /// <summary>
        /// Default incremental extent size
        /// </summary>
        public virtual global::System.Nullable<decimal> NEXT_EXTENT
        {
            get
            {
                return _NEXT_EXTENT;
            }
            set
            {
                if (_NEXT_EXTENT != value)
                {
                    _NEXT_EXTENT = value;
                    OnPropertyChanged("NEXT_EXTENT");
                }
            }
        }
        private global::System.Nullable<decimal> _NEXT_EXTENT;

    
        /// <summary>
        /// Default minimum number of extents
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual decimal MIN_EXTENTS
        {
            get
            {
                return _MIN_EXTENTS;
            }
            set
            {
                if (_MIN_EXTENTS != value)
                {
                    _MIN_EXTENTS = value;
                    OnPropertyChanged("MIN_EXTENTS");
                }
            }
        }
        private decimal _MIN_EXTENTS;

    
        /// <summary>
        /// Default maximum number of extents
        /// </summary>
        public virtual global::System.Nullable<decimal> MAX_EXTENTS
        {
            get
            {
                return _MAX_EXTENTS;
            }
            set
            {
                if (_MAX_EXTENTS != value)
                {
                    _MAX_EXTENTS = value;
                    OnPropertyChanged("MAX_EXTENTS");
                }
            }
        }
        private global::System.Nullable<decimal> _MAX_EXTENTS;

    
        /// <summary>
        /// Default percent increase for extent size
        /// </summary>
        public virtual global::System.Nullable<decimal> PCT_INCREASE
        {
            get
            {
                return _PCT_INCREASE;
            }
            set
            {
                if (_PCT_INCREASE != value)
                {
                    _PCT_INCREASE = value;
                    OnPropertyChanged("PCT_INCREASE");
                }
            }
        }
        private global::System.Nullable<decimal> _PCT_INCREASE;

    
        /// <summary>
        /// Minimum extent size for the tablespace
        /// </summary>
        public virtual global::System.Nullable<decimal> MIN_EXTLEN
        {
            get
            {
                return _MIN_EXTLEN;
            }
            set
            {
                if (_MIN_EXTLEN != value)
                {
                    _MIN_EXTLEN = value;
                    OnPropertyChanged("MIN_EXTLEN");
                }
            }
        }
        private global::System.Nullable<decimal> _MIN_EXTLEN;

    
        /// <summary>
        /// Tablespace status: "ONLINE", "OFFLINE", or "READ ONLY"
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public virtual string STATUS
        {
            get
            {
                return _STATUS;
            }
            set
            {
                if (_STATUS != value)
                {
                    _STATUS = value;
                    OnPropertyChanged("STATUS");
                }
            }
        }
        private string _STATUS;

    
        /// <summary>
        /// Tablespace contents: "PERMANENT", or "TEMPORARY"
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public virtual string CONTENTS
        {
            get
            {
                return _CONTENTS;
            }
            set
            {
                if (_CONTENTS != value)
                {
                    _CONTENTS = value;
                    OnPropertyChanged("CONTENTS");
                }
            }
        }
        private string _CONTENTS;

    
        /// <summary>
        /// Default logging attribute
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public virtual string LOGGING
        {
            get
            {
                return _LOGGING;
            }
            set
            {
                if (_LOGGING != value)
                {
                    _LOGGING = value;
                    OnPropertyChanged("LOGGING");
                }
            }
        }
        private string _LOGGING;

    
        /// <summary>
        /// Tablespace force logging mode
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public virtual string FORCE_LOGGING
        {
            get
            {
                return _FORCE_LOGGING;
            }
            set
            {
                if (_FORCE_LOGGING != value)
                {
                    _FORCE_LOGGING = value;
                    OnPropertyChanged("FORCE_LOGGING");
                }
            }
        }
        private string _FORCE_LOGGING;

    
        /// <summary>
        /// Extent management tracking: "DICTIONARY" or "LOCAL"
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(10)]
        public virtual string EXTENT_MANAGEMENT
        {
            get
            {
                return _EXTENT_MANAGEMENT;
            }
            set
            {
                if (_EXTENT_MANAGEMENT != value)
                {
                    _EXTENT_MANAGEMENT = value;
                    OnPropertyChanged("EXTENT_MANAGEMENT");
                }
            }
        }
        private string _EXTENT_MANAGEMENT;

    
        /// <summary>
        /// Type of extent allocation in effect for this tablespace
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(9)]
        public virtual string ALLOCATION_TYPE
        {
            get
            {
                return _ALLOCATION_TYPE;
            }
            set
            {
                if (_ALLOCATION_TYPE != value)
                {
                    _ALLOCATION_TYPE = value;
                    OnPropertyChanged("ALLOCATION_TYPE");
                }
            }
        }
        private string _ALLOCATION_TYPE;

    
        /// <summary>
        /// There are no comments for PLUGGED_IN in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public virtual string PLUGGED_IN
        {
            get
            {
                return _PLUGGED_IN;
            }
            set
            {
                if (_PLUGGED_IN != value)
                {
                    _PLUGGED_IN = value;
                    OnPropertyChanged("PLUGGED_IN");
                }
            }
        }
        private string _PLUGGED_IN;

    
        /// <summary>
        /// Segment space management tracking: "AUTO" or "MANUAL"
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public virtual string SEGMENT_SPACE_MANAGEMENT
        {
            get
            {
                return _SEGMENT_SPACE_MANAGEMENT;
            }
            set
            {
                if (_SEGMENT_SPACE_MANAGEMENT != value)
                {
                    _SEGMENT_SPACE_MANAGEMENT = value;
                    OnPropertyChanged("SEGMENT_SPACE_MANAGEMENT");
                }
            }
        }
        private string _SEGMENT_SPACE_MANAGEMENT;

    
        /// <summary>
        /// Default compression enabled or not: "ENABLED" or "DISABLED"
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public virtual string DEF_TAB_COMPRESSION
        {
            get
            {
                return _DEF_TAB_COMPRESSION;
            }
            set
            {
                if (_DEF_TAB_COMPRESSION != value)
                {
                    _DEF_TAB_COMPRESSION = value;
                    OnPropertyChanged("DEF_TAB_COMPRESSION");
                }
            }
        }
        private string _DEF_TAB_COMPRESSION;

    
        /// <summary>
        /// Undo tablespace retention: "GUARANTEE", "NOGUARANTEE" or "NOT APPLY"
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(11)]
        public virtual string RETENTION
        {
            get
            {
                return _RETENTION;
            }
            set
            {
                if (_RETENTION != value)
                {
                    _RETENTION = value;
                    OnPropertyChanged("RETENTION");
                }
            }
        }
        private string _RETENTION;

    
        /// <summary>
        /// Bigfile tablespace indicator: "YES" or "NO"
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public virtual string BIGFILE
        {
            get
            {
                return _BIGFILE;
            }
            set
            {
                if (_BIGFILE != value)
                {
                    _BIGFILE = value;
                    OnPropertyChanged("BIGFILE");
                }
            }
        }
        private string _BIGFILE;


        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            DBA_TABLESPACES obj = new DBA_TABLESPACES();
            obj.TABLESPACE_NAME = TABLESPACE_NAME;
            obj.BLOCK_SIZE = BLOCK_SIZE;
            obj.INITIAL_EXTENT = INITIAL_EXTENT;
            obj.NEXT_EXTENT = NEXT_EXTENT;
            obj.MIN_EXTENTS = MIN_EXTENTS;
            obj.MAX_EXTENTS = MAX_EXTENTS;
            obj.PCT_INCREASE = PCT_INCREASE;
            obj.MIN_EXTLEN = MIN_EXTLEN;
            obj.STATUS = STATUS;
            obj.CONTENTS = CONTENTS;
            obj.LOGGING = LOGGING;
            obj.FORCE_LOGGING = FORCE_LOGGING;
            obj.EXTENT_MANAGEMENT = EXTENT_MANAGEMENT;
            obj.ALLOCATION_TYPE = ALLOCATION_TYPE;
            obj.PLUGGED_IN = PLUGGED_IN;
            obj.SEGMENT_SPACE_MANAGEMENT = SEGMENT_SPACE_MANAGEMENT;
            obj.DEF_TAB_COMPRESSION = DEF_TAB_COMPRESSION;
            obj.RETENTION = RETENTION;
            obj.BIGFILE = BIGFILE;
            return obj;
        }

        #endregion
    
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
