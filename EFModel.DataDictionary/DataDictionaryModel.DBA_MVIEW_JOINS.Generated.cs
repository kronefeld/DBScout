//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;

namespace EFModel.DataDictionary
{

    /// <summary>
    /// Description of a join between two columns in the
    /// WHERE clause of a materialized view accessible to dba
    /// </summary>
    public partial class DBA_MVIEW_JOINS : ICloneable, INotifyPropertyChanged    {

        public DBA_MVIEW_JOINS()
        {
        }

        #region Properties
    
        /// <summary>
        /// Owner of the materialized view
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string OWNER
        {
            get
            {
                return _OWNER;
            }
            set
            {
                if (_OWNER != value)
                {
                    _OWNER = value;
                    OnPropertyChanged("OWNER");
                }
            }
        }
        private string _OWNER;

    
        /// <summary>
        /// Name of the materialized view
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string MVIEW_NAME
        {
            get
            {
                return _MVIEW_NAME;
            }
            set
            {
                if (_MVIEW_NAME != value)
                {
                    _MVIEW_NAME = value;
                    OnPropertyChanged("MVIEW_NAME");
                }
            }
        }
        private string _MVIEW_NAME;

    
        /// <summary>
        /// Owner of the 1st detail object
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string DETAILOBJ1_OWNER
        {
            get
            {
                return _DETAILOBJ1_OWNER;
            }
            set
            {
                if (_DETAILOBJ1_OWNER != value)
                {
                    _DETAILOBJ1_OWNER = value;
                    OnPropertyChanged("DETAILOBJ1_OWNER");
                }
            }
        }
        private string _DETAILOBJ1_OWNER;

    
        /// <summary>
        /// Name of the 1st detail object
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string DETAILOBJ1_RELATION
        {
            get
            {
                return _DETAILOBJ1_RELATION;
            }
            set
            {
                if (_DETAILOBJ1_RELATION != value)
                {
                    _DETAILOBJ1_RELATION = value;
                    OnPropertyChanged("DETAILOBJ1_RELATION");
                }
            }
        }
        private string _DETAILOBJ1_RELATION;

    
        /// <summary>
        /// Name of the 1st detail object column
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string DETAILOBJ1_COLUMN
        {
            get
            {
                return _DETAILOBJ1_COLUMN;
            }
            set
            {
                if (_DETAILOBJ1_COLUMN != value)
                {
                    _DETAILOBJ1_COLUMN = value;
                    OnPropertyChanged("DETAILOBJ1_COLUMN");
                }
            }
        }
        private string _DETAILOBJ1_COLUMN;

    
        /// <summary>
        /// Name of the join operator. Currently only = is defined
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        public virtual string OPERATOR
        {
            get
            {
                return _OPERATOR;
            }
            set
            {
                if (_OPERATOR != value)
                {
                    _OPERATOR = value;
                    OnPropertyChanged("OPERATOR");
                }
            }
        }
        private string _OPERATOR;

    
        /// <summary>
        /// Indicates inner or outer join. I = inner join, L = DETAILOBJ1 table
        /// is the left side of an outer join, R = DETAILOBJ2 table is the right
        /// side of an outer join
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        public virtual string OPERATOR_TYPE
        {
            get
            {
                return _OPERATOR_TYPE;
            }
            set
            {
                if (_OPERATOR_TYPE != value)
                {
                    _OPERATOR_TYPE = value;
                    OnPropertyChanged("OPERATOR_TYPE");
                }
            }
        }
        private string _OPERATOR_TYPE;

    
        /// <summary>
        /// Owner of the 2nd detail object
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string DETAILOBJ2_OWNER
        {
            get
            {
                return _DETAILOBJ2_OWNER;
            }
            set
            {
                if (_DETAILOBJ2_OWNER != value)
                {
                    _DETAILOBJ2_OWNER = value;
                    OnPropertyChanged("DETAILOBJ2_OWNER");
                }
            }
        }
        private string _DETAILOBJ2_OWNER;

    
        /// <summary>
        /// Name of the 2nd detail object
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string DETAILOBJ2_RELATION
        {
            get
            {
                return _DETAILOBJ2_RELATION;
            }
            set
            {
                if (_DETAILOBJ2_RELATION != value)
                {
                    _DETAILOBJ2_RELATION = value;
                    OnPropertyChanged("DETAILOBJ2_RELATION");
                }
            }
        }
        private string _DETAILOBJ2_RELATION;

    
        /// <summary>
        /// Name of the 2nd detail object column
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string DETAILOBJ2_COLUMN
        {
            get
            {
                return _DETAILOBJ2_COLUMN;
            }
            set
            {
                if (_DETAILOBJ2_COLUMN != value)
                {
                    _DETAILOBJ2_COLUMN = value;
                    OnPropertyChanged("DETAILOBJ2_COLUMN");
                }
            }
        }
        private string _DETAILOBJ2_COLUMN;


        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            DBA_MVIEW_JOINS obj = new DBA_MVIEW_JOINS();
            obj.OWNER = OWNER;
            obj.MVIEW_NAME = MVIEW_NAME;
            obj.DETAILOBJ1_OWNER = DETAILOBJ1_OWNER;
            obj.DETAILOBJ1_RELATION = DETAILOBJ1_RELATION;
            obj.DETAILOBJ1_COLUMN = DETAILOBJ1_COLUMN;
            obj.OPERATOR = OPERATOR;
            obj.OPERATOR_TYPE = OPERATOR_TYPE;
            obj.DETAILOBJ2_OWNER = DETAILOBJ2_OWNER;
            obj.DETAILOBJ2_RELATION = DETAILOBJ2_RELATION;
            obj.DETAILOBJ2_COLUMN = DETAILOBJ2_COLUMN;
            return obj;
        }

        #endregion
    
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
