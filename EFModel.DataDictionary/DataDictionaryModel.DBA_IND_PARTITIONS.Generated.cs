//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;

namespace EFModel.DataDictionary
{

    /// <summary>
    /// There are no comments for EFModel.DataDictionary.DBA_IND_PARTITIONS in the schema.
    /// </summary>
    public partial class DBA_IND_PARTITIONS : ICloneable, INotifyPropertyChanged    {

        public DBA_IND_PARTITIONS()
        {
        }

        #region Properties
    
        /// <summary>
        /// There are no comments for INDEX_OWNER in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string INDEX_OWNER
        {
            get
            {
                return _INDEX_OWNER;
            }
            set
            {
                if (_INDEX_OWNER != value)
                {
                    _INDEX_OWNER = value;
                    OnPropertyChanged("INDEX_OWNER");
                }
            }
        }
        private string _INDEX_OWNER;

    
        /// <summary>
        /// There are no comments for INDEX_NAME in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string INDEX_NAME
        {
            get
            {
                return _INDEX_NAME;
            }
            set
            {
                if (_INDEX_NAME != value)
                {
                    _INDEX_NAME = value;
                    OnPropertyChanged("INDEX_NAME");
                }
            }
        }
        private string _INDEX_NAME;

    
        /// <summary>
        /// There are no comments for COMPOSITE in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public virtual string COMPOSITE
        {
            get
            {
                return _COMPOSITE;
            }
            set
            {
                if (_COMPOSITE != value)
                {
                    _COMPOSITE = value;
                    OnPropertyChanged("COMPOSITE");
                }
            }
        }
        private string _COMPOSITE;

    
        /// <summary>
        /// There are no comments for PARTITION_NAME in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string PARTITION_NAME
        {
            get
            {
                return _PARTITION_NAME;
            }
            set
            {
                if (_PARTITION_NAME != value)
                {
                    _PARTITION_NAME = value;
                    OnPropertyChanged("PARTITION_NAME");
                }
            }
        }
        private string _PARTITION_NAME;

    
        /// <summary>
        /// There are no comments for SUBPARTITION_COUNT in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> SUBPARTITION_COUNT
        {
            get
            {
                return _SUBPARTITION_COUNT;
            }
            set
            {
                if (_SUBPARTITION_COUNT != value)
                {
                    _SUBPARTITION_COUNT = value;
                    OnPropertyChanged("SUBPARTITION_COUNT");
                }
            }
        }
        private global::System.Nullable<decimal> _SUBPARTITION_COUNT;

    
        /// <summary>
        /// There are no comments for HIGH_VALUE in the schema.
        /// </summary>
        public virtual string HIGH_VALUE
        {
            get
            {
                return _HIGH_VALUE;
            }
            set
            {
                if (_HIGH_VALUE != value)
                {
                    _HIGH_VALUE = value;
                    OnPropertyChanged("HIGH_VALUE");
                }
            }
        }
        private string _HIGH_VALUE;

    
        /// <summary>
        /// There are no comments for HIGH_VALUE_LENGTH in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> HIGH_VALUE_LENGTH
        {
            get
            {
                return _HIGH_VALUE_LENGTH;
            }
            set
            {
                if (_HIGH_VALUE_LENGTH != value)
                {
                    _HIGH_VALUE_LENGTH = value;
                    OnPropertyChanged("HIGH_VALUE_LENGTH");
                }
            }
        }
        private global::System.Nullable<decimal> _HIGH_VALUE_LENGTH;

    
        /// <summary>
        /// There are no comments for PARTITION_POSITION in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> PARTITION_POSITION
        {
            get
            {
                return _PARTITION_POSITION;
            }
            set
            {
                if (_PARTITION_POSITION != value)
                {
                    _PARTITION_POSITION = value;
                    OnPropertyChanged("PARTITION_POSITION");
                }
            }
        }
        private global::System.Nullable<decimal> _PARTITION_POSITION;

    
        /// <summary>
        /// There are no comments for STATUS in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public virtual string STATUS
        {
            get
            {
                return _STATUS;
            }
            set
            {
                if (_STATUS != value)
                {
                    _STATUS = value;
                    OnPropertyChanged("STATUS");
                }
            }
        }
        private string _STATUS;

    
        /// <summary>
        /// There are no comments for TABLESPACE_NAME in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public virtual string TABLESPACE_NAME
        {
            get
            {
                return _TABLESPACE_NAME;
            }
            set
            {
                if (_TABLESPACE_NAME != value)
                {
                    _TABLESPACE_NAME = value;
                    OnPropertyChanged("TABLESPACE_NAME");
                }
            }
        }
        private string _TABLESPACE_NAME;

    
        /// <summary>
        /// There are no comments for PCT_FREE in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> PCT_FREE
        {
            get
            {
                return _PCT_FREE;
            }
            set
            {
                if (_PCT_FREE != value)
                {
                    _PCT_FREE = value;
                    OnPropertyChanged("PCT_FREE");
                }
            }
        }
        private global::System.Nullable<decimal> _PCT_FREE;

    
        /// <summary>
        /// There are no comments for INI_TRANS in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> INI_TRANS
        {
            get
            {
                return _INI_TRANS;
            }
            set
            {
                if (_INI_TRANS != value)
                {
                    _INI_TRANS = value;
                    OnPropertyChanged("INI_TRANS");
                }
            }
        }
        private global::System.Nullable<decimal> _INI_TRANS;

    
        /// <summary>
        /// There are no comments for MAX_TRANS in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> MAX_TRANS
        {
            get
            {
                return _MAX_TRANS;
            }
            set
            {
                if (_MAX_TRANS != value)
                {
                    _MAX_TRANS = value;
                    OnPropertyChanged("MAX_TRANS");
                }
            }
        }
        private global::System.Nullable<decimal> _MAX_TRANS;

    
        /// <summary>
        /// There are no comments for INITIAL_EXTENT in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> INITIAL_EXTENT
        {
            get
            {
                return _INITIAL_EXTENT;
            }
            set
            {
                if (_INITIAL_EXTENT != value)
                {
                    _INITIAL_EXTENT = value;
                    OnPropertyChanged("INITIAL_EXTENT");
                }
            }
        }
        private global::System.Nullable<decimal> _INITIAL_EXTENT;

    
        /// <summary>
        /// There are no comments for NEXT_EXTENT in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> NEXT_EXTENT
        {
            get
            {
                return _NEXT_EXTENT;
            }
            set
            {
                if (_NEXT_EXTENT != value)
                {
                    _NEXT_EXTENT = value;
                    OnPropertyChanged("NEXT_EXTENT");
                }
            }
        }
        private global::System.Nullable<decimal> _NEXT_EXTENT;

    
        /// <summary>
        /// There are no comments for MIN_EXTENT in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> MIN_EXTENT
        {
            get
            {
                return _MIN_EXTENT;
            }
            set
            {
                if (_MIN_EXTENT != value)
                {
                    _MIN_EXTENT = value;
                    OnPropertyChanged("MIN_EXTENT");
                }
            }
        }
        private global::System.Nullable<decimal> _MIN_EXTENT;

    
        /// <summary>
        /// There are no comments for MAX_EXTENT in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> MAX_EXTENT
        {
            get
            {
                return _MAX_EXTENT;
            }
            set
            {
                if (_MAX_EXTENT != value)
                {
                    _MAX_EXTENT = value;
                    OnPropertyChanged("MAX_EXTENT");
                }
            }
        }
        private global::System.Nullable<decimal> _MAX_EXTENT;

    
        /// <summary>
        /// There are no comments for PCT_INCREASE in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> PCT_INCREASE
        {
            get
            {
                return _PCT_INCREASE;
            }
            set
            {
                if (_PCT_INCREASE != value)
                {
                    _PCT_INCREASE = value;
                    OnPropertyChanged("PCT_INCREASE");
                }
            }
        }
        private global::System.Nullable<decimal> _PCT_INCREASE;

    
        /// <summary>
        /// There are no comments for FREELISTS in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> FREELISTS
        {
            get
            {
                return _FREELISTS;
            }
            set
            {
                if (_FREELISTS != value)
                {
                    _FREELISTS = value;
                    OnPropertyChanged("FREELISTS");
                }
            }
        }
        private global::System.Nullable<decimal> _FREELISTS;

    
        /// <summary>
        /// There are no comments for FREELIST_GROUPS in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> FREELIST_GROUPS
        {
            get
            {
                return _FREELIST_GROUPS;
            }
            set
            {
                if (_FREELIST_GROUPS != value)
                {
                    _FREELIST_GROUPS = value;
                    OnPropertyChanged("FREELIST_GROUPS");
                }
            }
        }
        private global::System.Nullable<decimal> _FREELIST_GROUPS;

    
        /// <summary>
        /// There are no comments for LOGGING in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(7)]
        public virtual string LOGGING
        {
            get
            {
                return _LOGGING;
            }
            set
            {
                if (_LOGGING != value)
                {
                    _LOGGING = value;
                    OnPropertyChanged("LOGGING");
                }
            }
        }
        private string _LOGGING;

    
        /// <summary>
        /// There are no comments for COMPRESSION in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public virtual string COMPRESSION
        {
            get
            {
                return _COMPRESSION;
            }
            set
            {
                if (_COMPRESSION != value)
                {
                    _COMPRESSION = value;
                    OnPropertyChanged("COMPRESSION");
                }
            }
        }
        private string _COMPRESSION;

    
        /// <summary>
        /// There are no comments for BLEVEL in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> BLEVEL
        {
            get
            {
                return _BLEVEL;
            }
            set
            {
                if (_BLEVEL != value)
                {
                    _BLEVEL = value;
                    OnPropertyChanged("BLEVEL");
                }
            }
        }
        private global::System.Nullable<decimal> _BLEVEL;

    
        /// <summary>
        /// There are no comments for LEAF_BLOCKS in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> LEAF_BLOCKS
        {
            get
            {
                return _LEAF_BLOCKS;
            }
            set
            {
                if (_LEAF_BLOCKS != value)
                {
                    _LEAF_BLOCKS = value;
                    OnPropertyChanged("LEAF_BLOCKS");
                }
            }
        }
        private global::System.Nullable<decimal> _LEAF_BLOCKS;

    
        /// <summary>
        /// There are no comments for DISTINCT_KEYS in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> DISTINCT_KEYS
        {
            get
            {
                return _DISTINCT_KEYS;
            }
            set
            {
                if (_DISTINCT_KEYS != value)
                {
                    _DISTINCT_KEYS = value;
                    OnPropertyChanged("DISTINCT_KEYS");
                }
            }
        }
        private global::System.Nullable<decimal> _DISTINCT_KEYS;

    
        /// <summary>
        /// There are no comments for AVG_LEAF_BLOCKS_PER_KEY in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> AVG_LEAF_BLOCKS_PER_KEY
        {
            get
            {
                return _AVG_LEAF_BLOCKS_PER_KEY;
            }
            set
            {
                if (_AVG_LEAF_BLOCKS_PER_KEY != value)
                {
                    _AVG_LEAF_BLOCKS_PER_KEY = value;
                    OnPropertyChanged("AVG_LEAF_BLOCKS_PER_KEY");
                }
            }
        }
        private global::System.Nullable<decimal> _AVG_LEAF_BLOCKS_PER_KEY;

    
        /// <summary>
        /// There are no comments for AVG_DATA_BLOCKS_PER_KEY in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> AVG_DATA_BLOCKS_PER_KEY
        {
            get
            {
                return _AVG_DATA_BLOCKS_PER_KEY;
            }
            set
            {
                if (_AVG_DATA_BLOCKS_PER_KEY != value)
                {
                    _AVG_DATA_BLOCKS_PER_KEY = value;
                    OnPropertyChanged("AVG_DATA_BLOCKS_PER_KEY");
                }
            }
        }
        private global::System.Nullable<decimal> _AVG_DATA_BLOCKS_PER_KEY;

    
        /// <summary>
        /// There are no comments for CLUSTERING_FACTOR in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> CLUSTERING_FACTOR
        {
            get
            {
                return _CLUSTERING_FACTOR;
            }
            set
            {
                if (_CLUSTERING_FACTOR != value)
                {
                    _CLUSTERING_FACTOR = value;
                    OnPropertyChanged("CLUSTERING_FACTOR");
                }
            }
        }
        private global::System.Nullable<decimal> _CLUSTERING_FACTOR;

    
        /// <summary>
        /// There are no comments for NUM_ROWS in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> NUM_ROWS
        {
            get
            {
                return _NUM_ROWS;
            }
            set
            {
                if (_NUM_ROWS != value)
                {
                    _NUM_ROWS = value;
                    OnPropertyChanged("NUM_ROWS");
                }
            }
        }
        private global::System.Nullable<decimal> _NUM_ROWS;

    
        /// <summary>
        /// There are no comments for SAMPLE_SIZE in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> SAMPLE_SIZE
        {
            get
            {
                return _SAMPLE_SIZE;
            }
            set
            {
                if (_SAMPLE_SIZE != value)
                {
                    _SAMPLE_SIZE = value;
                    OnPropertyChanged("SAMPLE_SIZE");
                }
            }
        }
        private global::System.Nullable<decimal> _SAMPLE_SIZE;

    
        /// <summary>
        /// There are no comments for LAST_ANALYZED in the schema.
        /// </summary>
        public virtual global::System.Nullable<System.DateTime> LAST_ANALYZED
        {
            get
            {
                return _LAST_ANALYZED;
            }
            set
            {
                if (_LAST_ANALYZED != value)
                {
                    _LAST_ANALYZED = value;
                    OnPropertyChanged("LAST_ANALYZED");
                }
            }
        }
        private global::System.Nullable<System.DateTime> _LAST_ANALYZED;

    
        /// <summary>
        /// There are no comments for BUFFER_POOL in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(7)]
        public virtual string BUFFER_POOL
        {
            get
            {
                return _BUFFER_POOL;
            }
            set
            {
                if (_BUFFER_POOL != value)
                {
                    _BUFFER_POOL = value;
                    OnPropertyChanged("BUFFER_POOL");
                }
            }
        }
        private string _BUFFER_POOL;

    
        /// <summary>
        /// There are no comments for USER_STATS in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public virtual string USER_STATS
        {
            get
            {
                return _USER_STATS;
            }
            set
            {
                if (_USER_STATS != value)
                {
                    _USER_STATS = value;
                    OnPropertyChanged("USER_STATS");
                }
            }
        }
        private string _USER_STATS;

    
        /// <summary>
        /// There are no comments for PCT_DIRECT_ACCESS in the schema.
        /// </summary>
        public virtual global::System.Nullable<decimal> PCT_DIRECT_ACCESS
        {
            get
            {
                return _PCT_DIRECT_ACCESS;
            }
            set
            {
                if (_PCT_DIRECT_ACCESS != value)
                {
                    _PCT_DIRECT_ACCESS = value;
                    OnPropertyChanged("PCT_DIRECT_ACCESS");
                }
            }
        }
        private global::System.Nullable<decimal> _PCT_DIRECT_ACCESS;

    
        /// <summary>
        /// There are no comments for GLOBAL_STATS in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public virtual string GLOBAL_STATS
        {
            get
            {
                return _GLOBAL_STATS;
            }
            set
            {
                if (_GLOBAL_STATS != value)
                {
                    _GLOBAL_STATS = value;
                    OnPropertyChanged("GLOBAL_STATS");
                }
            }
        }
        private string _GLOBAL_STATS;

    
        /// <summary>
        /// There are no comments for DOMIDX_OPSTATUS in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(6)]
        public virtual string DOMIDX_OPSTATUS
        {
            get
            {
                return _DOMIDX_OPSTATUS;
            }
            set
            {
                if (_DOMIDX_OPSTATUS != value)
                {
                    _DOMIDX_OPSTATUS = value;
                    OnPropertyChanged("DOMIDX_OPSTATUS");
                }
            }
        }
        private string _DOMIDX_OPSTATUS;

    
        /// <summary>
        /// There are no comments for PARAMETERS in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public virtual string PARAMETERS
        {
            get
            {
                return _PARAMETERS;
            }
            set
            {
                if (_PARAMETERS != value)
                {
                    _PARAMETERS = value;
                    OnPropertyChanged("PARAMETERS");
                }
            }
        }
        private string _PARAMETERS;


        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            DBA_IND_PARTITIONS obj = new DBA_IND_PARTITIONS();
            obj.INDEX_OWNER = INDEX_OWNER;
            obj.INDEX_NAME = INDEX_NAME;
            obj.COMPOSITE = COMPOSITE;
            obj.PARTITION_NAME = PARTITION_NAME;
            obj.SUBPARTITION_COUNT = SUBPARTITION_COUNT;
            obj.HIGH_VALUE = HIGH_VALUE;
            obj.HIGH_VALUE_LENGTH = HIGH_VALUE_LENGTH;
            obj.PARTITION_POSITION = PARTITION_POSITION;
            obj.STATUS = STATUS;
            obj.TABLESPACE_NAME = TABLESPACE_NAME;
            obj.PCT_FREE = PCT_FREE;
            obj.INI_TRANS = INI_TRANS;
            obj.MAX_TRANS = MAX_TRANS;
            obj.INITIAL_EXTENT = INITIAL_EXTENT;
            obj.NEXT_EXTENT = NEXT_EXTENT;
            obj.MIN_EXTENT = MIN_EXTENT;
            obj.MAX_EXTENT = MAX_EXTENT;
            obj.PCT_INCREASE = PCT_INCREASE;
            obj.FREELISTS = FREELISTS;
            obj.FREELIST_GROUPS = FREELIST_GROUPS;
            obj.LOGGING = LOGGING;
            obj.COMPRESSION = COMPRESSION;
            obj.BLEVEL = BLEVEL;
            obj.LEAF_BLOCKS = LEAF_BLOCKS;
            obj.DISTINCT_KEYS = DISTINCT_KEYS;
            obj.AVG_LEAF_BLOCKS_PER_KEY = AVG_LEAF_BLOCKS_PER_KEY;
            obj.AVG_DATA_BLOCKS_PER_KEY = AVG_DATA_BLOCKS_PER_KEY;
            obj.CLUSTERING_FACTOR = CLUSTERING_FACTOR;
            obj.NUM_ROWS = NUM_ROWS;
            obj.SAMPLE_SIZE = SAMPLE_SIZE;
            obj.LAST_ANALYZED = LAST_ANALYZED;
            obj.BUFFER_POOL = BUFFER_POOL;
            obj.USER_STATS = USER_STATS;
            obj.PCT_DIRECT_ACCESS = PCT_DIRECT_ACCESS;
            obj.GLOBAL_STATS = GLOBAL_STATS;
            obj.DOMIDX_OPSTATUS = DOMIDX_OPSTATUS;
            obj.PARAMETERS = PARAMETERS;
            return obj;
        }

        #endregion
    
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
