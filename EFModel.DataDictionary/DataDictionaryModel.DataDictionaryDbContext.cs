//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Data.Common;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;
using System.Data.Entity.ModelConfiguration;
using System.Data.Entity.ModelConfiguration.Conventions;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;

namespace EFModel.DataDictionary
{
    public partial class DataDictionaryDbContext : DbContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new DataDictionaryDbContext object.
        /// </summary>
        public DataDictionaryDbContext() :
                base(@"name=DataDictionary")
        {
            Configure();
        }

        /// <summary>
        /// Initializes a new DataDictionaryDbContext object using the connection string found in the 'DataDictionaryDbContext' section of the application configuration file.
        /// </summary>
        public DataDictionaryDbContext(string nameOrConnectionString) :
                base(nameOrConnectionString)
        {
            Configure();
        }

        private void Configure()
        {
            this.Configuration.AutoDetectChangesEnabled = true;
            this.Configuration.LazyLoadingEnabled = true;
            this.Configuration.ProxyCreationEnabled = true;
            this.Configuration.ValidateOnSaveEnabled = true;
        }

        #endregion

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {

            throw new UnintentionalCodeFirstException();
        }

    
        /// <summary>
        /// All Roles which exist in the database
        /// </summary>
        public virtual DbSet<DBA_ROLES> DBA_ROLES { get; set; }
    
        /// <summary>
        /// Comments on columns of all tables and views
        /// </summary>
        public virtual DbSet<DBA_COL_COMMENTS> DBA_COL_COMMENTS { get; set; }
    
        /// <summary>
        /// All grants on columns in the database
        /// </summary>
        public virtual DbSet<DBA_COL_PRIVS> DBA_COL_PRIVS { get; set; }
    
        /// <summary>
        /// All database links in the database
        /// </summary>
        public virtual DbSet<DBA_DB_LINKS> DBA_DB_LINKS { get; set; }
    
        /// <summary>
        /// Description for all indexes in the database
        /// </summary>
        public virtual DbSet<DBA_INDEXES> DBA_INDEXES { get; set; }
    
        /// <summary>
        /// COLUMNs comprising INDEXes on all TABLEs and CLUSTERs
        /// </summary>
        public virtual DbSet<DBA_IND_COLUMNS> DBA_IND_COLUMNS { get; set; }
    
        /// <summary>
        /// Description of the dba functions/procedures/packages/types/triggers
        /// </summary>
        public virtual DbSet<DBA_PROCEDURES> DBA_PROCEDURES { get; set; }
    
        /// <summary>
        /// Description of rollback segments
        /// </summary>
        public virtual DbSet<DBA_ROLLBACK_SEGS> DBA_ROLLBACK_SEGS { get; set; }
    
        /// <summary>
        /// Roles granted to users and roles
        /// </summary>
        public virtual DbSet<DBA_ROLE_PRIVS> DBA_ROLE_PRIVS { get; set; }
    
        /// <summary>
        /// System privileges granted to users and roles
        /// </summary>
        public virtual DbSet<DBA_SYS_PRIVS> DBA_SYS_PRIVS { get; set; }
    
        /// <summary>
        /// Description of all SEQUENCEs in the database
        /// </summary>
        public virtual DbSet<DBA_SEQUENCES> DBA_SEQUENCES { get; set; }
    
        /// <summary>
        /// All synonyms in the database
        /// </summary>
        public virtual DbSet<DBA_SYNONYMS> DBA_SYNONYMS { get; set; }
    
        /// <summary>
        /// Description of all relational tables in the database
        /// </summary>
        public virtual DbSet<DBA_TABLES> DBA_TABLES { get; set; }
    
        /// <summary>
        /// Description of all object and relational tables in the database
        /// </summary>
        public virtual DbSet<DBA_ALL_TABLES> DBA_ALL_TABLES { get; set; }
    
        /// <summary>
        /// Columns of user's tables, views and clusters
        /// </summary>
        public virtual DbSet<DBA_TAB_COLUMNS> DBA_TAB_COLUMNS { get; set; }
    
        /// <summary>
        /// Comments on all tables and views in the database
        /// </summary>
        public virtual DbSet<DBA_TAB_COMMENTS> DBA_TAB_COMMENTS { get; set; }
    
        /// <summary>
        /// All grants on objects in the database
        /// </summary>
        public virtual DbSet<DBA_TAB_PRIVS> DBA_TAB_PRIVS { get; set; }
    
        /// <summary>
        /// Information about all users of the database
        /// </summary>
        public virtual DbSet<DBA_USERS> DBA_USERS { get; set; }
    
        /// <summary>
        /// Description of all views in the database
        /// </summary>
        public virtual DbSet<DBA_VIEWS> DBA_VIEWS { get; set; }
    
        /// <summary>
        /// Constraint definitions on all tables
        /// </summary>
        public virtual DbSet<DBA_CONSTRAINTS> DBA_CONSTRAINTS { get; set; }
    
        /// <summary>
        /// Information about accessible columns in constraint definitions
        /// </summary>
        public virtual DbSet<DBA_CONS_COLUMNS> DBA_CONS_COLUMNS { get; set; }
    
        /// <summary>
        /// Source tables available for Change Data Capture
        /// </summary>
        public virtual DbSet<DBA_SOURCE_TABLES> DBA_SOURCE_TABLES { get; set; }
    
        /// <summary>
        /// There are no comments for DBA_PART_TABLES in the schema.
        /// </summary>
        public virtual DbSet<DBA_PART_TABLES> DBA_PART_TABLES { get; set; }
    
        /// <summary>
        /// There are no comments for DBA_PART_INDEXES in the schema.
        /// </summary>
        public virtual DbSet<DBA_PART_INDEXES> DBA_PART_INDEXES { get; set; }
    
        /// <summary>
        /// There are no comments for DBA_PART_KEY_COLUMNS in the schema.
        /// </summary>
        public virtual DbSet<DBA_PART_KEY_COLUMNS> DBA_PART_KEY_COLUMNS { get; set; }
    
        /// <summary>
        /// There are no comments for DBA_TAB_PARTITIONS in the schema.
        /// </summary>
        public virtual DbSet<DBA_TAB_PARTITIONS> DBA_TAB_PARTITIONS { get; set; }
    
        /// <summary>
        /// There are no comments for DBA_IND_PARTITIONS in the schema.
        /// </summary>
        public virtual DbSet<DBA_IND_PARTITIONS> DBA_IND_PARTITIONS { get; set; }
    
        /// <summary>
        /// There are no comments for DBA_TAB_SUBPARTITIONS in the schema.
        /// </summary>
        public virtual DbSet<DBA_TAB_SUBPARTITIONS> DBA_TAB_SUBPARTITIONS { get; set; }
    
        /// <summary>
        /// There are no comments for DBA_IND_SUBPARTITIONS in the schema.
        /// </summary>
        public virtual DbSet<DBA_IND_SUBPARTITIONS> DBA_IND_SUBPARTITIONS { get; set; }
    
        /// <summary>
        /// There are no comments for DBA_SUBPART_KEY_COLUMNS in the schema.
        /// </summary>
        public virtual DbSet<DBA_SUBPART_KEY_COLUMNS> DBA_SUBPART_KEY_COLUMNS { get; set; }
    
        /// <summary>
        /// There are no comments for DBA_SUBPARTITION_TEMPLATES in the schema.
        /// </summary>
        public virtual DbSet<DBA_SUBPARTITION_TEMPLATES> DBA_SUBPARTITION_TEMPLATES { get; set; }
    
        /// <summary>
        /// Description of all types in the database
        /// </summary>
        public virtual DbSet<DBA_TYPES> DBA_TYPES { get; set; }
    
        /// <summary>
        /// Description of the columns that appear in the GROUP BY
        /// list of a materialized view accessible to dba
        /// </summary>
        public virtual DbSet<DBA_MVIEW_KEYS> DBA_MVIEW_KEYS { get; set; }
    
        /// <summary>
        /// Description of a join between two columns in the
        /// WHERE clause of a materialized view accessible to dba
        /// </summary>
        public virtual DbSet<DBA_MVIEW_JOINS> DBA_MVIEW_JOINS { get; set; }
    
        /// <summary>
        /// Comments on all materialized views in the database
        /// </summary>
        public virtual DbSet<DBA_MVIEW_COMMENTS> DBA_MVIEW_COMMENTS { get; set; }
    
        /// <summary>
        /// Source of all stored objects in the database
        /// </summary>
        public virtual DbSet<DBA_SOURCE> DBA_SOURCE { get; set; }
    
        /// <summary>
        /// All triggers in the database
        /// </summary>
        public virtual DbSet<DBA_TRIGGERS> DBA_TRIGGERS { get; set; }
    
        /// <summary>
        /// Column usage in all triggers
        /// </summary>
        public virtual DbSet<DBA_TRIGGER_COLS> DBA_TRIGGER_COLS { get; set; }
    
        /// <summary>
        /// Dependencies to and from objects
        /// </summary>
        public virtual DbSet<DBA_DEPENDENCIES> DBA_DEPENDENCIES { get; set; }
    
        /// <summary>
        /// All jobs in the database
        /// </summary>
        public virtual DbSet<DBA_JOBS> DBA_JOBS { get; set; }
    
        /// <summary>
        /// Storage allocated for all database segments
        /// </summary>
        public virtual DbSet<DBA_SEGMENTS> DBA_SEGMENTS { get; set; }
    
        /// <summary>
        /// Description of all tablespaces
        /// </summary>
        public virtual DbSet<DBA_TABLESPACES> DBA_TABLESPACES { get; set; }
    
        /// <summary>
        /// Tablespace quotas for all users
        /// </summary>
        public virtual DbSet<DBA_TS_QUOTAS> DBA_TS_QUOTAS { get; set; }
    
        /// <summary>
        /// All materialized views in the database
        /// </summary>
        public virtual DbSet<DBA_MVIEWS> DBA_MVIEWS { get; set; }
    
        /// <summary>
        /// All scheduler jobs in the database
        /// </summary>
        public virtual DbSet<DBA_SCHEDULER_JOBS> DBA_SCHEDULER_JOBS { get; set; }
    
        /// <summary>
        /// All scheduler classes in the database
        /// </summary>
        public virtual DbSet<DBA_SCHEDULER_JOB_CLASSES> DBA_SCHEDULER_JOB_CLASSES { get; set; }
    
        /// <summary>
        /// Permanent database properties
        /// </summary>
        public virtual DbSet<DATABASE_PROPERTIES> DATABASE_PROPERTIES { get; set; }
    
        /// <summary>
        /// System privileges granted to roles
        /// </summary>
        public virtual DbSet<ROLE_SYS_PRIVS> ROLE_SYS_PRIVS { get; set; }
    
        /// <summary>
        /// Table privileges granted to roles
        /// </summary>
        public virtual DbSet<ROLE_TAB_PRIVS> ROLE_TAB_PRIVS { get; set; }
    
        /// <summary>
        /// Roles which are granted to roles
        /// </summary>
        public virtual DbSet<ROLE_ROLE_PRIVS> ROLE_ROLE_PRIVS { get; set; }
    
        /// <summary>
        /// All objects in the database
        /// </summary>
        public virtual DbSet<DBA_OBJECTS> DBA_OBJECTS { get; set; }
    }
}
