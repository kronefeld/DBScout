//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;

namespace EFModel.DataDictionary
{

    /// <summary>
    /// Source of all stored objects in the database
    /// </summary>
    public partial class DBA_SOURCE : ICloneable, INotifyPropertyChanged    {

        public DBA_SOURCE()
        {
        }

        #region Properties
    
        /// <summary>
        /// There are no comments for OWNER in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string OWNER
        {
            get
            {
                return _OWNER;
            }
            set
            {
                if (_OWNER != value)
                {
                    _OWNER = value;
                    OnPropertyChanged("OWNER");
                }
            }
        }
        private string _OWNER;

    
        /// <summary>
        /// Name of the object
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string NAME
        {
            get
            {
                return _NAME;
            }
            set
            {
                if (_NAME != value)
                {
                    _NAME = value;
                    OnPropertyChanged("NAME");
                }
            }
        }
        private string _NAME;

    
        /// <summary>
        /// Type of the object: "TYPE", "TYPE BODY", "PROCEDURE", "FUNCTION",
        /// "PACKAGE", "PACKAGE BODY" or "JAVA SOURCE"
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string TYPE
        {
            get
            {
                return _TYPE;
            }
            set
            {
                if (_TYPE != value)
                {
                    _TYPE = value;
                    OnPropertyChanged("TYPE");
                }
            }
        }
        private string _TYPE;

    
        /// <summary>
        /// Line number of this line of source
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual decimal LINE
        {
            get
            {
                return _LINE;
            }
            set
            {
                if (_LINE != value)
                {
                    _LINE = value;
                    OnPropertyChanged("LINE");
                }
            }
        }
        private decimal _LINE;

    
        /// <summary>
        /// Source text
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string TEXT
        {
            get
            {
                return _TEXT;
            }
            set
            {
                if (_TEXT != value)
                {
                    _TEXT = value;
                    OnPropertyChanged("TEXT");
                }
            }
        }
        private string _TEXT;


        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            DBA_SOURCE obj = new DBA_SOURCE();
            obj.OWNER = OWNER;
            obj.NAME = NAME;
            obj.TYPE = TYPE;
            obj.LINE = LINE;
            obj.TEXT = TEXT;
            return obj;
        }

        #endregion
    
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
