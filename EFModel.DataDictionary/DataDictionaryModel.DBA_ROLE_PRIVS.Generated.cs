//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;

namespace EFModel.DataDictionary
{

    /// <summary>
    /// Roles granted to users and roles
    /// </summary>
    public partial class DBA_ROLE_PRIVS : ICloneable, INotifyPropertyChanged    {

        public DBA_ROLE_PRIVS()
        {
        }

        #region Properties
    
        /// <summary>
        /// Grantee Name, User or Role receiving the grant
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public virtual string GRANTEE
        {
            get
            {
                return _GRANTEE;
            }
            set
            {
                if (_GRANTEE != value)
                {
                    _GRANTEE = value;
                    OnPropertyChanged("GRANTEE");
                }
            }
        }
        private string _GRANTEE;

    
        /// <summary>
        /// Granted role name
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string GRANTED_ROLE
        {
            get
            {
                return _GRANTED_ROLE;
            }
            set
            {
                if (_GRANTED_ROLE != value)
                {
                    _GRANTED_ROLE = value;
                    OnPropertyChanged("GRANTED_ROLE");
                }
            }
        }
        private string _GRANTED_ROLE;

    
        /// <summary>
        /// Grant was with the ADMIN option
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public virtual string ADMIN_OPTION
        {
            get
            {
                return _ADMIN_OPTION;
            }
            set
            {
                if (_ADMIN_OPTION != value)
                {
                    _ADMIN_OPTION = value;
                    OnPropertyChanged("ADMIN_OPTION");
                }
            }
        }
        private string _ADMIN_OPTION;

    
        /// <summary>
        /// Role is designated as a DEFAULT ROLE for the user
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(3)]
        public virtual string DEFAULT_ROLE
        {
            get
            {
                return _DEFAULT_ROLE;
            }
            set
            {
                if (_DEFAULT_ROLE != value)
                {
                    _DEFAULT_ROLE = value;
                    OnPropertyChanged("DEFAULT_ROLE");
                }
            }
        }
        private string _DEFAULT_ROLE;


        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            DBA_ROLE_PRIVS obj = new DBA_ROLE_PRIVS();
            obj.GRANTEE = GRANTEE;
            obj.GRANTED_ROLE = GRANTED_ROLE;
            obj.ADMIN_OPTION = ADMIN_OPTION;
            obj.DEFAULT_ROLE = DEFAULT_ROLE;
            return obj;
        }

        #endregion
    
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
