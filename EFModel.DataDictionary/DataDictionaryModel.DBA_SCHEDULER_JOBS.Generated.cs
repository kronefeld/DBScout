//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;

namespace EFModel.DataDictionary
{

    /// <summary>
    /// All scheduler jobs in the database
    /// </summary>
    public partial class DBA_SCHEDULER_JOBS : ICloneable, INotifyPropertyChanged    {

        public DBA_SCHEDULER_JOBS()
        {
        }

        #region Properties
    
        /// <summary>
        /// Owner of the scheduler job
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string OWNER
        {
            get
            {
                return _OWNER;
            }
            set
            {
                if (_OWNER != value)
                {
                    _OWNER = value;
                    OnPropertyChanged("OWNER");
                }
            }
        }
        private string _OWNER;

    
        /// <summary>
        /// Name of the scheduler job
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string JOB_NAME
        {
            get
            {
                return _JOB_NAME;
            }
            set
            {
                if (_JOB_NAME != value)
                {
                    _JOB_NAME = value;
                    OnPropertyChanged("JOB_NAME");
                }
            }
        }
        private string _JOB_NAME;

    
        /// <summary>
        /// Subname of the scheduler job (for a job running a chain step)
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public virtual string JOB_SUBNAME
        {
            get
            {
                return _JOB_SUBNAME;
            }
            set
            {
                if (_JOB_SUBNAME != value)
                {
                    _JOB_SUBNAME = value;
                    OnPropertyChanged("JOB_SUBNAME");
                }
            }
        }
        private string _JOB_SUBNAME;

    
        /// <summary>
        /// Original creator of this job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public virtual string JOB_CREATOR
        {
            get
            {
                return _JOB_CREATOR;
            }
            set
            {
                if (_JOB_CREATOR != value)
                {
                    _JOB_CREATOR = value;
                    OnPropertyChanged("JOB_CREATOR");
                }
            }
        }
        private string _JOB_CREATOR;

    
        /// <summary>
        /// Client id of user creating job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(64)]
        public virtual string CLIENT_ID
        {
            get
            {
                return _CLIENT_ID;
            }
            set
            {
                if (_CLIENT_ID != value)
                {
                    _CLIENT_ID = value;
                    OnPropertyChanged("CLIENT_ID");
                }
            }
        }
        private string _CLIENT_ID;

    
        /// <summary>
        /// Global uid of user creating this job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(32)]
        public virtual string GLOBAL_UID
        {
            get
            {
                return _GLOBAL_UID;
            }
            set
            {
                if (_GLOBAL_UID != value)
                {
                    _GLOBAL_UID = value;
                    OnPropertyChanged("GLOBAL_UID");
                }
            }
        }
        private string _GLOBAL_UID;

    
        /// <summary>
        /// Owner of the program associated with the job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string PROGRAM_OWNER
        {
            get
            {
                return _PROGRAM_OWNER;
            }
            set
            {
                if (_PROGRAM_OWNER != value)
                {
                    _PROGRAM_OWNER = value;
                    OnPropertyChanged("PROGRAM_OWNER");
                }
            }
        }
        private string _PROGRAM_OWNER;

    
        /// <summary>
        /// Name of the program associated with the job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string PROGRAM_NAME
        {
            get
            {
                return _PROGRAM_NAME;
            }
            set
            {
                if (_PROGRAM_NAME != value)
                {
                    _PROGRAM_NAME = value;
                    OnPropertyChanged("PROGRAM_NAME");
                }
            }
        }
        private string _PROGRAM_NAME;

    
        /// <summary>
        /// Inlined job action type
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(16)]
        public virtual string JOB_TYPE
        {
            get
            {
                return _JOB_TYPE;
            }
            set
            {
                if (_JOB_TYPE != value)
                {
                    _JOB_TYPE = value;
                    OnPropertyChanged("JOB_TYPE");
                }
            }
        }
        private string _JOB_TYPE;

    
        /// <summary>
        /// Inlined job action
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string JOB_ACTION
        {
            get
            {
                return _JOB_ACTION;
            }
            set
            {
                if (_JOB_ACTION != value)
                {
                    _JOB_ACTION = value;
                    OnPropertyChanged("JOB_ACTION");
                }
            }
        }
        private string _JOB_ACTION;

    
        /// <summary>
        /// Inlined job number of arguments
        /// </summary>
        public virtual global::System.Nullable<decimal> NUMBER_OF_ARGUMENTS
        {
            get
            {
                return _NUMBER_OF_ARGUMENTS;
            }
            set
            {
                if (_NUMBER_OF_ARGUMENTS != value)
                {
                    _NUMBER_OF_ARGUMENTS = value;
                    OnPropertyChanged("NUMBER_OF_ARGUMENTS");
                }
            }
        }
        private global::System.Nullable<decimal> _NUMBER_OF_ARGUMENTS;

    
        /// <summary>
        /// Owner of the schedule that this job uses (can be a window or window group)
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string SCHEDULE_OWNER
        {
            get
            {
                return _SCHEDULE_OWNER;
            }
            set
            {
                if (_SCHEDULE_OWNER != value)
                {
                    _SCHEDULE_OWNER = value;
                    OnPropertyChanged("SCHEDULE_OWNER");
                }
            }
        }
        private string _SCHEDULE_OWNER;

    
        /// <summary>
        /// Name of the schedule that this job uses (can be a window or window group)
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string SCHEDULE_NAME
        {
            get
            {
                return _SCHEDULE_NAME;
            }
            set
            {
                if (_SCHEDULE_NAME != value)
                {
                    _SCHEDULE_NAME = value;
                    OnPropertyChanged("SCHEDULE_NAME");
                }
            }
        }
        private string _SCHEDULE_NAME;

    
        /// <summary>
        /// Type of the schedule that this job uses
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(12)]
        public virtual string SCHEDULE_TYPE
        {
            get
            {
                return _SCHEDULE_TYPE;
            }
            set
            {
                if (_SCHEDULE_TYPE != value)
                {
                    _SCHEDULE_TYPE = value;
                    OnPropertyChanged("SCHEDULE_TYPE");
                }
            }
        }
        private string _SCHEDULE_TYPE;

    
        /// <summary>
        /// Original scheduled start date of this job (for an inlined schedule)
        /// </summary>
        public virtual global::System.Nullable<System.DateTimeOffset> START_DATE
        {
            get
            {
                return _START_DATE;
            }
            set
            {
                if (_START_DATE != value)
                {
                    _START_DATE = value;
                    OnPropertyChanged("START_DATE");
                }
            }
        }
        private global::System.Nullable<System.DateTimeOffset> _START_DATE;

    
        /// <summary>
        /// Inlined schedule PL/SQL expression or calendar string
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string REPEAT_INTERVAL
        {
            get
            {
                return _REPEAT_INTERVAL;
            }
            set
            {
                if (_REPEAT_INTERVAL != value)
                {
                    _REPEAT_INTERVAL = value;
                    OnPropertyChanged("REPEAT_INTERVAL");
                }
            }
        }
        private string _REPEAT_INTERVAL;

    
        /// <summary>
        /// Owner of source queue into which event will be raised
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public virtual string EVENT_QUEUE_OWNER
        {
            get
            {
                return _EVENT_QUEUE_OWNER;
            }
            set
            {
                if (_EVENT_QUEUE_OWNER != value)
                {
                    _EVENT_QUEUE_OWNER = value;
                    OnPropertyChanged("EVENT_QUEUE_OWNER");
                }
            }
        }
        private string _EVENT_QUEUE_OWNER;

    
        /// <summary>
        /// Name of source queue into which event will be raised
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public virtual string EVENT_QUEUE_NAME
        {
            get
            {
                return _EVENT_QUEUE_NAME;
            }
            set
            {
                if (_EVENT_QUEUE_NAME != value)
                {
                    _EVENT_QUEUE_NAME = value;
                    OnPropertyChanged("EVENT_QUEUE_NAME");
                }
            }
        }
        private string _EVENT_QUEUE_NAME;

    
        /// <summary>
        /// Name of AQ agent used by user on the event source queue (if it is a secure queue)
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public virtual string EVENT_QUEUE_AGENT
        {
            get
            {
                return _EVENT_QUEUE_AGENT;
            }
            set
            {
                if (_EVENT_QUEUE_AGENT != value)
                {
                    _EVENT_QUEUE_AGENT = value;
                    OnPropertyChanged("EVENT_QUEUE_AGENT");
                }
            }
        }
        private string _EVENT_QUEUE_AGENT;

    
        /// <summary>
        /// Boolean expression used as subscription rule for event on the source queue
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string EVENT_CONDITION
        {
            get
            {
                return _EVENT_CONDITION;
            }
            set
            {
                if (_EVENT_CONDITION != value)
                {
                    _EVENT_CONDITION = value;
                    OnPropertyChanged("EVENT_CONDITION");
                }
            }
        }
        private string _EVENT_CONDITION;

    
        /// <summary>
        /// Name of rule used by the coordinator to trigger event based job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(65)]
        public virtual string EVENT_RULE
        {
            get
            {
                return _EVENT_RULE;
            }
            set
            {
                if (_EVENT_RULE != value)
                {
                    _EVENT_RULE = value;
                    OnPropertyChanged("EVENT_RULE");
                }
            }
        }
        private string _EVENT_RULE;

    
        /// <summary>
        /// Date after which this job will no longer run (for an inlined schedule)
        /// </summary>
        public virtual global::System.Nullable<System.DateTimeOffset> END_DATE
        {
            get
            {
                return _END_DATE;
            }
            set
            {
                if (_END_DATE != value)
                {
                    _END_DATE = value;
                    OnPropertyChanged("END_DATE");
                }
            }
        }
        private global::System.Nullable<System.DateTimeOffset> _END_DATE;

    
        /// <summary>
        /// Name of job class associated with the job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public virtual string JOB_CLASS
        {
            get
            {
                return _JOB_CLASS;
            }
            set
            {
                if (_JOB_CLASS != value)
                {
                    _JOB_CLASS = value;
                    OnPropertyChanged("JOB_CLASS");
                }
            }
        }
        private string _JOB_CLASS;

    
        /// <summary>
        /// Whether the job is enabled
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public virtual string ENABLED
        {
            get
            {
                return _ENABLED;
            }
            set
            {
                if (_ENABLED != value)
                {
                    _ENABLED = value;
                    OnPropertyChanged("ENABLED");
                }
            }
        }
        private string _ENABLED;

    
        /// <summary>
        /// Whether this job will be dropped when it has completed
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public virtual string AUTO_DROP
        {
            get
            {
                return _AUTO_DROP;
            }
            set
            {
                if (_AUTO_DROP != value)
                {
                    _AUTO_DROP = value;
                    OnPropertyChanged("AUTO_DROP");
                }
            }
        }
        private string _AUTO_DROP;

    
        /// <summary>
        /// Whether this job can be restarted or not
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public virtual string RESTARTABLE
        {
            get
            {
                return _RESTARTABLE;
            }
            set
            {
                if (_RESTARTABLE != value)
                {
                    _RESTARTABLE = value;
                    OnPropertyChanged("RESTARTABLE");
                }
            }
        }
        private string _RESTARTABLE;

    
        /// <summary>
        /// Current state of the job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(15)]
        public virtual string STATE
        {
            get
            {
                return _STATE;
            }
            set
            {
                if (_STATE != value)
                {
                    _STATE = value;
                    OnPropertyChanged("STATE");
                }
            }
        }
        private string _STATE;

    
        /// <summary>
        /// Priority of the job relative to others within the same class
        /// </summary>
        public virtual global::System.Nullable<decimal> JOB_PRIORITY
        {
            get
            {
                return _JOB_PRIORITY;
            }
            set
            {
                if (_JOB_PRIORITY != value)
                {
                    _JOB_PRIORITY = value;
                    OnPropertyChanged("JOB_PRIORITY");
                }
            }
        }
        private global::System.Nullable<decimal> _JOB_PRIORITY;

    
        /// <summary>
        /// Number of times this job has run
        /// </summary>
        public virtual global::System.Nullable<decimal> RUN_COUNT
        {
            get
            {
                return _RUN_COUNT;
            }
            set
            {
                if (_RUN_COUNT != value)
                {
                    _RUN_COUNT = value;
                    OnPropertyChanged("RUN_COUNT");
                }
            }
        }
        private global::System.Nullable<decimal> _RUN_COUNT;

    
        /// <summary>
        /// Maximum number of times this job is scheduled to run
        /// </summary>
        public virtual global::System.Nullable<decimal> MAX_RUNS
        {
            get
            {
                return _MAX_RUNS;
            }
            set
            {
                if (_MAX_RUNS != value)
                {
                    _MAX_RUNS = value;
                    OnPropertyChanged("MAX_RUNS");
                }
            }
        }
        private global::System.Nullable<decimal> _MAX_RUNS;

    
        /// <summary>
        /// Number of times this job has failed to run
        /// </summary>
        public virtual global::System.Nullable<decimal> FAILURE_COUNT
        {
            get
            {
                return _FAILURE_COUNT;
            }
            set
            {
                if (_FAILURE_COUNT != value)
                {
                    _FAILURE_COUNT = value;
                    OnPropertyChanged("FAILURE_COUNT");
                }
            }
        }
        private global::System.Nullable<decimal> _FAILURE_COUNT;

    
        /// <summary>
        /// Number of times this job will be allowed to fail before being marked broken
        /// </summary>
        public virtual global::System.Nullable<decimal> MAX_FAILURES
        {
            get
            {
                return _MAX_FAILURES;
            }
            set
            {
                if (_MAX_FAILURES != value)
                {
                    _MAX_FAILURES = value;
                    OnPropertyChanged("MAX_FAILURES");
                }
            }
        }
        private global::System.Nullable<decimal> _MAX_FAILURES;

    
        /// <summary>
        /// Number of times this job has retried, if it is retrying.
        /// </summary>
        public virtual global::System.Nullable<decimal> RETRY_COUNT
        {
            get
            {
                return _RETRY_COUNT;
            }
            set
            {
                if (_RETRY_COUNT != value)
                {
                    _RETRY_COUNT = value;
                    OnPropertyChanged("RETRY_COUNT");
                }
            }
        }
        private global::System.Nullable<decimal> _RETRY_COUNT;

    
        /// <summary>
        /// Last date on which the job started running
        /// </summary>
        public virtual global::System.Nullable<System.DateTimeOffset> LAST_START_DATE
        {
            get
            {
                return _LAST_START_DATE;
            }
            set
            {
                if (_LAST_START_DATE != value)
                {
                    _LAST_START_DATE = value;
                    OnPropertyChanged("LAST_START_DATE");
                }
            }
        }
        private global::System.Nullable<System.DateTimeOffset> _LAST_START_DATE;

    
        /// <summary>
        /// How long the job took last time
        /// </summary>
        public virtual global::System.Nullable<System.TimeSpan> LAST_RUN_DURATION
        {
            get
            {
                return _LAST_RUN_DURATION;
            }
            set
            {
                if (_LAST_RUN_DURATION != value)
                {
                    _LAST_RUN_DURATION = value;
                    OnPropertyChanged("LAST_RUN_DURATION");
                }
            }
        }
        private global::System.Nullable<System.TimeSpan> _LAST_RUN_DURATION;

    
        /// <summary>
        /// Next date the job is scheduled to run on
        /// </summary>
        public virtual global::System.Nullable<System.DateTimeOffset> NEXT_RUN_DATE
        {
            get
            {
                return _NEXT_RUN_DATE;
            }
            set
            {
                if (_NEXT_RUN_DATE != value)
                {
                    _NEXT_RUN_DATE = value;
                    OnPropertyChanged("NEXT_RUN_DATE");
                }
            }
        }
        private global::System.Nullable<System.DateTimeOffset> _NEXT_RUN_DATE;

    
        /// <summary>
        /// Time in minutes after which a job which has not run yet will be rescheduled
        /// </summary>
        public virtual global::System.Nullable<System.TimeSpan> SCHEDULE_LIMIT
        {
            get
            {
                return _SCHEDULE_LIMIT;
            }
            set
            {
                if (_SCHEDULE_LIMIT != value)
                {
                    _SCHEDULE_LIMIT = value;
                    OnPropertyChanged("SCHEDULE_LIMIT");
                }
            }
        }
        private global::System.Nullable<System.TimeSpan> _SCHEDULE_LIMIT;

    
        /// <summary>
        /// This column is reserved for future use
        /// </summary>
        public virtual global::System.Nullable<System.TimeSpan> MAX_RUN_DURATION
        {
            get
            {
                return _MAX_RUN_DURATION;
            }
            set
            {
                if (_MAX_RUN_DURATION != value)
                {
                    _MAX_RUN_DURATION = value;
                    OnPropertyChanged("MAX_RUN_DURATION");
                }
            }
        }
        private global::System.Nullable<System.TimeSpan> _MAX_RUN_DURATION;

    
        /// <summary>
        /// Amount of logging that will be done pertaining to this job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public virtual string LOGGING_LEVEL
        {
            get
            {
                return _LOGGING_LEVEL;
            }
            set
            {
                if (_LOGGING_LEVEL != value)
                {
                    _LOGGING_LEVEL = value;
                    OnPropertyChanged("LOGGING_LEVEL");
                }
            }
        }
        private string _LOGGING_LEVEL;

    
        /// <summary>
        /// Whether this job will stop if a window it is associated with closes
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public virtual string STOP_ON_WINDOW_CLOSE
        {
            get
            {
                return _STOP_ON_WINDOW_CLOSE;
            }
            set
            {
                if (_STOP_ON_WINDOW_CLOSE != value)
                {
                    _STOP_ON_WINDOW_CLOSE = value;
                    OnPropertyChanged("STOP_ON_WINDOW_CLOSE");
                }
            }
        }
        private string _STOP_ON_WINDOW_CLOSE;

    
        /// <summary>
        /// Whether this job is sticky
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public virtual string INSTANCE_STICKINESS
        {
            get
            {
                return _INSTANCE_STICKINESS;
            }
            set
            {
                if (_INSTANCE_STICKINESS != value)
                {
                    _INSTANCE_STICKINESS = value;
                    OnPropertyChanged("INSTANCE_STICKINESS");
                }
            }
        }
        private string _INSTANCE_STICKINESS;

    
        /// <summary>
        /// List of job events to raise for this job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string RAISE_EVENTS
        {
            get
            {
                return _RAISE_EVENTS;
            }
            set
            {
                if (_RAISE_EVENTS != value)
                {
                    _RAISE_EVENTS = value;
                    OnPropertyChanged("RAISE_EVENTS");
                }
            }
        }
        private string _RAISE_EVENTS;

    
        /// <summary>
        /// Whether this is a system job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public virtual string SYSTEM
        {
            get
            {
                return _SYSTEM;
            }
            set
            {
                if (_SYSTEM != value)
                {
                    _SYSTEM = value;
                    OnPropertyChanged("SYSTEM");
                }
            }
        }
        private string _SYSTEM;

    
        /// <summary>
        /// Weight of this job
        /// </summary>
        public virtual global::System.Nullable<decimal> JOB_WEIGHT
        {
            get
            {
                return _JOB_WEIGHT;
            }
            set
            {
                if (_JOB_WEIGHT != value)
                {
                    _JOB_WEIGHT = value;
                    OnPropertyChanged("JOB_WEIGHT");
                }
            }
        }
        private global::System.Nullable<decimal> _JOB_WEIGHT;

    
        /// <summary>
        /// NLS environment of this job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string NLS_ENV
        {
            get
            {
                return _NLS_ENV;
            }
            set
            {
                if (_NLS_ENV != value)
                {
                    _NLS_ENV = value;
                    OnPropertyChanged("NLS_ENV");
                }
            }
        }
        private string _NLS_ENV;

    
        /// <summary>
        /// Source global database identifier
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        public virtual string SOURCE
        {
            get
            {
                return _SOURCE;
            }
            set
            {
                if (_SOURCE != value)
                {
                    _SOURCE = value;
                    OnPropertyChanged("SOURCE");
                }
            }
        }
        private string _SOURCE;

    
        /// <summary>
        /// Destination global database identifier
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        public virtual string DESTINATION
        {
            get
            {
                return _DESTINATION;
            }
            set
            {
                if (_DESTINATION != value)
                {
                    _DESTINATION = value;
                    OnPropertyChanged("DESTINATION");
                }
            }
        }
        private string _DESTINATION;

    
        /// <summary>
        /// Comments on the job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(240)]
        public virtual string COMMENTS
        {
            get
            {
                return _COMMENTS;
            }
            set
            {
                if (_COMMENTS != value)
                {
                    _COMMENTS = value;
                    OnPropertyChanged("COMMENTS");
                }
            }
        }
        private string _COMMENTS;

    
        /// <summary>
        /// This column is for internal use.
        /// </summary>
        public virtual global::System.Nullable<decimal> FLAGS
        {
            get
            {
                return _FLAGS;
            }
            set
            {
                if (_FLAGS != value)
                {
                    _FLAGS = value;
                    OnPropertyChanged("FLAGS");
                }
            }
        }
        private global::System.Nullable<decimal> _FLAGS;


        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            DBA_SCHEDULER_JOBS obj = new DBA_SCHEDULER_JOBS();
            obj.OWNER = OWNER;
            obj.JOB_NAME = JOB_NAME;
            obj.JOB_SUBNAME = JOB_SUBNAME;
            obj.JOB_CREATOR = JOB_CREATOR;
            obj.CLIENT_ID = CLIENT_ID;
            obj.GLOBAL_UID = GLOBAL_UID;
            obj.PROGRAM_OWNER = PROGRAM_OWNER;
            obj.PROGRAM_NAME = PROGRAM_NAME;
            obj.JOB_TYPE = JOB_TYPE;
            obj.JOB_ACTION = JOB_ACTION;
            obj.NUMBER_OF_ARGUMENTS = NUMBER_OF_ARGUMENTS;
            obj.SCHEDULE_OWNER = SCHEDULE_OWNER;
            obj.SCHEDULE_NAME = SCHEDULE_NAME;
            obj.SCHEDULE_TYPE = SCHEDULE_TYPE;
            obj.START_DATE = START_DATE;
            obj.REPEAT_INTERVAL = REPEAT_INTERVAL;
            obj.EVENT_QUEUE_OWNER = EVENT_QUEUE_OWNER;
            obj.EVENT_QUEUE_NAME = EVENT_QUEUE_NAME;
            obj.EVENT_QUEUE_AGENT = EVENT_QUEUE_AGENT;
            obj.EVENT_CONDITION = EVENT_CONDITION;
            obj.EVENT_RULE = EVENT_RULE;
            obj.END_DATE = END_DATE;
            obj.JOB_CLASS = JOB_CLASS;
            obj.ENABLED = ENABLED;
            obj.AUTO_DROP = AUTO_DROP;
            obj.RESTARTABLE = RESTARTABLE;
            obj.STATE = STATE;
            obj.JOB_PRIORITY = JOB_PRIORITY;
            obj.RUN_COUNT = RUN_COUNT;
            obj.MAX_RUNS = MAX_RUNS;
            obj.FAILURE_COUNT = FAILURE_COUNT;
            obj.MAX_FAILURES = MAX_FAILURES;
            obj.RETRY_COUNT = RETRY_COUNT;
            obj.LAST_START_DATE = LAST_START_DATE;
            obj.LAST_RUN_DURATION = LAST_RUN_DURATION;
            obj.NEXT_RUN_DATE = NEXT_RUN_DATE;
            obj.SCHEDULE_LIMIT = SCHEDULE_LIMIT;
            obj.MAX_RUN_DURATION = MAX_RUN_DURATION;
            obj.LOGGING_LEVEL = LOGGING_LEVEL;
            obj.STOP_ON_WINDOW_CLOSE = STOP_ON_WINDOW_CLOSE;
            obj.INSTANCE_STICKINESS = INSTANCE_STICKINESS;
            obj.RAISE_EVENTS = RAISE_EVENTS;
            obj.SYSTEM = SYSTEM;
            obj.JOB_WEIGHT = JOB_WEIGHT;
            obj.NLS_ENV = NLS_ENV;
            obj.SOURCE = SOURCE;
            obj.DESTINATION = DESTINATION;
            obj.COMMENTS = COMMENTS;
            obj.FLAGS = FLAGS;
            return obj;
        }

        #endregion
    
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
