//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;

namespace EFModel.DataDictionary
{

    /// <summary>
    /// COLUMNs comprising INDEXes on all TABLEs and CLUSTERs
    /// </summary>
    public partial class DBA_IND_COLUMNS : ICloneable, INotifyPropertyChanged    {

        public DBA_IND_COLUMNS()
        {
        }

        #region Properties
    
        /// <summary>
        /// Index owner
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string INDEX_OWNER
        {
            get
            {
                return _INDEX_OWNER;
            }
            set
            {
                if (_INDEX_OWNER != value)
                {
                    _INDEX_OWNER = value;
                    OnPropertyChanged("INDEX_OWNER");
                }
            }
        }
        private string _INDEX_OWNER;

    
        /// <summary>
        /// Index name
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string INDEX_NAME
        {
            get
            {
                return _INDEX_NAME;
            }
            set
            {
                if (_INDEX_NAME != value)
                {
                    _INDEX_NAME = value;
                    OnPropertyChanged("INDEX_NAME");
                }
            }
        }
        private string _INDEX_NAME;

    
        /// <summary>
        /// Table or cluster owner
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string TABLE_OWNER
        {
            get
            {
                return _TABLE_OWNER;
            }
            set
            {
                if (_TABLE_OWNER != value)
                {
                    _TABLE_OWNER = value;
                    OnPropertyChanged("TABLE_OWNER");
                }
            }
        }
        private string _TABLE_OWNER;

    
        /// <summary>
        /// Table or cluster name
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string TABLE_NAME
        {
            get
            {
                return _TABLE_NAME;
            }
            set
            {
                if (_TABLE_NAME != value)
                {
                    _TABLE_NAME = value;
                    OnPropertyChanged("TABLE_NAME");
                }
            }
        }
        private string _TABLE_NAME;

    
        /// <summary>
        /// Column name or attribute of object column
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string COLUMN_NAME
        {
            get
            {
                return _COLUMN_NAME;
            }
            set
            {
                if (_COLUMN_NAME != value)
                {
                    _COLUMN_NAME = value;
                    OnPropertyChanged("COLUMN_NAME");
                }
            }
        }
        private string _COLUMN_NAME;

    
        /// <summary>
        /// Position of column or attribute within index
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual decimal COLUMN_POSITION
        {
            get
            {
                return _COLUMN_POSITION;
            }
            set
            {
                if (_COLUMN_POSITION != value)
                {
                    _COLUMN_POSITION = value;
                    OnPropertyChanged("COLUMN_POSITION");
                }
            }
        }
        private decimal _COLUMN_POSITION;

    
        /// <summary>
        /// Maximum length of the column or attribute, in bytes
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual decimal COLUMN_LENGTH
        {
            get
            {
                return _COLUMN_LENGTH;
            }
            set
            {
                if (_COLUMN_LENGTH != value)
                {
                    _COLUMN_LENGTH = value;
                    OnPropertyChanged("COLUMN_LENGTH");
                }
            }
        }
        private decimal _COLUMN_LENGTH;

    
        /// <summary>
        /// Maximum length of the column or attribute, in characters
        /// </summary>
        public virtual global::System.Nullable<decimal> CHAR_LENGTH
        {
            get
            {
                return _CHAR_LENGTH;
            }
            set
            {
                if (_CHAR_LENGTH != value)
                {
                    _CHAR_LENGTH = value;
                    OnPropertyChanged("CHAR_LENGTH");
                }
            }
        }
        private global::System.Nullable<decimal> _CHAR_LENGTH;

    
        /// <summary>
        /// DESC if this column is sorted in descending order on disk, otherwise ASC
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4)]
        public virtual string DESCEND
        {
            get
            {
                return _DESCEND;
            }
            set
            {
                if (_DESCEND != value)
                {
                    _DESCEND = value;
                    OnPropertyChanged("DESCEND");
                }
            }
        }
        private string _DESCEND;


        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            DBA_IND_COLUMNS obj = new DBA_IND_COLUMNS();
            obj.INDEX_OWNER = INDEX_OWNER;
            obj.INDEX_NAME = INDEX_NAME;
            obj.TABLE_OWNER = TABLE_OWNER;
            obj.TABLE_NAME = TABLE_NAME;
            obj.COLUMN_NAME = COLUMN_NAME;
            obj.COLUMN_POSITION = COLUMN_POSITION;
            obj.COLUMN_LENGTH = COLUMN_LENGTH;
            obj.CHAR_LENGTH = CHAR_LENGTH;
            obj.DESCEND = DESCEND;
            return obj;
        }

        #endregion
    
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
