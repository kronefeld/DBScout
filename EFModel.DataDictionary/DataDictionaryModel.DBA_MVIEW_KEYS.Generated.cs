//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;

namespace EFModel.DataDictionary
{

    /// <summary>
    /// Description of the columns that appear in the GROUP BY
    /// list of a materialized view accessible to dba
    /// </summary>
    public partial class DBA_MVIEW_KEYS : ICloneable, INotifyPropertyChanged    {

        public DBA_MVIEW_KEYS()
        {
        }

        #region Properties
    
        /// <summary>
        /// Owner of the materialized view
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string OWNER
        {
            get
            {
                return _OWNER;
            }
            set
            {
                if (_OWNER != value)
                {
                    _OWNER = value;
                    OnPropertyChanged("OWNER");
                }
            }
        }
        private string _OWNER;

    
        /// <summary>
        /// Name of the materialized view
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string MVIEW_NAME
        {
            get
            {
                return _MVIEW_NAME;
            }
            set
            {
                if (_MVIEW_NAME != value)
                {
                    _MVIEW_NAME = value;
                    OnPropertyChanged("MVIEW_NAME");
                }
            }
        }
        private string _MVIEW_NAME;

    
        /// <summary>
        /// Position of this key within the SELECT list
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual decimal POSITION_IN_SELECT
        {
            get
            {
                return _POSITION_IN_SELECT;
            }
            set
            {
                if (_POSITION_IN_SELECT != value)
                {
                    _POSITION_IN_SELECT = value;
                    OnPropertyChanged("POSITION_IN_SELECT");
                }
            }
        }
        private decimal _POSITION_IN_SELECT;

    
        /// <summary>
        /// Name of the column in the container table
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string CONTAINER_COLUMN
        {
            get
            {
                return _CONTAINER_COLUMN;
            }
            set
            {
                if (_CONTAINER_COLUMN != value)
                {
                    _CONTAINER_COLUMN = value;
                    OnPropertyChanged("CONTAINER_COLUMN");
                }
            }
        }
        private string _CONTAINER_COLUMN;

    
        /// <summary>
        /// Owner of the detail object
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string DETAILOBJ_OWNER
        {
            get
            {
                return _DETAILOBJ_OWNER;
            }
            set
            {
                if (_DETAILOBJ_OWNER != value)
                {
                    _DETAILOBJ_OWNER = value;
                    OnPropertyChanged("DETAILOBJ_OWNER");
                }
            }
        }
        private string _DETAILOBJ_OWNER;

    
        /// <summary>
        /// Name of the detail object
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string DETAILOBJ_NAME
        {
            get
            {
                return _DETAILOBJ_NAME;
            }
            set
            {
                if (_DETAILOBJ_NAME != value)
                {
                    _DETAILOBJ_NAME = value;
                    OnPropertyChanged("DETAILOBJ_NAME");
                }
            }
        }
        private string _DETAILOBJ_NAME;

    
        /// <summary>
        /// Alias of the detail object
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public virtual string DETAILOBJ_ALIAS
        {
            get
            {
                return _DETAILOBJ_ALIAS;
            }
            set
            {
                if (_DETAILOBJ_ALIAS != value)
                {
                    _DETAILOBJ_ALIAS = value;
                    OnPropertyChanged("DETAILOBJ_ALIAS");
                }
            }
        }
        private string _DETAILOBJ_ALIAS;

    
        /// <summary>
        /// Type of the detail object: VIEW or TABLE
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(5)]
        public virtual string DETAILOBJ_TYPE
        {
            get
            {
                return _DETAILOBJ_TYPE;
            }
            set
            {
                if (_DETAILOBJ_TYPE != value)
                {
                    _DETAILOBJ_TYPE = value;
                    OnPropertyChanged("DETAILOBJ_TYPE");
                }
            }
        }
        private string _DETAILOBJ_TYPE;

    
        /// <summary>
        /// Name of the detail object column
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string DETAILOBJ_COLUMN
        {
            get
            {
                return _DETAILOBJ_COLUMN;
            }
            set
            {
                if (_DETAILOBJ_COLUMN != value)
                {
                    _DETAILOBJ_COLUMN = value;
                    OnPropertyChanged("DETAILOBJ_COLUMN");
                }
            }
        }
        private string _DETAILOBJ_COLUMN;


        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            DBA_MVIEW_KEYS obj = new DBA_MVIEW_KEYS();
            obj.OWNER = OWNER;
            obj.MVIEW_NAME = MVIEW_NAME;
            obj.POSITION_IN_SELECT = POSITION_IN_SELECT;
            obj.CONTAINER_COLUMN = CONTAINER_COLUMN;
            obj.DETAILOBJ_OWNER = DETAILOBJ_OWNER;
            obj.DETAILOBJ_NAME = DETAILOBJ_NAME;
            obj.DETAILOBJ_ALIAS = DETAILOBJ_ALIAS;
            obj.DETAILOBJ_TYPE = DETAILOBJ_TYPE;
            obj.DETAILOBJ_COLUMN = DETAILOBJ_COLUMN;
            return obj;
        }

        #endregion
    
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
