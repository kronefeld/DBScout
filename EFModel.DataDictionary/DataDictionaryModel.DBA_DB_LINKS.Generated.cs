//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;

namespace EFModel.DataDictionary
{

    /// <summary>
    /// All database links in the database
    /// </summary>
    public partial class DBA_DB_LINKS : ICloneable, INotifyPropertyChanged    {

        public DBA_DB_LINKS()
        {
        }

        #region Properties
    
        /// <summary>
        /// There are no comments for OWNER in the schema.
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string OWNER
        {
            get
            {
                return _OWNER;
            }
            set
            {
                if (_OWNER != value)
                {
                    _OWNER = value;
                    OnPropertyChanged("OWNER");
                }
            }
        }
        private string _OWNER;

    
        /// <summary>
        /// Name of the database link
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(128)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string DB_LINK
        {
            get
            {
                return _DB_LINK;
            }
            set
            {
                if (_DB_LINK != value)
                {
                    _DB_LINK = value;
                    OnPropertyChanged("DB_LINK");
                }
            }
        }
        private string _DB_LINK;

    
        /// <summary>
        /// Name of user to log on as
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        public virtual string USERNAME
        {
            get
            {
                return _USERNAME;
            }
            set
            {
                if (_USERNAME != value)
                {
                    _USERNAME = value;
                    OnPropertyChanged("USERNAME");
                }
            }
        }
        private string _USERNAME;

    
        /// <summary>
        /// SQL*Net string for connect
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(2000)]
        public virtual string HOST
        {
            get
            {
                return _HOST;
            }
            set
            {
                if (_HOST != value)
                {
                    _HOST = value;
                    OnPropertyChanged("HOST");
                }
            }
        }
        private string _HOST;

    
        /// <summary>
        /// Creation time of the database link
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual global::System.DateTime CREATED
        {
            get
            {
                return _CREATED;
            }
            set
            {
                if (_CREATED != value)
                {
                    _CREATED = value;
                    OnPropertyChanged("CREATED");
                }
            }
        }
        private global::System.DateTime _CREATED;


        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            DBA_DB_LINKS obj = new DBA_DB_LINKS();
            obj.OWNER = OWNER;
            obj.DB_LINK = DB_LINK;
            obj.USERNAME = USERNAME;
            obj.HOST = HOST;
            obj.CREATED = CREATED;
            return obj;
        }

        #endregion
    
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
