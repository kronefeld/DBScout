//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework DbContext template.
// Code is generated on: 07.07.2015 09:05:24
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;

namespace EFModel.DataDictionary
{

    /// <summary>
    /// All jobs in the database
    /// </summary>
    public partial class DBA_JOBS : ICloneable, INotifyPropertyChanged    {

        public DBA_JOBS()
        {
        }

        #region Properties
    
        /// <summary>
        /// Identifier of job.  Neither import/export nor repeated executions change it.
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual decimal JOB
        {
            get
            {
                return _JOB;
            }
            set
            {
                if (_JOB != value)
                {
                    _JOB = value;
                    OnPropertyChanged("JOB");
                }
            }
        }
        private decimal _JOB;

    
        /// <summary>
        /// USER who was logged in when the job was submitted
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string LOG_USER
        {
            get
            {
                return _LOG_USER;
            }
            set
            {
                if (_LOG_USER != value)
                {
                    _LOG_USER = value;
                    OnPropertyChanged("LOG_USER");
                }
            }
        }
        private string _LOG_USER;

    
        /// <summary>
        /// USER whose default privileges apply to this job
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string PRIV_USER
        {
            get
            {
                return _PRIV_USER;
            }
            set
            {
                if (_PRIV_USER != value)
                {
                    _PRIV_USER = value;
                    OnPropertyChanged("PRIV_USER");
                }
            }
        }
        private string _PRIV_USER;

    
        /// <summary>
        /// select * from bar  means  select * from schema_user.bar 
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(30)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string SCHEMA_USER
        {
            get
            {
                return _SCHEMA_USER;
            }
            set
            {
                if (_SCHEMA_USER != value)
                {
                    _SCHEMA_USER = value;
                    OnPropertyChanged("SCHEMA_USER");
                }
            }
        }
        private string _SCHEMA_USER;

    
        /// <summary>
        /// Date that this job last successfully executed
        /// </summary>
        public virtual global::System.Nullable<System.DateTime> LAST_DATE
        {
            get
            {
                return _LAST_DATE;
            }
            set
            {
                if (_LAST_DATE != value)
                {
                    _LAST_DATE = value;
                    OnPropertyChanged("LAST_DATE");
                }
            }
        }
        private global::System.Nullable<System.DateTime> _LAST_DATE;

    
        /// <summary>
        /// Same as LAST_DATE.  This is when the last successful execution started.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public virtual string LAST_SEC
        {
            get
            {
                return _LAST_SEC;
            }
            set
            {
                if (_LAST_SEC != value)
                {
                    _LAST_SEC = value;
                    OnPropertyChanged("LAST_SEC");
                }
            }
        }
        private string _LAST_SEC;

    
        /// <summary>
        /// Date that this job started executing (usually null if not executing)
        /// </summary>
        public virtual global::System.Nullable<System.DateTime> THIS_DATE
        {
            get
            {
                return _THIS_DATE;
            }
            set
            {
                if (_THIS_DATE != value)
                {
                    _THIS_DATE = value;
                    OnPropertyChanged("THIS_DATE");
                }
            }
        }
        private global::System.Nullable<System.DateTime> _THIS_DATE;

    
        /// <summary>
        /// Same as THIS_DATE.  This is when the last successful execution started.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public virtual string THIS_SEC
        {
            get
            {
                return _THIS_SEC;
            }
            set
            {
                if (_THIS_SEC != value)
                {
                    _THIS_SEC = value;
                    OnPropertyChanged("THIS_SEC");
                }
            }
        }
        private string _THIS_SEC;

    
        /// <summary>
        /// Date that this job will next be executed
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual global::System.DateTime NEXT_DATE
        {
            get
            {
                return _NEXT_DATE;
            }
            set
            {
                if (_NEXT_DATE != value)
                {
                    _NEXT_DATE = value;
                    OnPropertyChanged("NEXT_DATE");
                }
            }
        }
        private global::System.DateTime _NEXT_DATE;

    
        /// <summary>
        /// Same as NEXT_DATE.  The job becomes due for execution at this time.
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(8)]
        public virtual string NEXT_SEC
        {
            get
            {
                return _NEXT_SEC;
            }
            set
            {
                if (_NEXT_SEC != value)
                {
                    _NEXT_SEC = value;
                    OnPropertyChanged("NEXT_SEC");
                }
            }
        }
        private string _NEXT_SEC;

    
        /// <summary>
        /// Total wallclock time spent by the system on this job, in seconds
        /// </summary>
        public virtual global::System.Nullable<decimal> TOTAL_TIME
        {
            get
            {
                return _TOTAL_TIME;
            }
            set
            {
                if (_TOTAL_TIME != value)
                {
                    _TOTAL_TIME = value;
                    OnPropertyChanged("TOTAL_TIME");
                }
            }
        }
        private global::System.Nullable<decimal> _TOTAL_TIME;

    
        /// <summary>
        /// If Y, no attempt is being made to run this job.  See dbms_jobq.broken(job).
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(1)]
        public virtual string BROKEN
        {
            get
            {
                return _BROKEN;
            }
            set
            {
                if (_BROKEN != value)
                {
                    _BROKEN = value;
                    OnPropertyChanged("BROKEN");
                }
            }
        }
        private string _BROKEN;

    
        /// <summary>
        /// A date function, evaluated at the start of execution, becomes next NEXT_DATE
        /// </summary>
        [System.ComponentModel.DataAnnotations.Key]
        [System.ComponentModel.DataAnnotations.StringLength(200)]
        [System.ComponentModel.DataAnnotations.Required()]
        public virtual string INTERVAL
        {
            get
            {
                return _INTERVAL;
            }
            set
            {
                if (_INTERVAL != value)
                {
                    _INTERVAL = value;
                    OnPropertyChanged("INTERVAL");
                }
            }
        }
        private string _INTERVAL;

    
        /// <summary>
        /// How many times has this job started and failed since its last success?
        /// </summary>
        public virtual global::System.Nullable<decimal> FAILURES
        {
            get
            {
                return _FAILURES;
            }
            set
            {
                if (_FAILURES != value)
                {
                    _FAILURES = value;
                    OnPropertyChanged("FAILURES");
                }
            }
        }
        private global::System.Nullable<decimal> _FAILURES;

    
        /// <summary>
        /// Body of the anonymous PL/SQL block that this job executes
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string WHAT
        {
            get
            {
                return _WHAT;
            }
            set
            {
                if (_WHAT != value)
                {
                    _WHAT = value;
                    OnPropertyChanged("WHAT");
                }
            }
        }
        private string _WHAT;

    
        /// <summary>
        /// alter session parameters describing the NLS environment of the job
        /// </summary>
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public virtual string NLS_ENV
        {
            get
            {
                return _NLS_ENV;
            }
            set
            {
                if (_NLS_ENV != value)
                {
                    _NLS_ENV = value;
                    OnPropertyChanged("NLS_ENV");
                }
            }
        }
        private string _NLS_ENV;

    
        /// <summary>
        /// a versioned raw maintained by the kernel, for other session parameters
        /// </summary>
        public virtual byte[] MISC_ENV
        {
            get
            {
                return _MISC_ENV;
            }
            set
            {
                if (!StructuralComparisons.StructuralEqualityComparer.Equals(_MISC_ENV, value))
                {
                    _MISC_ENV = value;
                    OnPropertyChanged("MISC_ENV");
                }
            }
        }
        private byte[] _MISC_ENV;

    
        /// <summary>
        /// Instance number restricted to run the job
        /// </summary>
        public virtual global::System.Nullable<decimal> INSTANCE
        {
            get
            {
                return _INSTANCE;
            }
            set
            {
                if (_INSTANCE != value)
                {
                    _INSTANCE = value;
                    OnPropertyChanged("INSTANCE");
                }
            }
        }
        private global::System.Nullable<decimal> _INSTANCE;


        #endregion
    
        #region ICloneable Members

        public virtual object Clone()
        {
            DBA_JOBS obj = new DBA_JOBS();
            obj.JOB = JOB;
            obj.LOG_USER = LOG_USER;
            obj.PRIV_USER = PRIV_USER;
            obj.SCHEMA_USER = SCHEMA_USER;
            obj.LAST_DATE = LAST_DATE;
            obj.LAST_SEC = LAST_SEC;
            obj.THIS_DATE = THIS_DATE;
            obj.THIS_SEC = THIS_SEC;
            obj.NEXT_DATE = NEXT_DATE;
            obj.NEXT_SEC = NEXT_SEC;
            obj.TOTAL_TIME = TOTAL_TIME;
            obj.BROKEN = BROKEN;
            obj.INTERVAL = INTERVAL;
            obj.FAILURES = FAILURES;
            obj.WHAT = WHAT;
            obj.NLS_ENV = NLS_ENV;
            obj.MISC_ENV = MISC_ENV;
            obj.INSTANCE = INSTANCE;
            return obj;
        }

        #endregion
    
        #region INotifyPropertyChanged Members

        public event PropertyChangedEventHandler PropertyChanged;

        protected void OnPropertyChanged(string propertyName) {

          if (PropertyChanged != null)
            PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
        }

        #endregion
    }

}
